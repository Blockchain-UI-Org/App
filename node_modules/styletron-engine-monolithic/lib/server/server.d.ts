import type { StandardEngine } from "styletron-standard";
import type { StyleObject, FontFaceObject, KeyframesObject } from "styletron-standard";
export declare type sheetT = {
    css: string;
    attrs: {
        [x: string]: string;
    };
};
export declare type optionsT = {
    prefix?: string;
    strict?: boolean;
};
export declare type cacheT = {
    [key: string]: string;
};
declare class StyletronServer implements StandardEngine {
    cache: cacheT;
    opts: optionsT;
    constructor(opts?: optionsT);
    renderStyle(styles: StyleObject): string;
    renderFontFace(fontFace: FontFaceObject): string;
    renderKeyframes(keyframes: KeyframesObject): string;
    getStylesheets(): Array<sheetT>;
    getStylesheetsHtml(className?: string): string;
    getCss(): string;
}
export declare function generateHtmlString(sheets: Array<sheetT>, className: string): string;
export default StyletronServer;
//# sourceMappingURL=server.d.ts.map