"use strict";
globalThis["webpackHotUpdateapp"]("main",{

/***/ "./src/Components/baseWeb/overrides/button.tsx":
/*!*****************************************************!*\
  !*** ./src/Components/baseWeb/overrides/button.tsx ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buttonOverrides": () => (/* binding */ buttonOverrides)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _buttonLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buttonLoader */ "./src/Components/baseWeb/overrides/buttonLoader.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/baseWeb/overrides/button.tsx",
  _this = undefined;



const KIND = {
  contained: "contained",
  outlined: "outlined",
  text: "text"
};
const buttonVariants = {
  brand: "brand",
  positive: "positive",
  negative: "negative",
  neutral: "neutral",
  warning: "warning",
  decorative: "decorative"
};
const buttonSizes = $theme => {
  const {
    scale300,
    scale500,
    scale550,
    scale600,
    scale650,
    scale800,
    scale900,
    scale1000,
    scale1200,
    scale1400
  } = $theme.sizing;
  return {
    mini: {
      fontSize: scale500,
      height: scale900,
      padding: `0 ${scale300}`
    },
    compact: {
      fontSize: scale550,
      height: scale1000,
      padding: `0 ${scale600}`
    },
    default: {
      fontSize: scale600,
      height: scale1200,
      padding: `0 ${scale800}`
    },
    large: {
      fontSize: scale650,
      height: scale1400,
      padding: `0 ${scale900}`
    }
  };
};
const buttonOverrides = function ($theme) {
  let block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  let kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : KIND.contained;
  let variant = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : buttonVariants.brand;
  const isContained = kind === KIND.contained;
  const {
    colors,
    animation,
    sizing
  } = $theme;
  const {
    disabledBackground,
    disabledBackgroundContained,
    disabledBorder,
    disabledTextContained,
    disabledText,
    ...rest
  } = colors.button;
  const {
    scale100,
    scale300
  } = sizing;
  const {
    activeBackground,
    background,
    focus,
    hoverBackground,
    hoverText,
    loadingLeft,
    loadingMiddle,
    loadingRight,
    ...buttonVariant
  } = rest[variant || buttonVariants.brand];
  const {
    border,
    text
  } = buttonVariant[kind || KIND.contained];
  return {
    BaseButton: {
      style: _ref => {
        var _buttonSizes;
        let {
          $disabled,
          $size
        } = _ref;
        return {
          ...$theme.borders.borderWidth100,
          color: text,
          backgroundColor: isContained ? background : "transparent",
          borderColor: kind === KIND.text ? "transparent" : border,
          fontFamily: "Public Sans",
          fontWeight: 600,
          transitionDuration: `${animation.timing200}`,
          transitionTimingFunction: "ease, ease",
          width: block ? "100%" : "auto",
          ...((_buttonSizes = buttonSizes($theme)) === null || _buttonSizes === void 0 ? void 0 : _buttonSizes[$size]),
          ":active": {
            ...($disabled ? {} : {
              backgroundColor: activeBackground,
              color: hoverText
            })
          },
          ...($disabled ? {} : {
            ":hover": {
              backgroundColor: hoverBackground,
              borderColor: hoverBackground,
              color: hoverText
            },
            ":focus": {
              boxShadow: "none",
              outline: "solid",
              borderColor: focus,
              outlineColor: focus,
              outlineWidth: scale100
            }
          }),
          ":disabled": {
            backgroundColor: isContained ? disabledBackgroundContained : disabledBackground,
            borderColor: disabledBorder[kind],
            color: isContained ? disabledTextContained : disabledText
          }
        };
      }
    },
    StartEnhancer: {
      style: _ref2 => {
        let {
          $size
        } = _ref2;
        return {
          marginRight: $size === "compact" || $size === "mini" ? scale100 : scale300
        };
      }
    },
    EndEnhancer: {
      style: _ref3 => {
        let {
          $size
        } = _ref3;
        return {
          marginLeft: $size === "compact" || $size === "mini" ? scale100 : scale300
        };
      }
    },
    LoadingSpinner: {
      component: () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_buttonLoader__WEBPACK_IMPORTED_MODULE_1__.StyledLoader, {
        leftColor: loadingLeft,
        middleColor: loadingMiddle,
        rightColor: loadingRight
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 166,
        columnNumber: 9
      }, _this)
    }
  };
};


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.342dd8a7c5dc42d23ea5.hot-update.js.map