{"version":3,"file":"main.0e845b89d79b0eff35aa.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/progressBar/circleBar.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Box } from \"theme-ui\";\nimport { colorMode, ThemeColor } from \"../theme/colors\";\n\nexport interface CircleBarProps {\n  showValue?: boolean;\n  title: string;\n  themeColor: ThemeColor;\n  percent: number;\n}\n\nexport const CircleProgressBar = ({ themeColor = \"default\", percent = 0 }) => {\n  return (\n    <CircleProgressBarBase\n      //@ts-ignore\n      $colorMode={colorMode[themeColor]}\n      $percent={100 - percent}\n    >\n      <svg\n        className=\"circleContainer\"\n        viewBox=\"2 -2 28 36\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"circleContainerBackground\"\n          r=\"16\"\n          cx=\"16\"\n          cy=\"16\"\n        ></circle>\n        <circle className=\"circleOffset\" r=\"16\" cx=\"16\" cy=\"16\"></circle>\n      </svg>\n      <Percent>{percent}%</Percent>\n    </CircleProgressBarBase>\n  );\n};\n\nconst swatches = {\n  blue: \"#0091FF\",\n  blueBright: \"#3e8ff7\",\n  pink: \"#D356B9\",\n  pinkGmi: \"#EC5B94\",\n  red: \"#FF562B\",\n  orange: \"#D87C22\",\n  yellow: \"#FFC503\",\n  green: \"#1BB441\",\n  greenPrice: \"#68CE81\",\n  bluePrice: \"#50A7E9\",\n  redPrice: \"#F55858\",\n  purple: \"#7B61FF\",\n  black: \"#000\",\n  white: \"#FFF\",\n  \"grey-200\": \"#F5F5F5\",\n  \"grey-300\": \"#E4E4E4\",\n  \"grey-400\": \"#C0C0C0\",\n  \"grey-500\": \"#A7A7A7\",\n  \"grey-600\": \"#7C7C7C\",\n  \"grey-700\": \"#545454\",\n  \"grey-800\": \"#231F20\",\n  \"grey-900\": \"#151515\",\n  transparent: \"transparent\",\n};\n\nconst colors = {\n  ...swatches,\n  /* Aliases */\n  primary: swatches.blue,\n  secondary: swatches.pink,\n  background: swatches.black,\n  error: swatches.red,\n  text: swatches[\"grey-300\"],\n  disabled: swatches[\"grey-700\"],\n};\n\nexport default colors;\n\ninterface CircleBarBaseProps {\n  showValue?: boolean;\n  $percent: number;\n  $colorMode: Record<string, string>;\n}\n\nconst Percent = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 15%;\n  left: 50%;\n  color: white;\n  font-size: 20px;\n  z-index: 2;\n`;\n\nexport const CircleProgressBarBase = styled.div<CircleBarBaseProps>`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: green;\n\n  .circleContainer {\n    --dot-diameter: 100%;\n    --circle-border-width: 4px;\n    --default-color: #545454;\n    --completion-color: ${({ $colorMode }) => $colorMode?.midtone};\n    width: var(--dot-diameter);\n    height: var(--dot-diameter);\n    transform: rotate(-90deg);\n  }\n  .circleContainerBackground {\n    fill: none;\n    stroke: var(--default-color);\n    stroke-width: var(--circle-border-width);\n  }\n  .circleOffset {\n    fill: none;\n    stroke-linecap: round;\n    stroke: var(--completion-color);\n    stroke-dasharray: 100 100;\n    stroke-linecap: round;\n    stroke-width: var(--circle-border-width);\n    stroke-dashoffset: ${({ $percent }) => $percent};\n  }\n`;\nfunction transparentize(\n  arg0: number,\n  arg1: string\n): import(\"styled-components\").Interpolation<\n  import(\"styled-components\").ThemedStyledProps<\n    import(\"theme-ui\").BoxProps &\n      React.RefAttributes<any> &\n      ProgressBarBaseProps,\n    any\n  >\n> {\n  throw new Error(\"Function not implemented.\");\n}\n"],"names":[],"sourceRoot":""}