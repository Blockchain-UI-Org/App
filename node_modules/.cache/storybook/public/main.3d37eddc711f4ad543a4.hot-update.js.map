{"version":3,"file":"main.3d37eddc711f4ad543a4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AArBA;AAuBA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/components/Upshot/Accordion/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useState } from 'react'\\nimport { ComponentStory, ComponentMeta } from '@storybook/react'\\n\\nimport Accordion from '.'\\n\\nexport default {\\n  title: '@UI/Accordion',\\n  component: Accordion,\\n} as ComponentMeta<typeof Accordion>\\n\\nconst Template: ComponentStory<typeof Accordion> = (args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\\n\\nexport const Default = Template.bind({})\\n\\nDefault.args = {\\n  title: 'Price History',\\n}\\n\\nexport const Dropdown = Template.bind({})\\n\\nDropdown.args = {\\n  title: 'Price History',\\n  isDropdown: true,\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":51,\"line\":11},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":51,\"line\":11},\"endBody\":{\"col\":1,\"line\":32}},\"Dropdown\":{\"startLoc\":{\"col\":51,\"line\":11},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":51,\"line\":11},\"endBody\":{\"col\":1,\"line\":32}}};\n    \nimport React, { useState } from 'react'\nimport { ComponentStory, ComponentMeta } from '@storybook/react'\n\nimport Accordion from '.'\n\nexport default {\n  title: '@UI/Accordion',\n  component: Accordion,\n} as ComponentMeta<typeof Accordion>\n\nconst Template: ComponentStory<typeof Accordion> = (args) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Accordion\n      onClick={() => setOpen(!open)}\n      onClose={() => setOpen(false)}\n      {...{ open, ...args }}\n    >\n      <div>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n      </div>\n    </Accordion>\n  )\n}\n\nexport const Default = Template.bind({});\n\nDefault.args = {\n  title: 'Price History',\n}\n\nexport const Dropdown = Template.bind({});\nDropdown.args = {\n  title: 'Price History',\n  isDropdown: true,\n}\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\" }, ...Default.parameters };\nDropdown.parameters = { storySource: { source: \"(args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\" }, ...Dropdown.parameters };"],"names":[],"sourceRoot":""}