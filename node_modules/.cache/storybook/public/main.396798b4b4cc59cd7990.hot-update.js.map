{"version":3,"file":"main.396798b4b4cc59cd7990.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAJA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAlCA;AAMA;AAAA;AA8BA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAIA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAHA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AAIA;AAAA;AAHA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAtBA;AAKA;AAAA;AALA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAFA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxzOA;AAaA;AACA;AAgsources":["webpack://app/./src/Components/Avatar/Avatar.tsx","webpack://app/./src/Components/baseWeb/index.ts","webpack://app/./src/Components/baseWeb/overrides/button.tsx","webpack://app/./src/Components/baseWeb/overrides/buttonLoader.tsx","webpack://app/./src/Components/baseWeb/overrides/index.ts","webpack://app/./src/Components/baseWeb/overrides/input.ts","webpack://app/./src/Components/baseWeb/overrides/tick.ts","webpack://app/./src/Components/baseWeb/theme/buttons.ts","webpack://app/./src/Components/baseWeb/theme/index.ts"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport {\n  AvatarOverrides,\n  Avatar as BaseWebAvatar,\n  StyleProps,\n} from \"baseui/avatar\";\nimport deepmerge from \"deepmerge\";\nimport { useStyletron } from \"../baseWeb\";\n\ninterface AvatarProps {\n  name: string;\n  size?: string;\n  src?: string;\n  styleOverrides?: AvatarOverrides<StyleProps>;\n}\n\n/**\n * `Avatar` component.\n *\n * Demo:\n * - [Avatar](https://docs.blockfi.com/storybook/index.html?path=/docs/baseweb-content-avatar--default-story)\n *\n */\nconst Avatar: FunctionComponent<AvatarProps> = ({\n  name,\n  size,\n  src,\n  styleOverrides,\n}) => {\n  const [, theme] = useStyletron();\n  const { avatarBackground, avatarText } = theme.colors;\n\n  return (\n    <BaseWebAvatar\n      name={name}\n      overrides={deepmerge(\n        {\n          Root: {\n            style: {\n              backgroundColor: avatarBackground,\n              fontFamily: \"Public Sans\",\n            },\n          },\n          Initials: {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: \"14px\",\n              color: avatarText,\n            },\n          },\n        },\n        styleOverrides || {}\n      )}\n      size={size || theme.sizing.scale1000}\n      src={src}\n    />\n  );\n};\n\nexport { Avatar };\n","export * from \"./theme\";\nexport * from \"./overrides\";\n","import React from \"react\";\nimport { ButtonOverrides, SIZE } from \"baseui/button\";\nimport { StyleObject } from \"styletron-react\";\nimport { Theme } from \"@/src/baseWeb\";\nimport { StyledLoader } from \"./buttonLoader\";\n\ntype ButtonVariants =\n  | \"brand\"\n  | \"positive\"\n  | \"negative\"\n  | \"neutral\"\n  | \"warning\"\n  | \"decorative\";\n\nconst KIND = {\n  contained: \"contained\",\n  outlined: \"outlined\",\n  text: \"text\",\n};\n\ninterface StyleProps {\n  $disabled: boolean;\n  $size: SIZE[keyof SIZE];\n  variant: ButtonVariants;\n}\n\nconst buttonVariants = {\n  brand: \"brand\",\n  positive: \"positive\",\n  negative: \"negative\",\n  neutral: \"neutral\",\n  warning: \"warning\",\n  decorative: \"decorative\",\n};\n\nconst buttonSizes = ($theme: Theme) => {\n  const {\n    scale300,\n    scale500,\n    scale550,\n    scale600,\n    scale650,\n    scale800,\n    scale900,\n    scale1000,\n    scale1200,\n    scale1400,\n  } = $theme.sizing;\n  return {\n    mini: {\n      fontSize: scale500,\n      height: scale900,\n      padding: `0 ${scale300}`,\n    },\n    compact: {\n      fontSize: scale550,\n      height: scale1000,\n      padding: `0 ${scale600}`,\n    },\n    default: {\n      fontSize: scale600,\n      height: scale1200,\n      padding: `0 ${scale800}`,\n    },\n    large: {\n      fontSize: scale650,\n      height: scale1400,\n      padding: `0 ${scale900}`,\n    },\n  };\n};\n\nconst buttonOverrides = (\n  $theme: Theme,\n  block = false,\n  kind = KIND.contained,\n  variant = buttonVariants.brand\n): ButtonOverrides => {\n  const isContained = kind === KIND.contained;\n  const { colors, animation, sizing } = $theme;\n  const {\n    disabledBackground,\n    disabledBackgroundContained,\n    disabledBorder,\n    disabledTextContained,\n    disabledText,\n    ...rest\n  } = colors.button;\n  const { scale100, scale300 } = sizing;\n\n  const {\n    activeBackground,\n    background,\n    focus,\n    hoverBackground,\n    hoverText,\n    loadingLeft,\n    loadingMiddle,\n    loadingRight,\n    ...buttonVariant\n  } = rest[variant || buttonVariants.brand];\n\n  const { border, text } = buttonVariant[kind || KIND.contained];\n\n  return {\n    BaseButton: {\n      style: ({ $disabled, $size }: StyleProps): StyleObject => ({\n        ...$theme.borders.borderWidth100,\n        color: text,\n        backgroundColor: isContained ? background : \"transparent\",\n        borderColor: kind === KIND.text ? \"transparent\" : border,\n        fontFamily: \"Public Sans\",\n        fontWeight: 600,\n        transitionDuration: `${animation.timing200}`,\n        transitionTimingFunction: \"ease, ease\",\n        width: block ? \"100%\" : \"auto\",\n        ...buttonSizes($theme)?.[$size],\n        \":active\": {\n          ...($disabled\n            ? {}\n            : {\n                backgroundColor: activeBackground,\n                color: hoverText,\n              }),\n        },\n        ...($disabled\n          ? {}\n          : {\n              \":hover\": {\n                backgroundColor: hoverBackground,\n                borderColor: hoverBackground,\n                color: hoverText,\n              },\n              \":focus\": {\n                boxShadow: \"none\",\n                outline: \"solid\",\n                borderColor: focus,\n                outlineColor: focus,\n                outlineWidth: scale100,\n              },\n            }),\n        \":disabled\": {\n          backgroundColor: isContained\n            ? disabledBackgroundContained\n            : disabledBackground,\n          borderColor: disabledBorder[kind],\n          color: isContained ? disabledTextContained : disabledText,\n        },\n      }),\n    },\n    StartEnhancer: {\n      style: ({ $size }: StyleProps): StyleObject => ({\n        marginRight:\n          $size === \"compact\" || $size === \"mini\" ? scale100 : scale300,\n      }),\n    },\n    EndEnhancer: {\n      style: ({ $size }: StyleProps): StyleObject => ({\n        marginLeft:\n          $size === \"compact\" || $size === \"mini\" ? scale100 : scale300,\n      }),\n    },\n    LoadingSpinner: {\n      component: () => (\n        <StyledLoader\n          leftColor={loadingLeft}\n          middleColor={loadingMiddle}\n          rightColor={loadingRight}\n        />\n      ),\n    },\n  };\n};\n\nexport { ButtonVariants, buttonOverrides };\n","import React, { FunctionComponent } from \"react\";\nimport styled, { Keyframes, css, keyframes } from \"styled-components\";\nimport { useStyletron } from \"@/src/baseWeb\";\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n`;\nconst StyledDot = styled.div<{ delay: string; dotColor: string }>`\n  ${({ delay, dotColor }) => {\n    const flashing = (): Keyframes => keyframes`\n  from { opacity: 0%; filter: brightness(0.5); }\n  to { opacity: 100%; filter: brightness(1); }\n`;\n    return css`\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background-color: ${dotColor};\n      animation: ${flashing} 1s infinite linear alternate;\n      animation-delay: ${delay};\n    `;\n  }}\n`;\nexport interface ButtonLoaderProps {\n  leftColor: string;\n  middleColor: string;\n  rightColor: string;\n}\n\nexport const StyledLoader: FunctionComponent<ButtonLoaderProps> = ({\n  leftColor,\n  middleColor,\n  rightColor,\n}) => {\n  const [, theme] = useStyletron();\n  const { animation, sizing } = theme;\n  return (\n    <LoaderWrapper aria-hidden=\"true\">\n      <StyledDot\n        delay={animation.timing300}\n        dotColor={leftColor}\n        style={{ marginRight: sizing.scale100 }}\n      />\n      <StyledDot\n        delay={animation.timing600}\n        dotColor={middleColor}\n        style={{ marginRight: sizing.scale100 }}\n      />\n      <StyledDot delay={animation.timing1000} dotColor={rightColor} />\n    </LoaderWrapper>\n  );\n};\n","export * from \"./button\";\nexport * from \"./input\";\nexport * from \"./tick\";\nexport * from \"./buttonLoader\";\n","import { SharedProps } from \"baseui/input\";\nimport { StyleObject } from \"styletron-react\";\nimport { Theme } from \"@/src/baseWeb\";\n\ntype RootColors = (\n  $disabled: boolean,\n  $isFocused: boolean,\n  $error: boolean,\n  $positive: boolean,\n  $colors: Theme[\"colors\"]\n) => string;\n\nconst getBorderColor: RootColors = (\n  $disabled,\n  $isFocused,\n  $error,\n  $positive,\n  colors\n) => {\n  if ($disabled) {\n    return colors.borderStateDisabled;\n  }\n\n  if ($isFocused) {\n    return colors.borderSelected;\n  }\n\n  if ($error) {\n    return colors.inputBorderError;\n  }\n\n  if ($positive) {\n    return colors.inputBorderPositive;\n  }\n\n  return colors.inputBorder;\n};\n\nexport const inputOverrides =\n  (theme: Theme) =>\n  ({ $disabled, $error, $positive, $isFocused }: SharedProps): StyleObject => ({\n    ...theme.borders.borderWidth100,\n    borderColor: getBorderColor(\n      $disabled,\n      $isFocused,\n      $error,\n      $positive,\n      theme.colors\n    ),\n  });\n","import { CheckboxOverrides } from \"baseui/checkbox\";\nimport { RadioOverrides } from \"baseui/radio\";\nimport { StyleObject } from \"styletron-react\";\nimport { Theme } from \"@/src/baseWeb\";\n\ntype StyleOverridesProps = StyleObject & { $theme: Theme };\n\nexport const tickOverrides = (\n  theme: Theme\n): CheckboxOverrides | RadioOverrides => ({\n  Label: {\n    style: ({ $disabled, $error }: StyleOverridesProps): StyleObject => {\n      const { tickBorderDisabled, tickBorderError } = theme.colors;\n\n      const defaultStyles = {\n        fontFamily: \"Public Sans\",\n        fontSize: \"14px\",\n      };\n\n      if ($disabled) {\n        return { ...defaultStyles, color: tickBorderDisabled };\n      }\n\n      if ($error) {\n        return { ...defaultStyles, color: tickBorderError };\n      }\n\n      return defaultStyles;\n    },\n  },\n});\n\nexport const getTickBorderColor = (\n  { $checked, $disabled, $error }: StyleOverridesProps,\n  theme: Theme\n): string => {\n  const {\n    tickBorder,\n    tickBorderDisabled,\n    tickBorderError,\n    tickBorderSelected,\n  } = theme.colors;\n\n  if ($disabled) {\n    return tickBorderDisabled;\n  }\n\n  if ($error) {\n    return tickBorderError;\n  }\n\n  if ($checked) {\n    return tickBorderSelected;\n  }\n\n  return tickBorder;\n};\n","import vegaPrimitives from \"@/src/primitives\";\n\nexport interface ButtonStates {\n  text: string;\n  border: string;\n}\n\ntype OutlinedButtonStates = Pick<ButtonStates, \"border\" | \"text\">;\n\nexport interface ButtonKinds {\n  activeBackground: string;\n  background: string;\n  focus: string;\n  hoverBackground: string;\n  hoverText: string;\n  loadingLeft: string;\n  loadingMiddle: string;\n  loadingRight: string;\n  contained: ButtonStates;\n  outlined: OutlinedButtonStates;\n  text: OutlinedButtonStates;\n}\nexport interface ButtonsColors {\n  button: {\n    disabledBorder: {\n      contained: string;\n      outlined: string;\n      text: string;\n    };\n    disabledBackground: string;\n    disabledBackgroundContained: string;\n    disabledTextContained: string;\n    disabledText: string;\n    brand: ButtonKinds;\n    positive: ButtonKinds;\n    negative: ButtonKinds;\n    warning: ButtonKinds;\n    neutral: ButtonKinds;\n    decorative: ButtonKinds;\n  };\n}\n\nexport interface Buttons {\n  colors: ButtonsColors;\n}\n\nconst {\n  alertGreen300,\n  alertGreen400,\n  alertGreen500,\n  alertGreen600,\n  alertGreen700,\n  alertGreen800,\n  alertRed200,\n  alertRed300,\n  alertRed400,\n  alertRed600,\n  alertRed700,\n  alertRed800,\n  alertYellow300,\n  alertYellow400,\n  alertYellow500,\n  alertYellow600,\n  alertYellow700,\n  alertYellow800,\n  brandBlack,\n  brandBlue,\n  brandBlue200,\n  brandBlue300,\n  brandBlue400,\n  brandBlue800,\n  brandBlue1000,\n  brandWhite,\n  brandYellow,\n  brandYellow300,\n  brandYellow500,\n  brandYellow600,\n  brandYellow700,\n  brandYellow800,\n  neutral300,\n  neutral400,\n  neutral500,\n  neutral700,\n  neutral800,\n  transparent,\n} = vegaPrimitives.colors;\n\nexport const buttons: Buttons = {\n  colors: {\n    button: {\n      disabledBackground: brandWhite,\n      disabledBackgroundContained: neutral500,\n      disabledTextContained: neutral800,\n      disabledText: neutral700,\n      disabledBorder: {\n        contained: neutral500,\n        outlined: neutral800,\n        text: brandWhite,\n      },\n      brand: {\n        activeBackground: brandBlue1000,\n        loadingLeft: brandBlue200,\n        loadingMiddle: brandBlue400,\n        loadingRight: brandBlue1000,\n        background: brandBlue,\n        hoverBackground: brandBlue800,\n        hoverText: brandWhite,\n        focus: brandBlue300,\n        contained: {\n          border: brandBlue,\n          text: brandWhite,\n        },\n        outlined: {\n          border: brandBlue,\n          text: brandBlue,\n        },\n        text: {\n          border: transparent,\n          text: brandBlue,\n        },\n      },\n      positive: {\n        activeBackground: alertGreen800,\n        loadingLeft: alertGreen400,\n        loadingMiddle: alertGreen600,\n        loadingRight: alertGreen800,\n        background: alertGreen500,\n        focus: alertGreen300,\n        hoverBackground: alertGreen700,\n        hoverText: brandWhite,\n        contained: {\n          border: alertGreen500,\n          text: brandWhite,\n        },\n        outlined: {\n          border: alertGreen600,\n          text: alertGreen600,\n        },\n        text: {\n          border: transparent,\n          text: alertGreen600,\n        },\n      },\n      negative: {\n        activeBackground: alertRed800,\n        loadingLeft: alertRed200,\n        loadingMiddle: alertRed400,\n        loadingRight: alertRed800,\n        background: alertRed600,\n        focus: alertRed300,\n        hoverBackground: alertRed700,\n        hoverText: brandWhite,\n        contained: {\n          border: alertRed600,\n          text: brandWhite,\n        },\n        outlined: {\n          border: alertRed600,\n          text: alertRed600,\n        },\n        text: {\n          border: transparent,\n          text: alertRed600,\n        },\n      },\n      warning: {\n        activeBackground: alertYellow800,\n        loadingLeft: alertYellow400,\n        loadingMiddle: alertYellow600,\n        loadingRight: alertYellow800,\n        background: alertYellow500,\n        focus: alertYellow300,\n        hoverBackground: alertYellow700,\n        hoverText: brandWhite,\n        contained: {\n          border: alertYellow500,\n          text: brandBlack,\n        },\n        outlined: {\n          border: alertYellow700,\n          text: alertYellow700,\n        },\n        text: {\n          border: transparent,\n          text: alertYellow700,\n        },\n      },\n      neutral: {\n        activeBackground: neutral800,\n        loadingLeft: neutral300,\n        loadingMiddle: neutral500,\n        loadingRight: neutral800,\n        background: brandBlack,\n        focus: neutral700,\n        hoverBackground: neutral400,\n        hoverText: brandWhite,\n        contained: {\n          border: brandBlack,\n          text: brandWhite,\n        },\n        outlined: {\n          border: brandBlack,\n          text: brandBlack,\n        },\n        text: {\n          border: transparent,\n          text: brandBlack,\n        },\n      },\n      decorative: {\n        activeBackground: brandYellow800,\n        loadingLeft: brandYellow300,\n        loadingMiddle: brandYellow500,\n        loadingRight: brandYellow800,\n        background: brandYellow,\n        focus: brandYellow300,\n        hoverBackground: brandYellow700,\n        hoverText: brandWhite,\n        contained: {\n          border: brandYellow,\n          text: brandBlack,\n        },\n        outlined: {\n          border: brandYellow600,\n          text: brandYellow600,\n        },\n        text: {\n          border: transparent,\n          text: brandYellow600,\n        },\n      },\n    },\n  },\n};\n","import {\n  LightTheme as BaseWebLightTheme,\n  createLightTheme,\n  createThemedUseStyletron,\n} from \"baseui\";\nimport {\n  Borders as BaseUiBorders,\n  Breakpoints as BaseUiBreakpoints,\n  Colors as BaseUiColors,\n  Lighting as BaseUiLighting,\n  MediaQuery as BaseUiMediaQuery,\n  Theme as BaseUiTheme,\n} from \"baseui/theme\";\nimport vegaPrimitives, { VegaBorders, VegaColors } from \"@/src/primitives\";\nimport { ButtonsColors, buttons } from \"./buttons\";\n\nexport type Theme = BaseUiTheme & {\n  borders: BaseUiBorders & VegaBorders;\n  breakpoints: BaseUiBreakpoints & {\n    xsmall: number;\n    xlarge: number;\n  };\n  mediaQuery: BaseUiMediaQuery & {\n    xsmall: number;\n    xlarge: number;\n  };\n  colors: BaseUiColors &\n    ButtonsColors &\n    VegaColors & {\n      accordionBackgroundAccent: string;\n      accordionBackgroundDefault: string;\n      accordionBackgroundDefaultActive: string;\n      accordionBackgroundDisabled: string;\n      accordionBackgroundNegative: string;\n      accordionBackgroundPositive: string;\n      accordionBorderAccent: string;\n      accordionBorderAccentActive: string;\n      accordionBorderDefault: string;\n      accordionBorderDefaultActive: string;\n      accordionBorderDisabled: string;\n      accordionBorderNegative: string;\n      accordionBorderPositive: string;\n      accordionContentBackground: string;\n      accordionContentBorderAccent: string;\n      accordionContentBorderDefault: string;\n      accordionContentBorderNegative: string;\n      accordionContentBorderPositive: string;\n      accordionIconAccent: string;\n      accordionIconDefault: string;\n      accordionIconDefaultActive: string;\n      accordionIconDisabled: string;\n      accordionIconNegative: string;\n      accordionIconPositive: string;\n      accordionTextAccent: string;\n      accordionTextDefault: string;\n      accordionTextDefaultActive: string;\n      accordionTextDisabled: string;\n      accordionTextNegative: string;\n      accordionTextPositive: string;\n      avatarBackground: string;\n      avatarText: string;\n      breadcrumbsTextActive: string;\n      calendarChevronIconColor: string;\n      calendarBackground: string;\n      calendarBorder: string;\n      calendarDayActiveBackground: string;\n      calendarDayActiveBorder: string;\n      calendarDayPseudoRangeBackground: string;\n      calendarDayHoverBackground: string;\n      calendarDayHoverBorder: string;\n      calendarDaySelectedText: string;\n      calendarDayDisabledText: string;\n      calendarText: string;\n      calendarIcon: string;\n      calendarInputClearIcon: string;\n      calendarDropdownBackground: string;\n      calendarDropdownHighlightedBackground: string;\n      calendarControlBackgroundColor: string;\n      calendarControlBorderColor: string;\n      cardBackgroundDefault: string;\n      cardBackgroundNeutral: string;\n      cardBorder: string;\n      cryptoIconListBackground: string;\n      cryptoIconListText: string;\n      linkText: string;\n      linkVisited: string;\n      linkHover: string;\n      linkActive: string;\n      fileUploaderBorder: string;\n      fileUploaderError: string;\n      fileUploaderItemBorder: string;\n      fileUploaderText: string;\n      navbarBackground: string;\n      navbarBackgroundOnboarding: string;\n      navbarButton: string;\n      navbarDropdownArrow: string;\n      navbarDropdownBackground: string;\n      navbarDropdownBackgroundActive: string;\n      navbarDropdownText: string;\n      navbarDropdownTextActive: string;\n      navbarMenuButton: string;\n      navbarMenuButtonActive: string;\n      notificationBackgroundInfo: string;\n      notificationBackgroundNeutral: string;\n      notificationBorderInfo: string;\n      notificationBorderNeutral: string;\n      notificationColorInfo: string;\n      notificationColorNeutral: string;\n      notificationIconInfo: string;\n      notificationIconNeutral: string;\n      bannerNeutralText: string;\n      bannerNeutralBackground: string;\n      bannerNeutralBorder: string;\n      bannerPositiveText: string;\n      bannerPositiveBackground: string;\n      bannerPositiveBorder: string;\n      bannerWarningText: string;\n      bannerWarningBackground: string;\n      bannerWarningBorder: string;\n      bannerNegativeText: string;\n      bannerNegativeBackground: string;\n      bannerNegativeBorder: string;\n      popoverButtonBackground: string;\n      popoverButtonBorder: string;\n      popoverButtonCheckBorder: string;\n      popoverButtonIcon: string;\n      popoverButtonText: string;\n      progressBarBackground: string;\n      progressBarLabel: string;\n      progressBarPrimary: string;\n      progressBarPositive: string;\n      progressBarNegative: string;\n      progressIndicatorBackground: string;\n      progressIndicatorBackgroundDisabled: string;\n      progressIndicatorIcon: string;\n      snackbarBackground: string;\n      snackbarText: string;\n      snackbarBorder: string;\n      progressStepIconBorderDisabled: string;\n      progressStepIconTextDisabled: string;\n      progressStepIconBackgroundDisabled: string;\n      progressStepIconBackgroundDefault: string;\n      progressStepIconBorderDefault: string;\n      progressStepIconTextDefault: string;\n      progressStepIconBackgroundPrimary: string;\n      progressStepIconBorderPrimary: string;\n      progressStepIconTextPrimary: string;\n      progressStepIconBackgroundPositive: string;\n      progressStepIconBorderPositive: string;\n      progressStepIconTextPositive: string;\n      progressStepIconBackgroundDark: string;\n      progressStepIconBorderDark: string;\n      progressStepIconTextDark: string;\n      progressStepText: string;\n      progressStepTextDisabled: string;\n      progressStepTextDark: string;\n      progressStepTextDarkDisabled: string;\n      sideNavigationText: string;\n      sideNavigationTextActive: string;\n      sideNavigationTextFocus: string;\n      sideNavigationTextHover: string;\n      sideNavigationTextHoverActive: string;\n      tableBorder: string;\n      tableBorderHeader: string;\n      tableFill: string;\n      tableFillFocus: string;\n      tableFillHover: string;\n      tableFooterFill: string;\n      tickBorderDisabled: string;\n      tickBorderSelected: string;\n      treeViewItemBackground: string;\n      treeViewItemText: string;\n      treeViewNestedItemBackground: string;\n      treeViewNestedItemExpandedText: string;\n      treeViewNestedItemText: string;\n    };\n  lighting: BaseUiLighting & {\n    cryptoListLighting: string;\n    datePickerLighting: string;\n    drawerLighting: string;\n    modalLighting: string;\n    navbarLighting: string;\n    navbarDropdownLighting: string;\n    popoverLighting: string;\n    tooltipLighting: string;\n    buttonLighting: string;\n    snackbarLighting: string;\n  };\n};\n\nconst { colors: vegaColors } = vegaPrimitives;\n// Using only radius properties from BaseLightTheme to avoid defining twice\n// These values can also be safely used on darkTheme as they are, inside baseui, using a shared config object\nconst { radius200, radius300 } = BaseWebLightTheme.borders;\n\nconst sharedBorders = {\n  ...vegaPrimitives.borders,\n  // Shared borders uses the rounded corners configuration from baseweb:\n  // https://baseweb.design/blog/base-web-v7#rounded-corners\n  useRoundedCorners: true,\n  buttonBorderRadius: radius200,\n  inputBorderRadius: radius200,\n  popoverBorderRadius: radius200,\n  surfaceBorderRadius: radius300,\n  tagBorderRadius: radius200,\n};\n\nconst availableThemes = {\n  light: \"blockfi-light-theme\",\n};\n\nconst lightTheme = createLightTheme(\n  {},\n  {\n    name: availableThemes.light,\n    borders: sharedBorders,\n    breakpoints: {\n      xsmall: 0,\n      small: 577,\n      medium: 768,\n      large: 1024,\n      xlarge: 1360,\n    },\n    mediaQuery: {\n      xsmall: \"@media screen and (min-width: 0)\",\n      small: \"@media screen and (min-width: 577px)\",\n      medium: \"@media screen and (min-width: 768px)\",\n      large: \"@media screen and (min-width: 1024px)\",\n      xlarge: \"@media screen and (min-width: 1360px)\",\n    },\n    colors: {\n      ...vegaPrimitives.colors,\n\n      // Accordion\n      accordionBackgroundAccent: vegaColors.brandWhite,\n      accordionBackgroundDefault: vegaColors.brandWhite,\n      accordionBackgroundDefaultActive: vegaColors.brandBlue,\n      accordionBackgroundDisabled: vegaColors.brandWhite,\n      accordionBackgroundNegative: \"#FEF6F4\",\n      accordionBackgroundPositive: vegaColors.brandWhite,\n      accordionBorderAccent: vegaColors.neutral500,\n      accordionBorderAccentActive: \"#8099F5\",\n      accordionBorderDefault: vegaColors.neutral500,\n      accordionBorderDefaultActive: \"#8099F5\",\n      accordionBorderDisabled: vegaColors.neutral300,\n      accordionBorderNegative: \"#F7A0A0\",\n      accordionBorderPositive: vegaColors.neutral500,\n      accordionContentBackground: vegaColors.brandWhite,\n      accordionContentBorderAccent: \"#8099F5\",\n      accordionContentBorderDefault: \"#8099F5\",\n      accordionContentBorderNegative: \"#F7A0A0\",\n      accordionContentBorderPositive: vegaColors.neutral500,\n      accordionIconAccent: vegaColors.brandBlue,\n      accordionIconDisabled: vegaColors.neutral300,\n      accordionIconNegative: vegaColors.legacyRed,\n      accordionIconPositive: vegaColors.legacyGreen,\n      accordionTextAccent: vegaColors.brandBlack,\n      accordionTextDefault: vegaColors.brandBlack,\n      accordionTextDefaultActive: vegaColors.brandWhite,\n      accordionTextDisabled: vegaColors.neutral300,\n      accordionTextNegative: vegaColors.legacyRed,\n      accordionTextPositive: vegaColors.brandBlack,\n\n      // Avatar\n      avatarBackground: vegaColors.brandBlack,\n      avatarText: vegaColors.brandWhite,\n\n      // Button\n      ...buttons.colors,\n\n      // Card\n      cardBackgroundDefault: vegaColors.brandWhite,\n      cardBackgroundNeutral: vegaColors.brandWhite,\n      cardBorder: vegaColors.neutral300,\n\n      // CryptoIconList\n      cryptoIconListBackground: vegaColors.brandBlack,\n      cryptoIconListText: \"#E2E2E2\",\n\n      // Link\n      linkText: \"#0032EB\",\n      linkVisited: \"#4d63f7\",\n      linkHover: \"#8099F5\",\n      linkActive: \"#8099F5\",\n\n      // Breadcrumbs\n      breadcrumbsSeparatorFill: vegaColors.neutral600,\n      breadcrumbsText: vegaColors.brandBlue,\n      breadcrumbsTextActive: vegaColors.brandBlue1000,\n\n      // FileUploader\n      fileUploaderBorder: \"#AFAFAF\",\n      fileUploaderError: \"#D44333\",\n      fileUploaderItemBorder: \"#F2F2F2\",\n      fileUploaderText: \"#545454\",\n\n      // Inputs\n      borderSelected: \"#8099F5\",\n      borderStateDisabled: \"#E5E5E5\",\n      inputBorder: \"#B2B2B2\",\n      inputBorderError: \"#F7A0A0\",\n      inputBorderPositive: \"#80F9C7\",\n      inputFill: \"#FFF\",\n      inputFillActive: \"#FFF\",\n      inputFillDisabled: \"#FFF\",\n      inputFillError: \"#FEF5F5\",\n      inputFillPositive: \"#F2FEF9\",\n      inputPlaceholder: \"#808080\",\n      inputPlaceholderDisabled: \"#E5E5E5\",\n      menuFillHover: \"#F2F5FE\",\n      menuFontHighlighted: \"#333\",\n      menuFontSelected: \"#333\",\n\n      // Navbar\n      navbarBackground: vegaColors.brandWhite,\n      navbarBackgroundOnboarding: \"#E9EDF2\",\n      navbarButton: vegaColors.brandBlue,\n      navbarDropdownArrow: vegaColors.brandBlue,\n      navbarDropdownBackground: vegaColors.brandWhite,\n      navbarDropdownBackgroundActive: vegaColors.neutral100,\n      navbarDropdownText: \"#1A1A1A\",\n      navbarDropdownTextActive: vegaColors.brandBlue,\n      navbarMenuButton: \"#1A1A1A\",\n      navbarMenuButtonActive: vegaColors.brandBlue,\n\n      // Notification\n      notificationBackgroundInfo: \"#F2F5FE\",\n      notificationBackgroundNeutral: vegaColors.neutral100,\n      notificationBorderInfo: \"#B2C1F9\",\n      notificationBorderNeutral: vegaColors.neutral300,\n      notificationColorInfo: vegaColors.brandBlue,\n      notificationColorNeutral: vegaColors.neutral900,\n      notificationIconInfo: \"#617EE8\",\n      notificationIconNeutral: vegaColors.neutral900,\n\n      // Banner\n      bannerNeutralText: vegaColors.brandBlack,\n      bannerNeutralBackground: vegaColors.neutral100,\n      bannerNeutralBorder: vegaColors.neutral300,\n      bannerPositiveText: vegaColors.alertGreen700,\n      bannerPositiveBackground: vegaColors.alertGreen100,\n      bannerPositiveBorder: vegaColors.alertGreen300,\n      bannerWarningText: vegaColors.alertYellow800,\n      bannerWarningBackground: vegaColors.alertYellow100,\n      bannerWarningBorder: vegaColors.alertYellow,\n      bannerNegativeText: vegaColors.alertRed700,\n      bannerNegativeBackground: vegaColors.alertRed100,\n      bannerNegativeBorder: vegaColors.alertRed300,\n\n      // PopoverButton\n      popoverButtonBackground: vegaColors.brandWhite,\n      popoverButtonBorder: vegaColors.neutral300,\n      popoverButtonCheckBorder: \"#E6E6E6\",\n      popoverButtonIcon: vegaColors.neutral600,\n      popoverButtonText: vegaColors.brandBlack,\n\n      // ProgressBar\n      progressBarBackground: \"#EEE\",\n      progressBarLabel: vegaColors.brandBlack,\n      progressBarPrimary: vegaColors.brandBlue,\n      progressBarPositive: \"#3AA76D\",\n      progressBarNegative: \"#D44333\",\n\n      // ProgressIndicator\n      progressIndicatorBackground: vegaColors.brandBlue,\n      progressIndicatorBackgroundDisabled: vegaColors.neutral500,\n      progressIndicatorIcon: vegaColors.brandWhite,\n\n      // ProgressSteps\n      progressStepIconBorderDisabled: vegaColors.neutral1000,\n      progressStepIconTextDisabled: \"#171717\",\n      progressStepIconBackgroundDisabled: vegaColors.neutral800,\n      progressStepIconBackgroundDark: vegaColors.brandWhite,\n      progressStepIconBorderDark: vegaColors.neutral700,\n      progressStepIconTextDark: vegaColors.brandBlue,\n      progressStepIconBackgroundDefault: vegaColors.neutral800,\n      progressStepIconBorderDefault: vegaColors.neutral1000,\n      progressStepIconTextDefault: \"#171717\",\n      progressStepIconBackgroundPrimary: \"#8099F5\",\n      progressStepIconBorderPrimary: \"#1A47ED\",\n      progressStepIconTextPrimary: vegaColors.brandBlue,\n      progressStepIconBackgroundPositive: \"#80F9C6\",\n      progressStepIconBorderPositive: \"#007A48\",\n      progressStepIconTextPositive: vegaColors.brandBlack,\n      progressStepText: vegaColors.brandBlack,\n      progressStepTextDisabled: \"#AFAFAF\",\n      progressStepTextDark: vegaColors.brandWhite,\n      progressStepTextDarkDisabled: vegaColors.neutral800,\n\n      // Snackbar\n      snackbarBackground: vegaColors.neutral100,\n      snackbarText: vegaColors.brandBlack,\n      snackbarBorder: vegaColors.neutral300,\n\n      // Side Navigation\n      sideNavigationText: \"#545454\",\n      sideNavigationTextActive: \"#276EF1\",\n      sideNavigationTextFocus: \"#001976\",\n      sideNavigationTextHover: \"#335BEF\",\n      sideNavigationTextHoverActive: \"#276EF1\",\n\n      // Table\n      tableBorder: vegaColors.neutral300,\n      tableBorderHeader: vegaColors.neutral900,\n      tableFill: vegaColors.brandWhite,\n      tableFillHover: vegaColors.brandWhite,\n      tableFillFocus: \"#F6F6F6\",\n      tableFooterFill: vegaColors.neutral200,\n\n      // Tooltip\n      tooltipBackground: \"#333333\",\n      tooltipText: \"#FFF\",\n\n      // Tag\n      tagNeutralOutlinedFont: \"#4C4C4C\",\n      tagWarningOutlinedFont: \"#684D1C\",\n      tagWarningSolidFont: \"#684D1C\",\n      tagNeutralBackground: \"#808080\",\n      tagWarningBackground: \"#FFCF70\",\n      tagPrimaryBackground: \"#0032EB\",\n      tagNegativeBackground: \"#D83A3A\",\n      tagPositiveBackground: \"#007A48\",\n\n      // datepicker\n      calendarChevronIconColor: vegaColors.brandBlack,\n      calendarBackground: vegaColors.brandWhite,\n      calendarBorder: vegaColors.neutral300,\n      calendarDayActiveBackground: vegaColors.brandBlue500,\n      calendarDayActiveBorder: vegaColors.brandBlue700,\n      calendarDayPseudoRangeBackground: vegaColors.brandBlue100,\n      calendarDayHoverBackground: vegaColors.brandWhite,\n      calendarDayHoverBorder: vegaColors.brandBlue700,\n      calendarDaySelectedText: vegaColors.brandWhite,\n      calendarDayDisabledText: vegaColors.neutral400,\n      calendarText: vegaColors.brandBlack,\n      calendarIcon: vegaColors.brandBlack,\n      calendarInputClearIcon: vegaColors.neutral700,\n      calendarDropdownBackground: vegaColors.backgroundWhite100,\n      calendarDropdownHighlightedBackground: vegaColors.backgroundWhite300,\n      calendarControlBackgroundColor: vegaColors.backgroundWhite100,\n      calendarControlBorderColor: vegaColors.backgroundWhite300,\n\n      // checkbox\n      tickBorder: \"#808080\",\n      tickBorderDisabled: \"#E5E5E5\",\n      tickBorderError: \"#F04141\",\n      tickBorderSelected: \"#0032EB\",\n      tickFill: \"#FFF\",\n      tickFillDisabled: \"#FFF\",\n      tickFillError: \"#F7A0A0\",\n      tickFillErrorHover: \"#FED7D2\",\n      tickFillErrorHoverActive: \"#F1998E\",\n      tickFillErrorSelected: \"#F7A0A0\",\n      tickFillErrorSelectedHover: \"#FED7D2\",\n      tickFillErrorSelectedHoverActive: \"#F1998E\",\n      tickFillSelected: \"#335BEF\",\n      tickFillSelectedHover: \"#0032EB\",\n      tickFillSelectedHoverActive: \"#0032EB\",\n      tickMarkFillDisabled: \"#E5E5E5\",\n      tickMarkFillError: \"#F04141\",\n\n      // TreeView\n      treeViewItemBackground: vegaColors.brandWhite,\n      treeViewItemText: vegaColors.brandBlack,\n      treeViewNestedItemBackground: vegaColors.neutral200,\n      treeViewNestedItemText: vegaColors.neutral900,\n      treeViewNestedItemExpandedText: vegaColors.brandBlue,\n    },\n    lighting: {\n      cryptoListLighting: \"0px 0px 4px rgba(0, 0, 0, 0.1)\",\n      datePickerLighting: \"0 10px 10px rgba(0, 0, 0, 0.05)\",\n      drawerLighting: \"rgb(0 0 0 / 10%) 0px 1px 1px inset\",\n      modalLighting: \"0 8px 36px rgba(0, 0, 0, 0.17)\",\n      popoverLighting: \"0 10px 10px rgba(0, 0, 0, 0.05)\",\n      navbarLighting: \"0px 1px 1px rgba(0, 0, 0, 0.1)\",\n      navbarDropdownLighting:\n        \"0px 9px 28px 8px rgba(0, 0, 0, 0.1), 0px 6px 16px rgba(0, 0, 0, 0.1)\",\n      tooltipLighting: \"0px 5px 5px rgba(0, 0, 0, 0.05)\",\n      buttonLighting: \"0 0 0 2px\",\n      snackbarLighting: \"0px 4px 16px rgba(0, 0, 0, 0.15)\",\n    },\n  }\n);\n\nconst useStyletron = createThemedUseStyletron<Theme>();\n\nexport { availableThemes, lightTheme, useStyletron };\n"],"names":[],"sourceRoot":""}