{"version":3,"file":"main.4870e3e991c129be1dd3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAgjCA;AAQA;AAAA;AARA;AAAA;AAAA","sources":["webpack://app/./src/component/label/index.tsx"],"sourcesContent":["// @mui\nimport { alpha, Theme, useTheme, styled } from \"@mui/material/styles\";\nimport { BoxProps, Box } from \"@mui/material\";\n// theme\nimport { ColorSchema } from \"../theme/palette\";\n\n// ----------------------------------------------------------------------\n\ntype LabelColor =\n  | \"default\"\n  | \"primary\"\n  | \"secondary\"\n  | \"info\"\n  | \"success\"\n  | \"warning\"\n  | \"error\";\n\ntype LabelVariant = \"filled\" | \"outlined\" | \"ghost\";\n\nconst RootStyle = styled(\"span\")(\n  ({\n    theme,\n    ownerState,\n  }: {\n    theme: Theme;\n    ownerState: {\n      color: LabelColor;\n      variant: LabelVariant;\n    };\n  }) => {\n    const isLight = theme.palette.mode === \"light\";\n    const { color, variant } = ownerState;\n\n    const styleFilled = (color: ColorSchema) => ({\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main,\n    });\n\n    const styleOutlined = (color: ColorSchema) => ({\n      color: theme.palette[color].main,\n      backgroundColor: \"transparent\",\n      border: `1px solid ${theme.palette[color].main}`,\n    });\n\n    const styleGhost = (color: ColorSchema) => ({\n      color: theme.palette[color][\"light\"],\n      backgroundColor: alpha(theme.palette[\"mode\"].main, 0.16),\n    });\n\n    return {\n      height: 22,\n      minWidth: 22,\n      lineHeight: 0,\n      borderRadius: 6,\n      cursor: \"default\",\n      alignItems: \"center\",\n      whiteSpace: \"nowrap\",\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      padding: theme.spacing(0, 1),\n      color: theme.palette.grey[800],\n      fontSize: theme.typography.pxToRem(12),\n      fontFamily: theme.typography.fontFamily,\n      backgroundColor: theme.palette.grey[300],\n      fontWeight: theme.typography.fontWeightBold,\n\n      ...(color !== \"default\"\n        ? {\n            ...(variant === \"filled\" && { ...styleFilled(color) }),\n            ...(variant === \"outlined\" && { ...styleOutlined(color) }),\n            ...(variant === \"ghost\" && { ...styleGhost(color) }),\n          }\n        : {\n            ...(variant === \"outlined\" && {\n              backgroundColor: \"transparent\",\n              color: theme.palette.text.primary,\n              border: `1px solid ${theme.palette.grey[500_32]}`,\n            }),\n            ...(variant === \"ghost\" && {\n              color: isLight\n                ? theme.palette.text.secondary\n                : theme.palette.common.white,\n              backgroundColor: theme.palette.grey[500_16],\n            }),\n          }),\n    };\n  }\n);\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  startIcon?: React.ReactElement | null;\n  endIcon?: React.ReactElement | null;\n  color?: LabelColor;\n  variant?: LabelVariant;\n}\n\nexport default function Label({\n  children,\n  color = \"default\",\n  variant = \"ghost\",\n  startIcon,\n  endIcon,\n  sx,\n}: Props) {\n  const theme = useTheme();\n\n  const style = {\n    width: 16,\n    height: 16,\n    \"& svg, img\": { width: 1, height: 1, objectFit: \"cover\" },\n  };\n\n  return (\n    <RootStyle\n      ownerState={{ color, variant }}\n      sx={{\n        ...(startIcon && { pl: 0.75 }),\n        ...(endIcon && { pr: 0.75 }),\n        ...sx,\n      }}\n      theme={theme}\n    >\n      {startIcon && <Box sx={{ mr: 0.75, ...style }}>{startIcon}</Box>}\n\n      {children}\n\n      {endIcon && <Box sx={{ ml: 0.75, ...style }}>{endIcon}</Box>}\n    </RootStyle>\n  );\n}\n"],"names":[],"sourceRoot":""}