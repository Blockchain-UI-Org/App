{"version":3,"file":"main.6591907ed7842a6b516a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://app/./src/Components/alert/alert.stories.tsx","webpack://app/./src/Components/alert/alert.tsx","webpack://app/./src/ sync ^\\.(?9afe"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Story, Meta } from '@storybook/react';\\r\\nimport { Alert, AlertProps } from './alert';\\r\\n\\r\\nexport default {\\r\\n  component: Alert,\\r\\n  title: 'Baseweb /Molecules/Alert',\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<AlertProps> = args => (\\r\\n  <div\\r\\n    style={{\\r\\n      background: '#EBEBEB',\\r\\n      width: '1000px',\\r\\n      minHeight: '1000px',\\r\\n      margin: 'auto',\\r\\n      padding: '5rem',\\r\\n    }}\\r\\n  >\\r\\n    <div style={{ width: '410px', minHeight: '473px' }}>\\r\\n      <Alert {...args} />\\r\\n    </div>\\r\\n  </div>\\r\\n);\\r\\n\\r\\nexport const InfoAlert = Template.bind({});\\r\\nInfoAlert.args = {\\r\\n  message: 'You have 0 KSM in your Parallel. You may want to deposit here.',\\r\\n  type: 'info',\\r\\n};\\r\\n\\r\\nexport const WarningAlert = Template.bind({});\\r\\nWarningAlert.args = {\\r\\n  message: 'You have 0 KSM in your Parallel. You may want to deposit here.',\\r\\n  type: 'warning',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"InfoAlert\":{\"startLoc\":{\"col\":36,\"line\":9},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":36,\"line\":9},\"endBody\":{\"col\":1,\"line\":23}},\"WarningAlert\":{\"startLoc\":{\"col\":36,\"line\":9},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":36,\"line\":9},\"endBody\":{\"col\":1,\"line\":23}}};\n    \nimport { Story, Meta } from '@storybook/react';\r\nimport { Alert, AlertProps } from './alert';\r\n\r\nexport default {\r\n  component: Alert,\r\n  title: 'Baseweb /Molecules/Alert',\r\n} as Meta;\r\n\r\nconst Template: Story<AlertProps> = args => (\r\n  <div\r\n    style={{\r\n      background: '#EBEBEB',\r\n      width: '1000px',\r\n      minHeight: '1000px',\r\n      margin: 'auto',\r\n      padding: '5rem',\r\n    }}\r\n  >\r\n    <div style={{ width: '410px', minHeight: '473px' }}>\r\n      <Alert {...args} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const InfoAlert = Template.bind({});;\r\nInfoAlert.args = {\r\n  message: 'You have 0 KSM in your Parallel. You may want to deposit here.',\r\n  type: 'info',\r\n};\r\n\r\nexport const WarningAlert = Template.bind({});\r\nWarningAlert.args = {\r\n  message: 'You have 0 KSM in your Parallel. You may want to deposit here.',\r\n  type: 'warning',\r\n};\r\n\n\n\nInfoAlert.parameters = { storySource: { source: \"args => (\\r\\n  <div\\r\\n    style={{\\r\\n      background: '#EBEBEB',\\r\\n      width: '1000px',\\r\\n      minHeight: '1000px',\\r\\n      margin: 'auto',\\r\\n      padding: '5rem',\\r\\n    }}\\r\\n  >\\r\\n    <div style={{ width: '410px', minHeight: '473px' }}>\\r\\n      <Alert {...args} />\\r\\n    </div>\\r\\n  </div>\\r\\n)\" }, ...InfoAlert.parameters };\nWarningAlert.parameters = { storySource: { source: \"args => (\\r\\n  <div\\r\\n    style={{\\r\\n      background: '#EBEBEB',\\r\\n      width: '1000px',\\r\\n      minHeight: '1000px',\\r\\n      margin: 'auto',\\r\\n      padding: '5rem',\\r\\n    }}\\r\\n  >\\r\\n    <div style={{ width: '410px', minHeight: '473px' }}>\\r\\n      <Alert {...args} />\\r\\n    </div>\\r\\n  </div>\\r\\n)\" }, ...WarningAlert.parameters };","import { FC, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Icon } from '../icon/icon';\r\nimport typography from '../theme/typography/typography';\r\nimport { Inline, Stack } from '../theme/layouts';\r\nimport { theme } from '../theme';\r\n\r\nconst { blue100, grey900, error100, error500 } = theme.colors;\r\n\r\nconst { Body1 } = typography.components.body.regular;\r\n\r\nexport interface AlertProps {\r\n  message: ReactNode;\r\n  type?: 'info' | 'warning';\r\n}\r\n\r\nconst Container = styled(Inline)`\r\n  border-radius: 8px;\r\n  &.info {\r\n    background-color: ${blue100};\r\n    color: ${grey900};\r\n  }\r\n  &.warning {\r\n    background-color: ${error100};\r\n    color: ${error500};\r\n  }\r\n`;\r\n\r\nexport const Alert: FC<AlertProps> = ({ message, type = 'info' }) => {\r\n  return (\r\n    <Container gap=\"1rem\" inset=\"1rem\" className={type}>\r\n      {type === 'info' ? (\r\n        <Icon name=\"alertWarningThinBlack\" />\r\n      ) : (\r\n        <Icon name=\"alertWarningThinRed\" />\r\n      )}\r\n      <Stack gap=\"0.5rem\">\r\n        <Body1>{message}</Body1>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","var map = {\n\t\"./Components/Button/Button.stories.tsx\": \"./src/Components/Button/Button.stories.tsx\",\n\t\"./Components/alert/alert.stories.tsx\": \"./src/Components/alert/alert.stories.tsx\",\n\t\"./Components/gradientProgressBar/gradientProgressBar.stories.tsx\": \"./src/Components/gradientProgressBar/gradientProgressBar.stories.tsx\",\n\t\"./Components/icon/cryptoIcon/cryptoIcon.stories.tsx\": \"./src/Components/icon/cryptoIcon/cryptoIcon.stories.tsx\",\n\t\"./Components/icon/icon.stories.tsx\": \"./src/Components/icon/icon.stories.tsx\",\n\t\"./Components/image/image.stories.tsx\": \"./src/Components/image/image.stories.tsx\",\n\t\"./Components/theme/theme.stories.tsx\": \"./src/Components/theme/theme.stories.tsx\",\n\t\"./Components/theme/typography/typography.stories.tsx\": \"./src/Components/theme/typography/typography.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";"],"names":[],"sourceRoot":""}