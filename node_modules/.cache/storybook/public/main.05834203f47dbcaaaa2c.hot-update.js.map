{"version":3,"file":"main.05834203f47dbcaaaa2c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAXA;AAaA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AAAA;AAqBA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AAAA;AAKA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AATA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://app/./src/components/Upshot/Table/index.stories.tsx","webpack://app/./src/components/Upshot/Table/Styled.ts","webpack://app/./src/components/Upshot/Table/index.tsx","webpack://app/./src/ sync ^\\.(?9afe"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useState } from 'react'\\nimport { Meta, Story } from '@storybook/react'\\nimport Table, { TableProps } from './index'\\nimport styled from '@emotion/styled'\\n\\nexport default {\\n  title: 'UI/Table',\\n  component: Table,\\n} as Meta\\n\\nconst Template: Story<TableProps> = (args) => {\\n  const [pageNumber, setPageNumber] = useState(0)\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value)\\n      }}\\n    ></Table>\\n  )\\n}\\n\\nexport const WidthsInPercentage = Template.bind({})\\n\\nconst defaultArgs = {\\n  columnTitles: ['Column1 Title- 50%', 'Column2 - 30%', 'Column3 - 20%'],\\n  columnWidths: ['50%', '30%', '20%'],\\n  rows: [...new Array(20)].map((_, i) => [`Column1`, `Column2`, `Column3`]),\\n}\\n\\nWidthsInPercentage.args = defaultArgs\\n\\nWidthsInPercentage.argTypes = {\\n  alternateRowColor: { control: { type: 'boolean' } },\\n}\\n\\nexport const FixedWidths = Template.bind({})\\n\\nFixedWidths.args = {\\n  ...defaultArgs,\\n  columnWidths: ['500px', '300px', '200px'],\\n  columnTitles: ['Column1 Title- 500px', 'Column2 - 300px', 'Column3 - 200px'],\\n}\\n\\nconst FixedContainer = styled.div`\\n  width: 1000px;\\n\\n  .title {\\n    margin: 10px 0;\\n  }\\n`\\n\\nconst FixedContainerTemplate: Story<TableProps> = (args) => (\\n  <FixedContainer style={{ width: '1000px' }}>\\n    <div className=\\\"title\\\">Width of container is 1000px</div>\\n    <Table {...args}></Table>\\n  </FixedContainer>\\n)\\n\\nexport const FixedAndPercentageWidths = FixedContainerTemplate.bind({})\\n\\nFixedAndPercentageWidths.args = {\\n  ...defaultArgs,\\n  columnWidths: ['50%', '250px', '250px'],\\n  columnTitles: ['Column1 Title- 50%', 'Column2 - 250px', 'Column3 - 250px'],\\n}\\n\\nexport const Numbered = Template.bind({})\\n\\nNumbered.args = {\\n  ...defaultArgs,\\n  pagination: true,\\n  addRowNumbers: true,\\n  pageNumber: 0,\\n  rowsPerPage: 10,\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WidthsInPercentage\":{\"startLoc\":{\"col\":36,\"line\":11},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":36,\"line\":11},\"endBody\":{\"col\":1,\"line\":22}},\"FixedWidths\":{\"startLoc\":{\"col\":36,\"line\":11},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":36,\"line\":11},\"endBody\":{\"col\":1,\"line\":22}},\"FixedAndPercentageWidths\":{\"startLoc\":{\"col\":50,\"line\":54},\"endLoc\":{\"col\":1,\"line\":59},\"startBody\":{\"col\":50,\"line\":54},\"endBody\":{\"col\":1,\"line\":59}},\"Numbered\":{\"startLoc\":{\"col\":36,\"line\":11},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":36,\"line\":11},\"endBody\":{\"col\":1,\"line\":22}}};\n    \nimport React, { useState } from 'react'\nimport { Meta, Story } from '@storybook/react'\nimport Table, { TableProps } from './index'\nimport styled from '@emotion/styled'\n\nexport default {\n  title: 'UI/Table',\n  component: Table,\n} as Meta\n\nconst Template: Story<TableProps> = (args) => {\n  const [pageNumber, setPageNumber] = useState(0)\n  return (\n    <Table\n      {...args}\n      pageNumber={pageNumber}\n      setPageNumber={(value) => {\n        setPageNumber(value)\n      }}\n    ></Table>\n  )\n}\n\nexport const WidthsInPercentage = Template.bind({});\n\nconst defaultArgs = {\n  columnTitles: ['Column1 Title- 50%', 'Column2 - 30%', 'Column3 - 20%'],\n  columnWidths: ['50%', '30%', '20%'],\n  rows: [...new Array(20)].map((_, i) => [`Column1`, `Column2`, `Column3`]),\n}\n\nWidthsInPercentage.args = defaultArgs\n\nWidthsInPercentage.argTypes = {\n  alternateRowColor: { control: { type: 'boolean' } },\n}\n\nexport const FixedWidths = Template.bind({});\n\nFixedWidths.args = {\n  ...defaultArgs,\n  columnWidths: ['500px', '300px', '200px'],\n  columnTitles: ['Column1 Title- 500px', 'Column2 - 300px', 'Column3 - 200px'],\n}\n\nconst FixedContainer = styled.div`\n  width: 1000px;\n\n  .title {\n    margin: 10px 0;\n  }\n`\n\nconst FixedContainerTemplate: Story<TableProps> = (args) => (\n  <FixedContainer style={{ width: '1000px' }}>\n    <div className=\"title\">Width of container is 1000px</div>\n    <Table {...args}></Table>\n  </FixedContainer>\n)\n\nexport const FixedAndPercentageWidths = FixedContainerTemplate.bind({});\n\nFixedAndPercentageWidths.args = {\n  ...defaultArgs,\n  columnWidths: ['50%', '250px', '250px'],\n  columnTitles: ['Column1 Title- 50%', 'Column2 - 250px', 'Column3 - 250px'],\n}\n\nexport const Numbered = Template.bind({});\nNumbered.args = {\n  ...defaultArgs,\n  pagination: true,\n  addRowNumbers: true,\n  pageNumber: 0,\n  rowsPerPage: 10,\n}\n\n\n\nWidthsInPercentage.parameters = { storySource: { source: \"(args) => {\\n  const [pageNumber, setPageNumber] = useState(0)\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value)\\n      }}\\n    ></Table>\\n  )\\n}\" }, ...WidthsInPercentage.parameters };\nFixedWidths.parameters = { storySource: { source: \"(args) => {\\n  const [pageNumber, setPageNumber] = useState(0)\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value)\\n      }}\\n    ></Table>\\n  )\\n}\" }, ...FixedWidths.parameters };\nFixedAndPercentageWidths.parameters = { storySource: { source: \"(args) => (\\n  <FixedContainer style={{ width: '1000px' }}>\\n    <div className=\\\"title\\\">Width of container is 1000px</div>\\n    <Table {...args}></Table>\\n  </FixedContainer>\\n)\" }, ...FixedAndPercentageWidths.parameters };\nNumbered.parameters = { storySource: { source: \"(args) => {\\n  const [pageNumber, setPageNumber] = useState(0)\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value)\\n      }}\\n    ></Table>\\n  )\\n}\" }, ...Numbered.parameters };","import { Flex, Text } from 'theme-ui'\nimport styled from '@emotion/styled'\nimport { transientOptions } from '../../../themes'\n\nexport const Container = styled(Flex, transientOptions)`\n  flex-direction: column;\n  width: 100%;\n  padding: 12px;\n`\n\nexport const Header = styled(Flex, transientOptions)`\n  align-items: center;\n  flex-direction: row;\n  min-height: 62px;\n  width: 100%;\n`\ninterface ColumnTitleProps {\n  $width: string\n}\nexport const ColumnTitle = styled(Text, transientOptions)<ColumnTitleProps>`\n  font-family: 'proxima-nova';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  width: ${({ $width }) => $width};\n  color: ${({ theme }) => theme.colors['grey-500']};\n`\nexport const Body = styled(Flex, transientOptions)`\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  overflow-y: scroll;\n  ${({ theme: { scroll } }) => scroll.thin}\n`\n\ninterface RowProps {\n  $alternateColor: boolean\n}\nexport const Row = styled(Flex, transientOptions)<RowProps>`\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  min-height: 62px;\n  ${({ $alternateColor }) =>\n    $alternateColor && `background-color: rgba(255, 255, 255, 0.05)`};\n\n  .rowNumber {\n    margin-right: 25px;\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors['grey-500']};\n  }\n`\n\ninterface CellProps {\n  $width: string\n}\nexport const Cell = styled(Flex, transientOptions)<CellProps>`\n  align-items: center;\n  width: ${({ $width }) => $width};\n  padding: 0px 5px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`\n","import React, { FC } from 'react'\nimport { Body, Container, ColumnTitle, Header, Row, Cell } from './Styled'\nimport Pagination from '../PaginationV2'\n\ntype Cell = string | number | React.ReactNode\n\ntype Row = Cell[]\n\nexport interface TableProps {\n  alternateRowColor?: boolean\n  columnTitles: string[]\n  columnWidths: string[]\n  rows: Row[]\n  addRowNumbers?: boolean\n  pageNumber?: number\n  setPageNumber?: (i: number) => void\n  rowsPerPage?: number\n  pagination?: boolean\n  numberOfPages?: number\n  hasPrev?: boolean\n  hasNext?: boolean\n}\n\nconst Table: FC<TableProps> = ({\n  alternateRowColor = false,\n  columnTitles,\n  columnWidths,\n  rows,\n  pageNumber = 0,\n  rowsPerPage = 100,\n  setPageNumber,\n  pagination,\n  hasPrev,\n  hasNext,\n}) => {\n\n  return (\n    <Container className=\"table\">\n      <Header className=\"tableHeader\">\n        {columnTitles.map((name, i) => {\n          return (\n            <ColumnTitle $width={columnWidths[i]} key={'tableHeader ' + i}>\n              {name}\n            </ColumnTitle>\n          )\n        })}\n      </Header>\n\n      <Body>\n        {rows.map((row, index) => {\n          const evenNumber = Math.abs(index % 2) == 1 //condition to alternate row background color\n          return (\n            <Row\n              $alternateColor={alternateRowColor && evenNumber}\n              className={'row ' + index}\n              key={'row ' + index}\n            >\n\n              {row.map((cell, i) => {\n                return (\n                  <Cell $width={columnWidths[i]} key={'tableCell ' + index + i}>\n                    {cell}\n                  </Cell>\n                )\n              })}\n            </Row>\n          )\n        })}\n      </Body>\n      {pagination && (\n        <Pagination pageNumber={pageNumber} setPageNumber={setPageNumber} hasPrev={hasPrev} hasNext={hasNext} />\n      )}\n    </Container>\n  )\n}\n\nexport default Table\n","var map = {\n\t\"./components/Upshot/Accordion/index.stories.tsx\": \"./src/components/Upshot/Accordion/index.stories.tsx\",\n\t\"./components/Upshot/Icon/index.stories.tsx\": \"./src/components/Upshot/Icon/index.stories.tsx\",\n\t\"./components/Upshot/PaginationV2/index.stories.tsx\": \"./src/components/Upshot/PaginationV2/index.stories.tsx\",\n\t\"./components/Upshot/Table/index.stories.tsx\": \"./src/components/Upshot/Table/index.stories.tsx\",\n\t\"./components/Upshot/Text/index.stories.tsx\": \"./src/components/Upshot/Text/index.stories.tsx\",\n\t\"./components/alert/alert.stories.tsx\": \"./src/components/alert/alert.stories.tsx\",\n\t\"./components/button/Button.stories.tsx\": \"./src/components/button/Button.stories.tsx\",\n\t\"./components/gradientProgressBar/gradientProgressBar.stories.tsx\": \"./src/components/gradientProgressBar/gradientProgressBar.stories.tsx\",\n\t\"./components/icon/cryptoIcon/cryptoIcon.stories.tsx\": \"./src/components/icon/cryptoIcon/cryptoIcon.stories.tsx\",\n\t\"./components/icon/icon.stories.tsx\": \"./src/components/icon/icon.stories.tsx\",\n\t\"./components/image/image.stories.tsx\": \"./src/components/image/image.stories.tsx\",\n\t\"./components/input/input.stories.tsx\": \"./src/components/input/input.stories.tsx\",\n\t\"./components/loadingSpinner/loadingSpinner.stories.tsx\": \"./src/components/loadingSpinner/loadingSpinner.stories.tsx\",\n\t\"./components/notification/notification.stories.tsx\": \"./src/components/notification/notification.stories.tsx\",\n\t\"./components/numberInput/numberInput.stories.tsx\": \"./src/components/numberInput/numberInput.stories.tsx\",\n\t\"./components/tabSwitcher/tabSwitcher.stories.tsx\": \"./src/components/tabSwitcher/tabSwitcher.stories.tsx\",\n\t\"./components/tag/tag.stories.tsx\": \"./src/components/tag/tag.stories.tsx\",\n\t\"./components/theme/theme.stories.tsx\": \"./src/components/theme/theme.stories.tsx\",\n\t\"./components/theme/typography/typography.stories.tsx\": \"./src/components/theme/typography/typography.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";"],"names":[],"sourceRoot":""}