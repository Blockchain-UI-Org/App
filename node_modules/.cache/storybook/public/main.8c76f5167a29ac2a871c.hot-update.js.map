{"version":3,"file":"main.8c76f5167a29ac2a871c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AAEA;AAAA;AAasources":["webpack://app/./src/component/finance/highlightCards/index.stories.tsx","webpack://app/./src/component/finance/highlightCards/index.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Meta, Story } from \\\"@storybook/react\\\";\\nimport HighlightCard, { HighlightCardProps } from \\\".\\\";\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: \\\"Finance/HighlightCard\\\",\\n  component: HighlightCard,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    chartType: { options: [\\\"line\\\", \\\"bar\\\"], control: { type: \\\"select\\\" } },\\n\\n    color: {\\n      options: [\\\"green\\\", \\\"yellow\\\", \\\"red\\\", \\\"blue\\\"],\\n      control: { type: \\\"select\\\" }, // Automatically inferred when 'options' is defined\\n    },\\n  },\\n  args: {\\n    chartData: [40, 70, 75, 70, 50, 28, 7, 64, 38, 27],\\n  },\\n} as Meta;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: Story<HighlightCardProps> = (args) => (\\n  <HighlightCard {...args} currency=\\\"BTC\\\" />\\n);\\n\\nexport const Basic = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\nBasic.args = {\\n  title: \\\"Title\\\",\\n  amount: \\\"20,000.00\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Basic\":{\"startLoc\":{\"col\":44,\"line\":24},\"endLoc\":{\"col\":1,\"line\":26},\"startBody\":{\"col\":44,\"line\":24},\"endBody\":{\"col\":1,\"line\":26}}};\n    \nimport React from \"react\";\nimport { Meta, Story } from \"@storybook/react\";\nimport HighlightCard, { HighlightCardProps } from \".\";\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: \"Finance/HighlightCard\",\n  component: HighlightCard,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    chartType: { options: [\"line\", \"bar\"], control: { type: \"select\" } },\n\n    color: {\n      options: [\"green\", \"yellow\", \"red\", \"blue\"],\n      control: { type: \"select\" }, // Automatically inferred when 'options' is defined\n    },\n  },\n  args: {\n    chartData: [40, 70, 75, 70, 50, 28, 7, 64, 38, 27],\n  },\n} as Meta;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: Story<HighlightCardProps> = (args) => (\n  <HighlightCard {...args} currency=\"BTC\" />\n);\n\nexport const Basic = Template.bind({});\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nBasic.args = {\n  title: \"Title\",\n  amount: \"20,000.00\",\n};\n\n\n\nBasic.parameters = { storySource: { source: \"(args) => (\\n  <HighlightCard {...args} currency=\\\"BTC\\\" />\\n)\" }, ...Basic.parameters };","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { colors, ThemeColor } from \"../../theme/colors\";\nimport { SparkLine } from \"../../charts/sparkline\";\nimport { CryptoSymbols } from \"../../static/types\";\nimport { CryptoIcon } from \"../../icon/icon\";\n\nexport interface HighlightCardProps {\n  width?: string;\n  height?: string;\n  color: ThemeColor;\n  chartData: number[];\n  chartType: \"bar\" | \"line\";\n  title?: string;\n  amount?: string;\n  currency?: CryptoSymbols;\n}\n\nconst HighlightCard: FC<HighlightCardProps> = ({\n  width = \"400px\",\n  height = \"150px\",\n  color = \"blue\",\n  chartType = \"line\",\n  chartData = [],\n  title,\n  amount,\n  currency,\n}) => {\n  return (\n    <Container\n      $height={height}\n      $width={width}\n      $backgroundColor={colors[color].background}\n      $color={colors[color].color}\n    >\n      <Details>\n        <div className=\"title\">{title}</div>\n        <div className=\"amount\">\n          {currency && <CryptoIcon cryptoSymbol={currency} />}\n          {amount}\n        </div>\n      </Details>\n\n      <SparkLine\n        chartType={chartType}\n        chartData={chartData}\n        width=\"50%\"\n        height=\"50%\"\n      />\n    </Container>\n  );\n};\n\nexport default HighlightCard;\n\ninterface CardProps {\n  $width?: string;\n  $height?: string;\n  $backgroundColor: string;\n  $color: string;\n}\n\nconst Container = styled.div<CardProps>`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  color: ${({ $color }) => $color};\n  width: ${({ $width }) => $width};\n  height: ${({ $height }) => $height};\n  background-color: ${({ $backgroundColor }) => $backgroundColor};\n  border-radius: 15px;\n  padding: 25px;\n\n  .title {\n    color: ${({ $color }) => $color};\n  }\n  .amount {\n    font-size: 32px;\n    font-weight: bold;\n  }\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n"],"names":[],"sourceRoot":""}