{"version":3,"file":"main.a6ba34229f96a2b05719.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AAEA;AACA;AAAA;AAYA;AAOA;AAAA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA5DA;AA8DA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/finance/creditcards/index.stories.tsx","webpack://app/./src/component/finance/creditcards/index.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\nimport CreditCard from \\\".\\\";\\nimport styled from \\\"styled-components\\\";\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: \\\"Finance/CreditCards\\\",\\n  component: CreditCard,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    themeColor: {\\n      options: [\\\"green\\\", \\\"yellow\\\", \\\"red\\\", \\\"blue\\\"],\\n      control: { type: \\\"select\\\" }, // Automatically inferred when 'options' is defined\\n    },\\n  },\\n} as ComponentMeta<typeof CreditCard>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: ComponentStory<typeof CreditCard> = (args) => (\\n  <CreditCard {...args} />\\n);\\n\\nexport const Default = Template.bind({});\\n\\nDefault.args = {\\n  currency: \\\"BTC\\\",\\n};\\n\\nexport const Stacked = () => {\\n  return (\\n    <StackedWrapper>\\n      <GreenCard>\\n        <Template themeColor=\\\"green\\\" currency=\\\"BTC\\\" />\\n      </GreenCard>\\n      <YellowCard>\\n        <Template themeColor=\\\"yellow\\\" />\\n      </YellowCard>\\n      <RedCard>\\n        <Template themeColor=\\\"red\\\" />\\n      </RedCard>\\n      <BlueCard>\\n        <Template themeColor=\\\"blue\\\" currency=\\\"USDC\\\" />\\n      </BlueCard>\\n      <BlackCard>\\n        <Template />\\n      </BlackCard>\\n    </StackedWrapper>\\n  );\\n};\\n\\nconst StackedWrapper = styled.div`\\n  position: relative;\\n`;\\n\\nconst GreenCard = styled.div`\\n  position: fixed;\\n  top: 10px;\\n`;\\n\\nconst YellowCard = styled.div`\\n  position: fixed;\\n  top: 100px;\\n`;\\nconst RedCard = styled.div`\\n  position: fixed;\\n  top: 300px;\\n`;\\n\\nconst BlueCard = styled.div`\\n  position: fixed;\\n  top: 400px;\\n`;\\n\\nconst BlackCard = styled.div`\\n  position: fixed;\\n  top: 400px;\\n`;\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":52,\"line\":20},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":52,\"line\":20},\"endBody\":{\"col\":1,\"line\":22}},\"Stacked\":{\"startLoc\":{\"col\":23,\"line\":30},\"endLoc\":{\"col\":1,\"line\":50},\"startBody\":{\"col\":23,\"line\":30},\"endBody\":{\"col\":1,\"line\":50}}};\n    \nimport React from \"react\";\nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\nimport CreditCard from \".\";\nimport styled from \"styled-components\";\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: \"Finance/CreditCards\",\n  component: CreditCard,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    themeColor: {\n      options: [\"green\", \"yellow\", \"red\", \"blue\"],\n      control: { type: \"select\" }, // Automatically inferred when 'options' is defined\n    },\n  },\n} as ComponentMeta<typeof CreditCard>;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: ComponentStory<typeof CreditCard> = (args) => (\n  <CreditCard {...args} />\n);\n\nexport const Default = Template.bind({});;\n\nDefault.args = {\n  currency: \"BTC\",\n};\n\nexport const Stacked = () => {\n  return (\n    <StackedWrapper>\n      <GreenCard>\n        <Template themeColor=\"green\" currency=\"BTC\" />\n      </GreenCard>\n      <YellowCard>\n        <Template themeColor=\"yellow\" />\n      </YellowCard>\n      <RedCard>\n        <Template themeColor=\"red\" />\n      </RedCard>\n      <BlueCard>\n        <Template themeColor=\"blue\" currency=\"USDC\" />\n      </BlueCard>\n      <BlackCard>\n        <Template />\n      </BlackCard>\n    </StackedWrapper>\n  );\n};\n\nconst StackedWrapper = styled.div`\n  position: relative;\n`;\n\nconst GreenCard = styled.div`\n  position: fixed;\n  top: 10px;\n`;\n\nconst YellowCard = styled.div`\n  position: fixed;\n  top: 100px;\n`;\nconst RedCard = styled.div`\n  position: fixed;\n  top: 300px;\n`;\n\nconst BlueCard = styled.div`\n  position: fixed;\n  top: 400px;\n`;\n\nconst BlackCard = styled.div`\n  position: fixed;\n  top: 400px;\n`;\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => (\\n  <CreditCard {...args} />\\n)\" }, ...Default.parameters };\nStacked.parameters = { storySource: { source: \"() => {\\n  return (\\n    <StackedWrapper>\\n      <GreenCard>\\n        <Template themeColor=\\\"green\\\" currency=\\\"BTC\\\" />\\n      </GreenCard>\\n      <YellowCard>\\n        <Template themeColor=\\\"yellow\\\" />\\n      </YellowCard>\\n      <RedCard>\\n        <Template themeColor=\\\"red\\\" />\\n      </RedCard>\\n      <BlueCard>\\n        <Template themeColor=\\\"blue\\\" currency=\\\"USDC\\\" />\\n      </BlueCard>\\n      <BlackCard>\\n        <Template />\\n      </BlackCard>\\n    </StackedWrapper>\\n  );\\n}\" }, ...Stacked.parameters };","import React, { FC, useState } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport styled from \"styled-components\";\nimport Image from \"../../image/image\";\nimport { colors, ThemeColor } from \"../../theme/colors\";\nimport { CryptoIcon } from \"../../icon/icon\";\nimport { CryptoSymbols } from \"../../static/types\";\n\ninterface CreditCardType {\n  balance?: string;\n  name?: string;\n  expDate?: string;\n  cvv?: string;\n  themeColor?: ThemeColor;\n  currency?: CryptoSymbols;\n}\n\nconst CreditCard: FC<CreditCardType> = ({\n  balance = \"20,000.00\",\n  name = \"Your Name\",\n  expDate = \"01/01\",\n  cvv = \"123\",\n  themeColor,\n  currency,\n}) => {\n  const [showBalance, setShowBalance] = useState(true);\n  const [showCvv, setShowCvv] = useState(false);\n\n  return (\n    <CardItemStyle $colorMode={themeColor && colors[themeColor]}>\n      <div>\n        <Title>Balance</Title>\n        <BalanceWrapper onClick={() => setShowBalance(!showBalance)}>\n          <div style={{ marginRight: \"10px\" }}>\n            {showBalance ? (\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                {currency ? <CryptoIcon cryptoSymbol={currency} /> : \"$\"}{\" \"}\n                <div style={{ marginLeft: \"10px\" }}>{balance}</div>\n              </div>\n            ) : (\n              \"*******\"\n            )}\n          </div>\n          <Icon\n            width={20}\n            icon={showBalance ? \"eva:eye-fill\" : \"eva:eye-off-fill\"}\n          />\n        </BalanceWrapper>\n      </div>\n      <CardNumber>\n        <img width={40} alt=\"credit-card\" src=\"/assets/Mastercard-logo.svg\" />\n        <Info style={{ marginLeft: \"10px\" }}>**** **** **** 1234</Info>\n      </CardNumber>\n      <OtherDetails>\n        <div>\n          <Subtitle>Name</Subtitle>\n          <Info>{name}</Info>\n        </div>\n        <div>\n          <Subtitle>Exp Date</Subtitle>\n          <Info>{expDate}</Info>\n        </div>\n        <div>\n          <Subtitle>CVV</Subtitle>\n          <Info>\n            <div> {showCvv ? cvv : \"***\"}</div>\n            <Cvv onClick={() => setShowCvv(!showCvv)}>\n              <Icon\n                width={20}\n                icon={showCvv ? \"eva:eye-fill\" : \"eva:eye-off-fill\"}\n              />\n            </Cvv>\n          </Info>\n        </div>\n      </OtherDetails>\n    </CardItemStyle>\n  );\n};\n\nexport default CreditCard;\n\ninterface CardStyle {\n  $colorMode?: Record<string, string>;\n}\n\nconst CardItemStyle = styled.div<CardStyle>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-image: url(\"/assets/carbon_fiber1.webp\");\n  background-size: cover;\n  background: ${({ $colorMode }) => $colorMode?.background};\n  height: 300px;\n  width: 525px;\n  color: ${({ $colorMode }) => ($colorMode ? $colorMode?.color : \"#FFFFFF\")};\n  border-radius: 20px;\n  padding: 20px;\n  font-family: Public Sans;\n  opacity: 0.95;\n`;\n\nconst Title = styled.div`\n  color: #fffff;\n  opacity: 0.7;\n`;\n\nconst Subtitle = styled.div`\n  color: #fffff;\n  opacity: 0.7;\n  font-weight: thin;\n  font-size: 15px;\n  margin-bottom: 5px;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 20px;\n`;\n\nconst Cvv = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst BalanceWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  height: 20px;\n  margin: 10px 0;\n  font-size: 30px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst CardNumber = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 40px;\n  font-size: 25px;\n  align-items: center;\n`;\n\nconst OtherDetails = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 40px;\n  font-size: 25px;\n  align-items: center;\n`;\n"],"names":[],"sourceRoot":""}