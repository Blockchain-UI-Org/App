{"version":3,"file":"main.f3c577038027c0a03466.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAgBA;AAMA;AALA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAxBA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/tableV2/index.tsx","webpack://app/./src/scroll/index.tsx"],"sourcesContent":["import Table from \"@mui/material/Table\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport styled from \"styled-components\";\nimport { FC } from \"react\";\nimport { Box, Button, Card, CardHeader, CardProps } from \"@mui/material\";\nimport TableHeadCustom from \"./tableHeadCustom\";\nimport { Icon as Iconify } from \"@iconify/react\";\nimport Scrollbar from \"../../scroll\";\n\ntype RowProps = {\n  id: string;\n  category: string;\n  price: number;\n  status: string;\n};\n\ninterface Props extends CardProps {\n  title?: string;\n  subheader?: string;\n  tableData: RowProps[];\n  tableLabels: any;\n}\n\nexport default function TableComponent({\n  title,\n  subheader,\n  tableData,\n  tableLabels,\n  ...other\n}: Props) {\n  return (\n    <Card {...other}>\n      <CardHeader title={title} subheader={subheader} sx={{ mb: 3 }} />\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 720 }}>\n          <Table>\n            <TableHeadCustom headLabel={tableLabels} />\n\n            <TableBody>\n              {tableData.map((row) => (\n                <Row key={row.id} row={row} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <Divider />\n\n      <Box sx={{ p: 2, textAlign: \"right\" }}>\n        <Button\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon={\"eva:arrow-ios-forward-fill\"} />}\n        >\n          View All\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nconst Row: FC = () => {\n  return (\n    <TableRow>\n      <TableCell>{`INV-${row.id}`}</TableCell>\n\n      <TableCell>{row.category}</TableCell>\n\n      <TableCell>{fCurrency(row.price)}</TableCell>\n\n      <TableCell>\n        <Label\n          variant={theme.palette.mode === \"light\" ? \"ghost\" : \"filled\"}\n          color={\n            (row.status === \"in_progress\" && \"warning\") ||\n            (row.status === \"out_of_date\" && \"error\") ||\n            \"success\"\n          }\n        >\n          {sentenceCase(row.status)}\n        </Label>\n      </TableCell>\n\n      <TableCell align=\"right\"></TableCell>\n    </TableRow>\n  );\n};\n\nconst Container = styled.div`\n  color: white;\n`;\n\nconst Label = styled.div``;\n","import SimpleBarReact, { Props as ScrollbarProps } from \"simplebar-react\";\n// @mui\nimport { alpha, styled } from \"@mui/material/styles\";\nimport { Box, SxProps } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(() => ({\n  flexGrow: 1,\n  height: \"100%\",\n  overflow: \"hidden\",\n}));\n\nconst SimpleBarStyle = styled(SimpleBarReact)(({ theme }) => ({\n  maxHeight: \"100%\",\n  \"& .simplebar-scrollbar\": {\n    \"&:before\": {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48),\n    },\n    \"&.simplebar-visible:before\": {\n      opacity: 1,\n    },\n  },\n  \"& .simplebar-track.simplebar-vertical\": {\n    width: 10,\n  },\n  \"& .simplebar-track.simplebar-horizontal .simplebar-scrollbar\": {\n    height: 6,\n  },\n  \"& .simplebar-mask\": {\n    zIndex: \"inherit\",\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ninterface Props extends ScrollbarProps {\n  sx?: SxProps;\n}\n\nexport default function Scrollbar({ children, sx, ...other }: Props) {\n  const userAgent =\n    typeof navigator === \"undefined\" ? \"SSR\" : navigator.userAgent;\n\n  const isMobile =\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      userAgent\n    );\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: \"auto\", ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <RootStyle>\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </SimpleBarStyle>\n    </RootStyle>\n  );\n}\n"],"names":[],"sourceRoot":""}