{"version":3,"file":"main.49c85a64efd9d6188043.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAeA;AAIA;AAHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAFA;AAAA;AAAA","sources":["webpack://app/./src/component/charts/pie/index.tsx"],"sourcesContent":["import merge from \"lodash/merge\";\nimport React, { FC } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\nimport { colors, legacyColors, ThemeColor } from \"../../theme/colors\";\nimport BaseOptionChart from \"../../theme/charts\";\nimport { fNumber } from \"../../../utils/number\";\n\nexport interface ChartProps {\n  color?: ThemeColor;\n  title?: string;\n  subtitle?: string;\n  chartLabels: string[];\n  chartData: {\n    label: string;\n    value: number;\n  }[];\n  chartColors: string[];\n  diameter: string;\n}\n\nconst PieChart: FC<ChartProps> = ({\n  diameter = \"100%\",\n  chartData,\n  chartColors,\n}) => {\n  const chartLabels = chartData.map((i) => i.label);\n  const chartSeries = chartData.map((i) => i.value);\nconsole.log()\n  const chartOptions = merge(BaseOptionChart(), {\n    chart: {\n      type: \"donut\",\n      length: 3,\n    },\n    length: 3,\n    colors: [\"#FFFFF\", \"#FFFFF\", \"#FFFFF\"],\n    labels: chartLabels,\n    stroke: { colors: [legacyColors.grey500] },\n    legend: { floating: true, horizontalAlign: \"center\" },\n    tooltip: {\n      fillSeriesColor: false,\n      y: {\n        formatter: (seriesName: string) => fNumber(seriesName),\n        title: {\n          formatter: (seriesName: string) => `${seriesName}`,\n        },\n      },\n    },\n    plotOptions: {\n      pie: {\n        donut: {\n          size: \"90%\",\n          labels: {\n            value: {\n              formatter: (val: number | string) => fNumber(val),\n            },\n            total: {\n              formatter: (w: { globals: { seriesTotals: number[] } }) => {\n                const sum = w.globals.seriesTotals.reduce((a, b) => a + b, 0);\n                return fNumber(sum);\n              },\n            },\n          },\n        },\n      },\n    },\n  });\n\n  return (\n    <Container>\n      <ReactApexChart\n        type=\"donut\"\n        series={chartSeries}\n        options={chartOptions}\n        height={diameter}\n        labels={[\"Apple\", \"Mango\", \"Orange\", \"Watermelon\"]}\n      />\n    </Container>\n  );\n};\n\nexport default PieChart;\n\nconst Container = styled.div`\n  color: white;\n`;\n"],"names":[],"sourceRoot":""}