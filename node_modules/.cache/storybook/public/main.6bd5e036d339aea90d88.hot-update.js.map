{"version":3,"file":"main.6bd5e036d339aea90d88.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AASA;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAaA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAxBA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AApBA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/tableV2/tableHeadCustom.tsx"],"sourcesContent":["// @mui\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from \"@mui/material\";\nimport styled from \"styled-components\";\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: \"1px\",\n  height: \"1px\",\n  overflow: \"hidden\",\n  position: \"absolute\",\n  whiteSpace: \"nowrap\",\n  clip: \"rect(0 0 0 0)\",\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: \"asc\" | \"desc\";\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <StyledHead sx={sx}>\n      <StyledRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.align || \"left\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: \"capitalize\" }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === \"desc\"\n                      ? \"sorted descending\"\n                      : \"sorted ascending\"}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </StyledTableCell>\n        ))}\n      </StyledRow>\n    </StyledHead>\n  );\n}\n\nconst StyledHead = styled(TableHead)`\n  margin: 10px;\n`;\n\nconst StyledRow = styled(TableRow)`\n  margin: 10px;\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  background-color: green;\n\n  .MuiTableHead-root {\n    color: red;\n    padding-left: 5px;\n  }\n\n  :first-child {\n    color: red;\n    padding-left: 5px;\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n  }\n\n  :last-child {\n    padding-right: 5px;\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n`;\n"],"names":[],"sourceRoot":""}