{"version":3,"file":"main.fe5b9600d5f55a604752.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AAAA;AAqBA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AARA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAPA;AAAA","sources":["webpack://app/./src/components/PaginationV2/Styled.ts","webpack://app/./src/components/Upshot/Table/index.tsx","webpack://app/./src/components/Upshot/themes/index.tsx"],"sourcesContent":["import { Flex, Text } from \"theme-ui\";\nimport styled from \"@emotion/styled\";\nimport { transientOptions } from \"../Upshot/themes\";\n\ninterface PaginationProps {\n  $disablePrev?: boolean;\n  $disableNext?: boolean;\n  $highlight?: boolean;\n}\n\nexport const Pagination = styled(Flex, transientOptions)<PaginationProps>`\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n  margin-top: 50px;\n  font-size: 15px;\n  height: 10px;\n  gap: 10px;\n\n  .prevStep {\n    display: flex;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 3px 10px;\n    padding: 2px 8px;\n    user-select: none;\n    :hover {\n      cursor: ${({ $disablePrev }) =>\n        $disablePrev ? \"not-allowed\" : \"pointer\"};\n      background-color: ${({ $disablePrev }) =>\n        $disablePrev ? \"inherit\" : \"#0091ff\"};\n    }\n\n    color: ${({ $disablePrev, theme }) =>\n      $disablePrev ? theme?.colors?.[\"grey-700\"] : theme?.colors?.[\"grey-200\"]};\n\n    border: ${({ $disablePrev }) =>\n      $disablePrev ? \"2px solid inherit\" : \"2px solid #0091ff\"};\n  }\n\n  .nextStep {\n    display: flex;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 2px 8px;\n    user-select: none;\n    :hover {\n      cursor: ${({ $disableNext }) =>\n        $disableNext ? \"not-allowed\" : \"pointer\"};\n      background-color: ${({ $disableNext }) =>\n        $disableNext ? \"inherit\" : \"#0091ff\"};\n    }\n\n    color: ${({ $disableNext, theme }) =>\n      $disableNext ? theme?.colors?.[\"grey-700\"] : theme?.colors?.[\"grey-200\"]};\n\n    border: ${({ $disableNext }) =>\n      $disableNext ? \"2px solid inherit\" : \"2px solid #0091ff\"};\n  }\n`;\n\ninterface PageButtonProps {\n  $highlight?: boolean;\n}\n\nexport const PageButton = styled(Flex, transientOptions)<PageButtonProps>`\n  display: flex;\n  justify-content: center;\n  width: 30px;\n  background-color: ${({ $highlight }) => ($highlight ? \"#0091ff\" : \"inherit\")};\n  border-radius: 3px;\n  margin: 0;\n`;\n","import React, { FC } from \"react\";\nimport { Body, Container, ColumnTitle, Header, Row, Cell } from \"./Styled\";\nimport Pagination from \"../../PaginationV2\";\n\ntype Cell = string | number | React.ReactNode;\n\ntype Row = Cell[];\n\nexport interface TableProps {\n  alternateRowColor?: boolean;\n  columnTitles: string[];\n  columnWidths: string[];\n  rows: Row[];\n  addRowNumbers?: boolean;\n  pageNumber?: number;\n  setPageNumber?: (i: number) => void;\n  rowsPerPage?: number;\n  pagination?: boolean;\n  numberOfPages?: number;\n  hasPrev?: boolean;\n  hasNext?: boolean;\n}\n\nconst Table: FC<TableProps> = ({\n  alternateRowColor = false,\n  columnTitles,\n  columnWidths,\n  rows,\n  pageNumber = 0,\n  rowsPerPage = 100,\n  setPageNumber,\n  pagination,\n  hasPrev,\n  hasNext,\n}) => {\n  return (\n    <Container className=\"table\">\n      <Header className=\"tableHeader\">\n        {columnTitles.map((name, i) => {\n          return (\n            <ColumnTitle $width={columnWidths[i]} key={\"tableHeader \" + i}>\n              {name}\n            </ColumnTitle>\n          );\n        })}\n      </Header>\n\n      <Body>\n        {rows.map((row, index) => {\n          const evenNumber = Math.abs(index % 2) == 1; //condition to alternate row background color\n          return (\n            <Row\n              $alternateColor={alternateRowColor && evenNumber}\n              className={\"row \" + index}\n              key={\"row \" + index}\n            >\n              {row.map((cell, i) => {\n                return (\n                  <Cell $width={columnWidths[i]} key={\"tableCell \" + index + i}>\n                    {cell}\n                  </Cell>\n                );\n              })}\n            </Row>\n          );\n        })}\n      </Body>\n      {pagination && (\n        <Pagination\n          pageNumber={pageNumber}\n          setPageNumber={setPageNumber}\n          hasPrev={hasPrev}\n          hasNext={hasNext}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Table;\n","import React from 'react'\nimport { css } from '@emotion/react'\nimport { ThemeProvider } from 'theme-ui'\nimport { Global } from '@emotion/react'\nimport theme from './UpshotUI'\nimport { CreateStyled } from '@emotion/styled'\n\ninterface Props {\n  children: React.ReactNode\n}\n\n/**\n * Global CSS for the application.\n */\nexport const globalStyles = css`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n`\n\nexport const transientOptions: Parameters<CreateStyled>[1] = {\n  shouldForwardProp: (propName: string) => !propName.startsWith('$'),\n}\n\nexport default function UpshotThemeProvider({ children }: Props) {\n  return (\n    <ThemeProvider {...{ theme }}>\n      <Global styles={globalStyles} />\n      {children}\n    </ThemeProvider>\n  )\n}\n"],"names":[],"sourceRoot":""}