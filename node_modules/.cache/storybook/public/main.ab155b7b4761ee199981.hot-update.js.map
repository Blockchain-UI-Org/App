{"version":3,"file":"main.ab155b7b4761ee199981.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://app/./src/Components/loadingSpinner/loadingSpinner.stories.tsx","webpack://app/./src/Components/loadingSpinner/loadingSpinner.tsx","webpack://app/./src/ sync ^\\.(?9afe"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story, Meta } from '@storybook/react';\\r\\nimport { LoadingSpinner, LoadingSpinnerProps } from './loadingSpinner';\\r\\nimport { Button } from '../button/button';\\r\\n\\r\\nexport default {\\r\\n  component: LoadingSpinner,\\r\\n  title: 'Baseweb /Atoms/  LoadingSpinner',\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<LoadingSpinnerProps> = args => <LoadingSpinner {...args} />;\\r\\n\\r\\nexport const Basic = Template.bind({});\\r\\n\\r\\nBasic.args = {\\r\\n  width: '32px',\\r\\n};\\r\\n\\r\\ninterface ButtonProps {\\r\\n  loading: boolean;\\r\\n  title: string;\\r\\n}\\r\\n\\r\\nconst LoadingButton: React.FC<ButtonProps> = ({ title, loading }) => {\\r\\n  return <Button>{loading ? <LoadingSpinner /> : title}</Button>;\\r\\n};\\r\\n\\r\\nconst LoadingButtonTemplate: Story<ButtonProps> = args => <LoadingButton {...args} />;\\r\\n\\r\\nexport const BasicLoadingButton = LoadingButtonTemplate.bind({});\\r\\n\\r\\nBasicLoadingButton.args = {\\r\\n  loading: false,\\r\\n  title: 'Loading Button',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Basic\":{\"startLoc\":{\"col\":45,\"line\":11},\"endLoc\":{\"col\":81,\"line\":11},\"startBody\":{\"col\":45,\"line\":11},\"endBody\":{\"col\":81,\"line\":11}},\"BasicLoadingButton\":{\"startLoc\":{\"col\":50,\"line\":28},\"endLoc\":{\"col\":85,\"line\":28},\"startBody\":{\"col\":50,\"line\":28},\"endBody\":{\"col\":85,\"line\":28}}};\n    \nimport React from 'react';\r\nimport { Story, Meta } from '@storybook/react';\r\nimport { LoadingSpinner, LoadingSpinnerProps } from './loadingSpinner';\r\nimport { Button } from '../button/button';\r\n\r\nexport default {\r\n  component: LoadingSpinner,\r\n  title: 'Baseweb /Atoms/  LoadingSpinner',\r\n} as Meta;\r\n\r\nconst Template: Story<LoadingSpinnerProps> = args => <LoadingSpinner {...args} />;\r\n\r\nexport const Basic = Template.bind({});;\r\n\r\nBasic.args = {\r\n  width: '32px',\r\n};\r\n\r\ninterface ButtonProps {\r\n  loading: boolean;\r\n  title: string;\r\n}\r\n\r\nconst LoadingButton: React.FC<ButtonProps> = ({ title, loading }) => {\r\n  return <Button>{loading ? <LoadingSpinner /> : title}</Button>;\r\n};\r\n\r\nconst LoadingButtonTemplate: Story<ButtonProps> = args => <LoadingButton {...args} />;\r\n\r\nexport const BasicLoadingButton = LoadingButtonTemplate.bind({});\r\n\r\nBasicLoadingButton.args = {\r\n  loading: false,\r\n  title: 'Loading Button',\r\n};\r\n\n\n\nBasic.parameters = { storySource: { source: \"args => <LoadingSpinner {...args} />\" }, ...Basic.parameters };\nBasicLoadingButton.parameters = { storySource: { source: \"args => <LoadingButton {...args} />\" }, ...BasicLoadingButton.parameters };","import { FC } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport Image from '../image/image';\r\n\r\nexport interface LoadingSpinnerProps {\r\n  width?: string;\r\n}\r\n\r\nconst SpinnerAnimation = keyframes`\r\n  0% {\r\n    transform: rotateZ(0deg);\r\n  }\r\n  100% {\r\n    transform: rotateZ(360deg)\r\n  }\r\n`;\r\n\r\nconst Circle = styled(Image)`\r\n  animation: 1s linear infinite ${SpinnerAnimation};\r\n  width: ${({ width }) => width || '1.5rem'};\r\n`;\r\n\r\nexport const LoadingSpinner: FC<LoadingSpinnerProps> = ({ width }) => {\r\n  return <Circle width={width} name=\"spinner\" />;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","var map = {\n\t\"./Components/Button/Button.stories.tsx\": \"./src/Components/Button/Button.stories.tsx\",\n\t\"./Components/alert/alert.stories.tsx\": \"./src/Components/alert/alert.stories.tsx\",\n\t\"./Components/gradientProgressBar/gradientProgressBar.stories.tsx\": \"./src/Components/gradientProgressBar/gradientProgressBar.stories.tsx\",\n\t\"./Components/icon/cryptoIcon/cryptoIcon.stories.tsx\": \"./src/Components/icon/cryptoIcon/cryptoIcon.stories.tsx\",\n\t\"./Components/icon/icon.stories.tsx\": \"./src/Components/icon/icon.stories.tsx\",\n\t\"./Components/image/image.stories.tsx\": \"./src/Components/image/image.stories.tsx\",\n\t\"./Components/input/input.stories.tsx\": \"./src/Components/input/input.stories.tsx\",\n\t\"./Components/loadingSpinner/loadingSpinner.stories.tsx\": \"./src/Components/loadingSpinner/loadingSpinner.stories.tsx\",\n\t\"./Components/theme/theme.stories.tsx\": \"./src/Components/theme/theme.stories.tsx\",\n\t\"./Components/theme/typography/typography.stories.tsx\": \"./src/Components/theme/typography/typography.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";"],"names":[],"sourceRoot":""}