{"version":3,"file":"main.2df49f8e0a26d89449a7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AAEA;AACA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://app/./src/Components/gradientProgressBar/gradientProgressBar.stories.tsx","webpack://app/./src/Components/gradientProgressBar/index.tsx","webpack://app/./src/ sync ^\\.(?9afe"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Story, Meta } from '@storybook/react';\\nimport GradientProgressBar, { ProgressBarProps } from '.';\\n\\nexport default {\\n  component: GradientProgressBar,\\n  title: 'Baseweb/Molecules/ProgressBar/GradientProgressBar',\\n} as Meta;\\n\\nconst Template: Story<ProgressBarProps> = args => <GradientProgressBar {...args} />;\\n\\nexport const Basic = Template.bind({});\\n\\nBasic.args = {\\n  minValue: 0,\\n  maxValue: 100,\\n  value: 50,\\n  showValue: true,\\n  errorMessage: 'Mock Error Message',\\n};\\n\\nBasic.argTypes = {\\n  errorMessage: { control: { type: 'text' } },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Basic\":{\"startLoc\":{\"col\":42,\"line\":10},\"endLoc\":{\"col\":83,\"line\":10},\"startBody\":{\"col\":42,\"line\":10},\"endBody\":{\"col\":83,\"line\":10}}};\n    \nimport React from 'react';\nimport { Story, Meta } from '@storybook/react';\nimport GradientProgressBar, { ProgressBarProps } from '.';\n\nexport default {\n  component: GradientProgressBar,\n  title: 'Baseweb/Molecules/ProgressBar/GradientProgressBar',\n} as Meta;\n\nconst Template: Story<ProgressBarProps> = args => <GradientProgressBar {...args} />;\n\nexport const Basic = Template.bind({});\n\nBasic.args = {\n  minValue: 0,\n  maxValue: 100,\n  value: 50,\n  showValue: true,\n  errorMessage: 'Mock Error Message',\n};\n\nBasic.argTypes = {\n  errorMessage: { control: { type: 'text' } },\n};\n\n\n\nBasic.parameters = { storySource: { source: \"args => <GradientProgressBar {...args} />\" }, ...Basic.parameters };","import React, { FC, ReactElement } from 'react';\nimport styled from 'styled-components';\n\nimport { formatNumber } from '../../utils/format';\nimport { theme } from '../theme';\n\nexport interface ProgressBarProps {\n  minValue: number;\n  maxValue: number;\n  value: number;\n  showValue?: boolean;\n  errorMessage?: string | ReactElement;\n  title: string;\n}\nconst { error100, error500, yellow500, pink500, success500, white, black, blue500 } = theme.colors;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  align-content: center;\n\n  .slider {\n    -webkit-appearance: none;\n    width: 100%;\n    height: 6px;\n    border-radius: 24px;\n    background: linear-gradient(90deg, ${pink500} 0%, ${yellow500} 50%, ${success500} 100%);\n    outline: none;\n    opacity: 0.7;\n    -webkit-transition: 0.2s;\n    transition: opacity 0.2s;\n  }\n\n  .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background: ${white};\n    cursor: pointer;\n    border: 2px solid ${success500};\n  }\n\n  .slider::-moz-range-thumb {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: ${success500};\n    cursor: pointer;\n  }\n`;\nconst StyledValue = styled.div`\n  padding-right: 10px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 30px;\n  color: ${black};\n`;\n\nconst ErrorMessage = styled.div`\n  width: 416px;\n  height: 80px;\n  color: ${error500};\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 16px;\n  margin-top: 28px;\n  /* Error/Error 100 */\n\n  background: ${error100};\n  border-radius: 8px;\n\n  a {\n    color: ${blue500};\n  }\n`;\n\nconst GradientProgressBar: FC<ProgressBarProps> = ({\n  minValue,\n  maxValue,\n  value,\n  showValue = false,\n  errorMessage = '',\n  title,\n}) => (\n  <Container>\n    <Wrapper>\n      {showValue && (\n        <StyledValue data-testid=\"gradient-progress-bar-value\">\n          {value > maxValue ? `${maxValue}+` : formatNumber(value, 2)}\n        </StyledValue>\n      )}\n      <input\n        type=\"range\"\n        min={minValue}\n        max={maxValue}\n        value={value}\n        className=\"slider\"\n        id=\"myRange\"\n        title={title}\n        data-testid=\"gradient-progress-bar\"\n      />\n    </Wrapper>\n    {errorMessage && (\n      <ErrorMessage data-testid=\"gradient-progress-bar-error-msg\">{errorMessage}</ErrorMessage>\n    )}\n  </Container>\n);\nexport default GradientProgressBar;\n","var map = {\n\t\"./Components/Button/Button.stories.tsx\": \"./src/Components/Button/Button.stories.tsx\",\n\t\"./Components/gradientProgressBar/gradientProgressBar.stories.tsx\": \"./src/Components/gradientProgressBar/gradientProgressBar.stories.tsx\",\n\t\"./Components/icon/cryptoIcon/cryptoIcon.stories.tsx\": \"./src/Components/icon/cryptoIcon/cryptoIcon.stories.tsx\",\n\t\"./Components/icon/icon.stories.tsx\": \"./src/Components/icon/icon.stories.tsx\",\n\t\"./Components/image/image.stories.tsx\": \"./src/Components/image/image.stories.tsx\",\n\t\"./Components/theme/theme.stories.tsx\": \"./src/Components/theme/theme.stories.tsx\",\n\t\"./Components/theme/typography/typography.stories.tsx\": \"./src/Components/theme/typography/typography.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";"],"names":[],"sourceRoot":""}