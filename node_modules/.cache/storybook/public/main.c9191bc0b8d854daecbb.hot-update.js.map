{"version":3,"file":"main.c9191bc0b8d854daecbb.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAOA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/theme/typography/typography.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Story } from \\\"@storybook/react\\\";\\nimport { ReactElement } from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport {\\n  FONT_HEADER_STYLES,\\n  FONT_DISPLAY_STYLES,\\n  FONT_BODY_STYLES,\\n  FontWeightTypes,\\n  FONT_WEIGHTS,\\n  FONT_FAMILY,\\n} from \\\"./typography\\\";\\n\\ninterface FontProps {\\n  variant?: Record<string, Record<string, string>>;\\n  \\\"font-weight\\\": FontWeightTypes;\\n  \\\"font-family\\\"?: string;\\n  \\\"font-size\\\"?: string;\\n  \\\"line-height\\\"?: string;\\n}\\nconst StyledFont = styled.p<FontProps>`\\n  font-weight: ${(props) =>\\n    props[\\\"font-weight\\\"] ? FONT_WEIGHTS[props[\\\"font-weight\\\"]] : \\\"\\\"};\\n  font-family: ${FONT_FAMILY};\\n  font-size: ${(props) => props[\\\"font-size\\\"]};\\n  line-height: ${(props) => props[\\\"line-height\\\"]};\\n  color: white;\\n`;\\nconst Wrapper = styled.div`\\n  display: flex;\\n  flex-direction: column;\\n`;\\n\\nexport default {\\n  component: Text,\\n  title: \\\"Theme/Typography\\\",\\n};\\n\\n//@ts-ignore\\nconst generateDisplay = (args) => {\\n  const display: ReactElement[] = [];\\n  for (const [key, value] of Object.entries(\\n    args.variant as Record<string, Record<string, string>>\\n  )) {\\n    display.push(\\n      <StyledFont {...{ ...value, \\\"font-weight\\\": args[\\\"font-weight\\\"] }}>\\n        {key}\\n      </StyledFont>\\n    );\\n  }\\n  return display;\\n};\\n\\nconst Template: Story<FontProps> = (args) => (\\n  <Wrapper>{generateDisplay(args)}</Wrapper>\\n);\\n\\nexport const Header = Template.bind({});\\n\\nHeader.args = {\\n  variant: FONT_HEADER_STYLES,\\n};\\n\\nHeader.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  \\\"font-weight\\\": {\\n    options: [\\\"regular\\\", \\\"medium\\\", \\\"bold\\\"],\\n    control: { type: \\\"radio\\\" },\\n  },\\n};\\n\\nexport const Display = Template.bind({});\\n\\nDisplay.args = {\\n  variant: FONT_DISPLAY_STYLES,\\n};\\n\\nDisplay.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  \\\"font-weight\\\": {\\n    options: [\\\"regular\\\", \\\"medium\\\", \\\"bold\\\"],\\n    control: { type: \\\"radio\\\" },\\n  },\\n};\\n\\nexport const Body = Template.bind({});\\n\\nBody.args = {\\n  variant: FONT_BODY_STYLES,\\n};\\n\\nBody.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  \\\"font-weight\\\": {\\n    options: [\\\"regular\\\", \\\"medium\\\", \\\"bold\\\"],\\n    control: { type: \\\"radio\\\" },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Header\":{\"startLoc\":{\"col\":35,\"line\":53},\"endLoc\":{\"col\":1,\"line\":55},\"startBody\":{\"col\":35,\"line\":53},\"endBody\":{\"col\":1,\"line\":55}},\"Display\":{\"startLoc\":{\"col\":35,\"line\":53},\"endLoc\":{\"col\":1,\"line\":55},\"startBody\":{\"col\":35,\"line\":53},\"endBody\":{\"col\":1,\"line\":55}},\"Body\":{\"startLoc\":{\"col\":35,\"line\":53},\"endLoc\":{\"col\":1,\"line\":55},\"startBody\":{\"col\":35,\"line\":53},\"endBody\":{\"col\":1,\"line\":55}}};\n    \nimport { Story } from \"@storybook/react\";\nimport { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  FONT_HEADER_STYLES,\n  FONT_DISPLAY_STYLES,\n  FONT_BODY_STYLES,\n  FontWeightTypes,\n  FONT_WEIGHTS,\n  FONT_FAMILY,\n} from \"./typography\";\n\ninterface FontProps {\n  variant?: Record<string, Record<string, string>>;\n  \"font-weight\": FontWeightTypes;\n  \"font-family\"?: string;\n  \"font-size\"?: string;\n  \"line-height\"?: string;\n}\nconst StyledFont = styled.p<FontProps>`\n  font-weight: ${(props) =>\n    props[\"font-weight\"] ? FONT_WEIGHTS[props[\"font-weight\"]] : \"\"};\n  font-family: ${FONT_FAMILY};\n  font-size: ${(props) => props[\"font-size\"]};\n  line-height: ${(props) => props[\"line-height\"]};\n  color: white;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default {\n  component: Text,\n  title: \"Theme/Typography\",\n};\n\n//@ts-ignore\nconst generateDisplay = (args) => {\n  const display: ReactElement[] = [];\n  for (const [key, value] of Object.entries(\n    args.variant as Record<string, Record<string, string>>\n  )) {\n    display.push(\n      <StyledFont {...{ ...value, \"font-weight\": args[\"font-weight\"] }}>\n        {key}\n      </StyledFont>\n    );\n  }\n  return display;\n};\n\nconst Template: Story<FontProps> = (args) => (\n  <Wrapper>{generateDisplay(args)}</Wrapper>\n);\n\nexport const Header = Template.bind({});;\n\nHeader.args = {\n  variant: FONT_HEADER_STYLES,\n};\n\nHeader.argTypes = {\n  variant: {\n    control: { type: false },\n  },\n  \"font-weight\": {\n    options: [\"regular\", \"medium\", \"bold\"],\n    control: { type: \"radio\" },\n  },\n};\n\nexport const Display = Template.bind({});;\n\nDisplay.args = {\n  variant: FONT_DISPLAY_STYLES,\n};\n\nDisplay.argTypes = {\n  variant: {\n    control: { type: false },\n  },\n  \"font-weight\": {\n    options: [\"regular\", \"medium\", \"bold\"],\n    control: { type: \"radio\" },\n  },\n};\n\nexport const Body = Template.bind({});\n\nBody.args = {\n  variant: FONT_BODY_STYLES,\n};\n\nBody.argTypes = {\n  variant: {\n    control: { type: false },\n  },\n  \"font-weight\": {\n    options: [\"regular\", \"medium\", \"bold\"],\n    control: { type: \"radio\" },\n  },\n};\n\n\n\nHeader.parameters = { storySource: { source: \"(args) => (\\n  <Wrapper>{generateDisplay(args)}</Wrapper>\\n)\" }, ...Header.parameters };\nDisplay.parameters = { storySource: { source: \"(args) => (\\n  <Wrapper>{generateDisplay(args)}</Wrapper>\\n)\" }, ...Display.parameters };\nBody.parameters = { storySource: { source: \"(args) => (\\n  <Wrapper>{generateDisplay(args)}</Wrapper>\\n)\" }, ...Body.parameters };"],"names":[],"sourceRoot":""}