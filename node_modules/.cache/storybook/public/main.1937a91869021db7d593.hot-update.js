"use strict";
globalThis["webpackHotUpdateapp"]("main",{

/***/ "./src/component/theme/typography/typography.ts":
/*!******************************************************!*\
  !*** ./src/component/theme/typography/typography.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FONT_BODY_STYLES": () => (/* binding */ FONT_BODY_STYLES),
/* harmony export */   "FONT_DISPLAY_STYLES": () => (/* binding */ FONT_DISPLAY_STYLES),
/* harmony export */   "FONT_FAMILY": () => (/* binding */ FONT_FAMILY),
/* harmony export */   "FONT_HEADER_STYLES": () => (/* binding */ FONT_HEADER_STYLES),
/* harmony export */   "FONT_WEIGHTS": () => (/* binding */ FONT_WEIGHTS),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");


const FONT_FAMILY = "CircularStd, Public Sans";
const FONT_WEIGHTS = {
  regular: 400,
  medium: 500,
  bold: 700
};
const FONT_DISPLAY_STYLES = {
  Display1: {
    "font-size": "48px",
    "line-height": "62px"
  },
  Display2: {
    "font-size": "36px",
    "line-height": "48px"
  }
};
const FONT_HEADER_STYLES = {
  H1: {
    "font-size": "32px",
    "line-height": "48px"
  },
  H2: {
    "font-size": "24px",
    "line-height": "36px"
  },
  H3: {
    "font-size": "20px",
    "line-height": "30px"
  },
  H4: {
    "font-size": "18px",
    lineHeight: "28px"
  },
  H5: {
    "font-size": "16px",
    "line-height": "24px"
  },
  H6: {
    "font-size": "14px",
    "line-height": "20px"
  }
};
const FONT_BODY_STYLES = {
  Body1: {
    "font-size": "16px",
    "line-height": "24px"
  },
  Body2: {
    "font-size": "14px",
    "line-height": "20px"
  }
};
//@ts-ignore
const generateFontType = (fontType, fontWeight) => {
  const newObj = {};
  for (const [key] of Object.entries(fontType)) {
    newObj[key] = {
      ...fontType[key],
      "font-weight": fontWeight,
      "font-family": FONT_FAMILY
    };
  }
  return newObj;
};
//@ts-ignore
const generateComponent = fontType => {
  const newObj = {};
  for (const [key] of Object.entries(fontType)) {
    const StyledParagraph = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].p`
      margin: 0;
      ${fontType[key]}
    `;
    newObj[key] = StyledParagraph;
  }
  return newObj;
};
const tStyles = {
  display: {
    regular: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS["regular"]),
    medium: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS["medium"]),
    bold: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS["bold"])
  },
  header: {
    regular: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS["regular"]),
    medium: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS["medium"]),
    bold: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS["bold"])
  },
  body: {
    regular: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS["regular"]),
    medium: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS["medium"]),
    bold: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS["bold"])
  },
  FONT_FAMILY,
  FONT_WEIGHTS
};
const tComponents = {
  display: {
    regular: generateComponent(tStyles.display.regular),
    medium: generateComponent(tStyles.display.medium),
    bold: generateComponent(tStyles.display.bold)
  },
  header: {
    regular: generateComponent(tStyles.header.regular),
    medium: generateComponent(tStyles.header.medium),
    bold: generateComponent(tStyles.header.regular)
  },
  body: {
    regular: generateComponent(tStyles.body.regular),
    medium: generateComponent(tStyles.body.medium),
    bold: generateComponent(tStyles.body.bold)
  }
};
const typography = {
  components: tComponents,
  styles: tStyles,
  FONT_FAMILY: FONT_FAMILY,
  FONT_HEADER_STYLES: FONT_HEADER_STYLES,
  FONT_BODY_STYLES: FONT_BODY_STYLES,
  FONT_DISPLAY_STYLES: FONT_DISPLAY_STYLES
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typography);

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.1937a91869021db7d593.hot-update.js.map