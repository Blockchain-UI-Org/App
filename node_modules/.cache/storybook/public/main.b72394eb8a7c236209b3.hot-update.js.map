{"version":3,"file":"main.b72394eb8a7c236209b3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAKA;AAAA;AAJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA1BA;AA4BA;AACA;AACA;AAEA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/image/image.tsx"],"sourcesContent":["import { FC, ImgHTMLAttributes, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as availableImages from \"../static/images\";\nimport { legacyColors, colorsWithDarkMode } from \"../theme/colors\";\n\nexport interface ImageProps extends ImgHTMLAttributes<HTMLImageElement> {\n  name: string;\n  src?: string;\n  width?: string;\n  height?: string;\n  bgColor?: keyof typeof legacyColors | keyof typeof colorsWithDarkMode;\n  iconType?: \"crypto\" | \"regular\";\n}\n\ninterface StyledImageProps {\n  bgColor?: keyof typeof legacyColors | keyof typeof colorsWithDarkMode;\n}\nconst StyledImage = styled.img<StyledImageProps>`\n  width: ${({ width }) => width || \"auto\"};\n  height: ${({ height }) => height || \"auto\"};\n  background-color: ${({ bgColor }) => bgColor};\n`;\n\nconst Image: FC<ImageProps> = ({\n  name,\n  src,\n  iconType = \"regular\",\n  ...props\n}) => {\n  const [imageSrc, setImageSrc] = useState<string>();\n\n  useEffect(() => {\n    if (src) {\n      setImageSrc(src);\n    } else {\n      const imageName = name in availableImages.default ? name : \"fallback\";\n      //@ts-ignore\n      setImageSrc(availableImages.default[imageName]);\n    }\n  }, [iconType, name, src]);\n\n  return (\n    <StyledImage\n      src={imageSrc}\n      data-testid={`${name}-image`}\n      alt={`${name}-image`}\n      {...props}\n    />\n  );\n};\n\nexport const RoundImage = styled(Image)`\n  border-radius: 50%;\n`;\n\nexport default Image;\n"],"names":[],"sourceRoot":""}