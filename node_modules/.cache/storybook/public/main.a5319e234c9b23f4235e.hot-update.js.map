{"version":3,"file":"main.a5319e234c9b23f4235e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAcA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/charts/candlestick/index.stories.tsx","webpack://app/./src/component/charts/candlestick/index.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { ComponentStory, ComponentMeta, Story } from \\\"@storybook/react\\\";\\nimport CandleStickChart, { ChartProps } from \\\"./\\\";\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: \\\"Charts/CandleStick\\\",\\n  component: CandleStickChart,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    currency: {\\n      options: [\\\"BTC\\\", \\\"ETH\\\", \\\"USDC\\\", \\\"USDT\\\"],\\n      control: { type: \\\"select\\\" }, // Automatically inferred when 'options' is define\\n    },\\n    color: {\\n      options: [\\\"green\\\", \\\"yellow\\\", \\\"red\\\", \\\"blue\\\"],\\n      control: { type: \\\"select\\\" }, // Automatically inferred when 'options' is define\\n    },\\n  },\\n} as ComponentMeta<typeof CandleStickChart>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: Story<ChartProps> = (args) => <CandleStickChart {...args} />;\\n\\nexport const Line = Template.bind({});\\n\\nLine.args = {\\n  width: \\\"700px\\\",\\n  height: \\\"500px\\\",\\n  chartData: [\\n    {\\n      data: [\\n        {\\n          x: new Date(2016, 0o1, 0o1),\\n          y: [51.98, 56.29, 51.59, 53.85],\\n        },\\n        {\\n          x: new Date(2016, 0o2, 0o1),\\n          y: [53.66, 54.99, 51.35, 52.95],\\n        },\\n\\n        {\\n          \\n          x: new Date(2016, 0o2, 0o1),\\n          y: [52.76, 57.35, 52.15, 57.03],\\n        },\\n      ],\\n    },\\n  ],\\n  currency: \\\"BTC\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Line\":{\"startLoc\":{\"col\":36,\"line\":23},\"endLoc\":{\"col\":76,\"line\":23},\"startBody\":{\"col\":36,\"line\":23},\"endBody\":{\"col\":76,\"line\":23}}};\n    \nimport React from \"react\";\nimport { ComponentStory, ComponentMeta, Story } from \"@storybook/react\";\nimport CandleStickChart, { ChartProps } from \"./\";\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: \"Charts/CandleStick\",\n  component: CandleStickChart,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    currency: {\n      options: [\"BTC\", \"ETH\", \"USDC\", \"USDT\"],\n      control: { type: \"select\" }, // Automatically inferred when 'options' is define\n    },\n    color: {\n      options: [\"green\", \"yellow\", \"red\", \"blue\"],\n      control: { type: \"select\" }, // Automatically inferred when 'options' is define\n    },\n  },\n} as ComponentMeta<typeof CandleStickChart>;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: Story<ChartProps> = (args) => <CandleStickChart {...args} />;\n\nexport const Line = Template.bind({});\n\nLine.args = {\n  width: \"700px\",\n  height: \"500px\",\n  chartData: [\n    {\n      data: [\n        {\n          x: new Date(2016, 0o1, 0o1),\n          y: [51.98, 56.29, 51.59, 53.85],\n        },\n        {\n          x: new Date(2016, 0o2, 0o1),\n          y: [53.66, 54.99, 51.35, 52.95],\n        },\n\n        {\n          // eslint-disable-next-line no-octal\n          x: new Date(2016, 0o2, 0o1),\n          y: [52.76, 57.35, 52.15, 57.03],\n        },\n      ],\n    },\n  ],\n  currency: \"BTC\",\n};\n\n\n\nLine.parameters = { storySource: { source: \"(args) => <CandleStickChart {...args} />\" }, ...Line.parameters };","import merge from \"lodash/merge\";\nimport React, { FC } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\nimport { colors, ThemeColor } from \"../../theme/colors\";\nimport BaseOptionChart from \"../../theme/charts\";\nimport { CryptoIcon } from \"../../icon/icon\";\nimport { CryptoSymbols } from \"../../static/types\";\n\nexport interface ChartProps {\n  title?: string;\n  subtitle?: string;\n  chartData: any[];\n  width?: string;\n  height?: string;\n  currency?: CryptoSymbols;\n  upwardsColor: string;\n  downwardsColor: string;\n}\n\nconst LineChart: FC<ChartProps> = ({\n  width = \"100%\",\n  height = \"100%\",\n  chartData,\n  currency,\n  upwardsColor = \"#3C90EB\",\n  downwardsColor = \"#DF7D46\",\n}) => {\n  const chartOptions = merge(BaseOptionChart(), {\n    plotOptions: {\n      candlestick: {\n        colors: {\n          upward: upwardsColor,\n          downward: downwardsColor,\n        },\n      },\n    },\n  });\n\n  return (\n    <Container>\n      <Title>{currency && <CryptoIcon cryptoSymbol={currency} />}</Title>{\" \"}\n      <ReactApexChart\n        type=\"candlestick\"\n        series={chartData}\n        options={chartOptions}\n        height={height}\n        width={width}\n      />\n    </Container>\n  );\n};\n\nexport default LineChart;\n\nconst Container = styled.div`\n  color: white;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin: 0 0 20px 20px;\n`;\n"],"names":[],"sourceRoot":""}