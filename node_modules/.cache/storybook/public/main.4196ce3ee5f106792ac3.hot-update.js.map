{"version":3,"file":"main.4196ce3ee5f106792ac3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAiBA;AACA;AACA;AACA;AAGA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/components/Upshot/Icon/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport SVG, { Props as SVGProps } from 'react-inlinesvg'\nimport colors from '../themes/UpshotUI/colors'\nimport icons from './icons'\n\nexport interface IconProps extends Omit<SVGProps, 'src'> {\n  /**\n   * Defines the SVG icon to render.\n   */\n  icon: keyof typeof icons\n  /**\n   * Specifies the width & height for the square svg icon.\n   */\n  size?: number | string\n  /**\n   * Named color from theme specification.\n   */\n  color?: keyof typeof colors\n}\n\n/**\n * Icon component for SVG assets.\n */\nconst Icon = forwardRef(\n  (\n    { size = '100%', color, icon, style, ...props }: IconProps,\n    ref: React.ForwardedRef<SVG>\n  ) => (\n    <SVG\n    //@ts-ignore\n      src={icons[icon]}\n      /* Preprocess SVGs to use color prop.\n      It changes every fill=\"*\" and stroke to fill=\"*\"\n      except when the vaule is \"none\" */\n      preProcessor={(svg) => {\n        if (color)\n          return svg\n            .replace(/fill=\"none\"/g, 'fill_temp=\"none\"')\n            .replace(/fill=\".*?\"/g, 'fill=\"currentColor\"')\n            .replace(/fill_temp=\"none\"/g, 'fill=\"none\"')\n            .replace(/stroke=\"none\"/g, 'stroke_temp=\"none\"')\n            .replace(/stroke=\".*?\"/g, 'stroke=\"currentColor\"')\n            .replace(/stroke_temp=\"none\"/g, 'stroke=\"none\"')\n        else return svg\n      }}\n      /* If no color is provided, inherit color from the container. */\n      color={colors[color] ?? 'inherit'}\n      /* Fixed square size */\n      width={size}\n      height={size}\n      style={{\n        flexShrink: 0,\n        fill: color ? colors[color] : undefined,\n        ...style,\n      }}\n      {...{ ref, ...props }}\n    />\n  )\n)\n\nexport default Icon\n"],"names":[],"sourceRoot":""}