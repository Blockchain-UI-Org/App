"use strict";
globalThis["webpackHotUpdateapp"]("main",{

/***/ "./src/Components/Avatar/Avatar.tsx":
/*!******************************************!*\
  !*** ./src/Components/Avatar/Avatar.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Avatar": () => (/* binding */ Avatar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'baseui/avatar'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js");
/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(deepmerge__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _baseWeb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../baseWeb */ "./src/Components/baseWeb/index.ts");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/Avatar/Avatar.tsx",
  _s = __webpack_require__.$Refresh$.signature();





/**
 * `Avatar` component.
 *
 * Demo:
 * - [Avatar](https://docs.blockfi.com/storybook/index.html?path=/docs/baseweb-content-avatar--default-story)
 *
 */
const Avatar = _ref => {
  _s();
  let {
    name,
    size,
    src,
    styleOverrides
  } = _ref;
  const [, theme] = (0,_baseWeb__WEBPACK_IMPORTED_MODULE_3__.useStyletron)();
  const {
    avatarBackground,
    avatarText
  } = theme.colors;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(Object(function webpackMissingModule() { var e = new Error("Cannot find module 'baseui/avatar'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), {
    name: name,
    overrides: deepmerge__WEBPACK_IMPORTED_MODULE_2___default()({
      Root: {
        style: {
          backgroundColor: avatarBackground,
          fontFamily: "Public Sans"
        }
      },
      Initials: {
        style: {
          fontWeight: "bold",
          fontSize: "14px",
          color: avatarText
        }
      }
    }, styleOverrides || {}),
    size: size || theme.sizing.scale1000,
    src: src
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 34,
    columnNumber: 5
  }, undefined);
};
_s(Avatar, "NQ9RHH8mfN1eMijd7cLIFtJi1dY=", false, function () {
  return [_baseWeb__WEBPACK_IMPORTED_MODULE_3__.useStyletron];
});
_c = Avatar;

var _c;
__webpack_require__.$Refresh$.register(_c, "Avatar");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    Avatar.displayName = "Avatar";
    // @ts-ignore
    Avatar.__docgenInfo = { "description": "`Avatar` component.\n\nDemo:\n- [Avatar](https://docs.blockfi.com/storybook/index.html?path=/docs/baseweb-content-avatar--default-story)", "displayName": "Avatar", "props": { "name": { "defaultValue": null, "description": "", "name": "name", "required": true, "type": { "name": "string" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": false, "type": { "name": "string" } }, "src": { "defaultValue": null, "description": "", "name": "src", "required": false, "type": { "name": "string" } }, "styleOverrides": { "defaultValue": null, "description": "", "name": "styleOverrides", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/Components/Avatar/Avatar.tsx#Avatar"] = { docgenInfo: Avatar.__docgenInfo, name: "Avatar", path: "src/Components/Avatar/Avatar.tsx#Avatar" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/Components/baseWeb/index.ts":
/*!*****************************************!*\
  !*** ./src/Components/baseWeb/index.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StyledLoader": () => (/* reexport safe */ _overrides__WEBPACK_IMPORTED_MODULE_1__.StyledLoader),
/* harmony export */   "availableThemes": () => (/* reexport safe */ _theme__WEBPACK_IMPORTED_MODULE_0__.availableThemes),
/* harmony export */   "buttonOverrides": () => (/* reexport safe */ _overrides__WEBPACK_IMPORTED_MODULE_1__.buttonOverrides),
/* harmony export */   "getTickBorderColor": () => (/* reexport safe */ _overrides__WEBPACK_IMPORTED_MODULE_1__.getTickBorderColor),
/* harmony export */   "inputOverrides": () => (/* reexport safe */ _overrides__WEBPACK_IMPORTED_MODULE_1__.inputOverrides),
/* harmony export */   "lightTheme": () => (/* reexport safe */ _theme__WEBPACK_IMPORTED_MODULE_0__.lightTheme),
/* harmony export */   "tickOverrides": () => (/* reexport safe */ _overrides__WEBPACK_IMPORTED_MODULE_1__.tickOverrides),
/* harmony export */   "useStyletron": () => (/* reexport safe */ _theme__WEBPACK_IMPORTED_MODULE_0__.useStyletron)
/* harmony export */ });
/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./theme */ "./src/Components/baseWeb/theme/index.ts");
/* harmony import */ var _overrides__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./overrides */ "./src/Components/baseWeb/overrides/index.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");




const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/Components/baseWeb/overrides/button.tsx":
/*!*****************************************************!*\
  !*** ./src/Components/baseWeb/overrides/button.tsx ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buttonOverrides": () => (/* binding */ buttonOverrides)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _buttonLoader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buttonLoader */ "./src/Components/baseWeb/overrides/buttonLoader.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/baseWeb/overrides/button.tsx",
  _this = undefined;



const KIND = {
  contained: "contained",
  outlined: "outlined",
  text: "text"
};
const buttonVariants = {
  brand: "brand",
  positive: "positive",
  negative: "negative",
  neutral: "neutral",
  warning: "warning",
  decorative: "decorative"
};
const buttonSizes = $theme => {
  const {
    scale300,
    scale500,
    scale550,
    scale600,
    scale650,
    scale800,
    scale900,
    scale1000,
    scale1200,
    scale1400
  } = $theme.sizing;
  return {
    mini: {
      fontSize: scale500,
      height: scale900,
      padding: `0 ${scale300}`
    },
    compact: {
      fontSize: scale550,
      height: scale1000,
      padding: `0 ${scale600}`
    },
    default: {
      fontSize: scale600,
      height: scale1200,
      padding: `0 ${scale800}`
    },
    large: {
      fontSize: scale650,
      height: scale1400,
      padding: `0 ${scale900}`
    }
  };
};
const buttonOverrides = function ($theme) {
  let block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  let kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : KIND.contained;
  let variant = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : buttonVariants.brand;
  const isContained = kind === KIND.contained;
  const {
    colors,
    animation,
    sizing
  } = $theme;
  const {
    disabledBackground,
    disabledBackgroundContained,
    disabledBorder,
    disabledTextContained,
    disabledText,
    ...rest
  } = colors.button;
  const {
    scale100,
    scale300
  } = sizing;
  const {
    activeBackground,
    background,
    focus,
    hoverBackground,
    hoverText,
    loadingLeft,
    loadingMiddle,
    loadingRight,
    ...buttonVariant
  } = rest[variant || buttonVariants.brand];
  const {
    border,
    text
  } = buttonVariant[kind || KIND.contained];
  return {
    BaseButton: {
      style: _ref => {
        var _buttonSizes;
        let {
          $disabled,
          $size
        } = _ref;
        return {
          ...$theme.borders.borderWidth100,
          color: text,
          backgroundColor: isContained ? background : "transparent",
          borderColor: kind === KIND.text ? "transparent" : border,
          fontFamily: "Public Sans",
          fontWeight: 600,
          transitionDuration: `${animation.timing200}`,
          transitionTimingFunction: "ease, ease",
          width: block ? "100%" : "auto",
          ...((_buttonSizes = buttonSizes($theme)) === null || _buttonSizes === void 0 ? void 0 : _buttonSizes[$size]),
          ":active": {
            ...($disabled ? {} : {
              backgroundColor: activeBackground,
              color: hoverText
            })
          },
          ...($disabled ? {} : {
            ":hover": {
              backgroundColor: hoverBackground,
              borderColor: hoverBackground,
              color: hoverText
            },
            ":focus": {
              boxShadow: "none",
              outline: "solid",
              borderColor: focus,
              outlineColor: focus,
              outlineWidth: scale100
            }
          }),
          ":disabled": {
            backgroundColor: isContained ? disabledBackgroundContained : disabledBackground,
            borderColor: disabledBorder[kind],
            color: isContained ? disabledTextContained : disabledText
          }
        };
      }
    },
    StartEnhancer: {
      style: _ref2 => {
        let {
          $size
        } = _ref2;
        return {
          marginRight: $size === "compact" || $size === "mini" ? scale100 : scale300
        };
      }
    },
    EndEnhancer: {
      style: _ref3 => {
        let {
          $size
        } = _ref3;
        return {
          marginLeft: $size === "compact" || $size === "mini" ? scale100 : scale300
        };
      }
    },
    LoadingSpinner: {
      component: () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_buttonLoader__WEBPACK_IMPORTED_MODULE_1__.StyledLoader, {
        leftColor: loadingLeft,
        middleColor: loadingMiddle,
        rightColor: loadingRight
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 165,
        columnNumber: 9
      }, _this)
    }
  };
};


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/Components/baseWeb/overrides/buttonLoader.tsx":
/*!***********************************************************!*\
  !*** ./src/Components/baseWeb/overrides/buttonLoader.tsx ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StyledLoader": () => (/* binding */ StyledLoader)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/baseWeb'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/baseWeb/overrides/buttonLoader.tsx",
  _s = __webpack_require__.$Refresh$.signature();




const LoaderWrapper = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div`
  display: flex;
`;
_c = LoaderWrapper;
const StyledDot = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div`
  ${_ref => {
  let {
    delay,
    dotColor
  } = _ref;
  const flashing = () => styled_components__WEBPACK_IMPORTED_MODULE_3__.keyframes`
  from { opacity: 0%; filter: brightness(0.5); }
  to { opacity: 100%; filter: brightness(1); }
`;
  return styled_components__WEBPACK_IMPORTED_MODULE_3__.css`
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: ${dotColor};
      animation: ${flashing} 1s infinite linear alternate;
      animation-delay: ${delay};
    `;
}}
`;
_c2 = StyledDot;
const StyledLoader = _ref2 => {
  _s();
  let {
    leftColor,
    middleColor,
    rightColor
  } = _ref2;
  const [, theme] = Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/baseWeb'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();
  const {
    animation,
    sizing
  } = theme;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(LoaderWrapper, {
    "aria-hidden": "true",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(StyledDot, {
      delay: animation.timing300,
      dotColor: leftColor,
      style: {
        marginRight: sizing.scale100
      }
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(StyledDot, {
      delay: animation.timing600,
      dotColor: middleColor,
      style: {
        marginRight: sizing.scale100
      }
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(StyledDot, {
      delay: animation.timing1000,
      dotColor: rightColor
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 38,
    columnNumber: 5
  }, undefined);
};
_s(StyledLoader, "NQ9RHH8mfN1eMijd7cLIFtJi1dY=", false, function () {
  return [Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/baseWeb'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())];
});
_c3 = StyledLoader;
var _c, _c2, _c3;
__webpack_require__.$Refresh$.register(_c, "LoaderWrapper");
__webpack_require__.$Refresh$.register(_c2, "StyledDot");
__webpack_require__.$Refresh$.register(_c3, "StyledLoader");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    StyledLoader.displayName = "StyledLoader";
    // @ts-ignore
    StyledLoader.__docgenInfo = { "description": "", "displayName": "StyledLoader", "props": { "leftColor": { "defaultValue": null, "description": "", "name": "leftColor", "required": true, "type": { "name": "string" } }, "middleColor": { "defaultValue": null, "description": "", "name": "middleColor", "required": true, "type": { "name": "string" } }, "rightColor": { "defaultValue": null, "description": "", "name": "rightColor", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/Components/baseWeb/overrides/buttonLoader.tsx#StyledLoader"] = { docgenInfo: StyledLoader.__docgenInfo, name: "StyledLoader", path: "src/Components/baseWeb/overrides/buttonLoader.tsx#StyledLoader" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/Components/baseWeb/overrides/index.ts":
/*!***************************************************!*\
  !*** ./src/Components/baseWeb/overrides/index.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StyledLoader": () => (/* reexport safe */ _buttonLoader__WEBPACK_IMPORTED_MODULE_3__.StyledLoader),
/* harmony export */   "buttonOverrides": () => (/* reexport safe */ _button__WEBPACK_IMPORTED_MODULE_0__.buttonOverrides),
/* harmony export */   "getTickBorderColor": () => (/* reexport safe */ _tick__WEBPACK_IMPORTED_MODULE_2__.getTickBorderColor),
/* harmony export */   "inputOverrides": () => (/* reexport safe */ _input__WEBPACK_IMPORTED_MODULE_1__.inputOverrides),
/* harmony export */   "tickOverrides": () => (/* reexport safe */ _tick__WEBPACK_IMPORTED_MODULE_2__.tickOverrides)
/* harmony export */ });
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button */ "./src/Components/baseWeb/overrides/button.tsx");
/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input */ "./src/Components/baseWeb/overrides/input.ts");
/* harmony import */ var _tick__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tick */ "./src/Components/baseWeb/overrides/tick.ts");
/* harmony import */ var _buttonLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buttonLoader */ "./src/Components/baseWeb/overrides/buttonLoader.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");






const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/Components/baseWeb/overrides/input.ts":
/*!***************************************************!*\
  !*** ./src/Components/baseWeb/overrides/input.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "inputOverrides": () => (/* binding */ inputOverrides)
/* harmony export */ });
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

const getBorderColor = ($disabled, $isFocused, $error, $positive, colors) => {
  if ($disabled) {
    return colors.borderStateDisabled;
  }
  if ($isFocused) {
    return colors.borderSelected;
  }
  if ($error) {
    return colors.inputBorderError;
  }
  if ($positive) {
    return colors.inputBorderPositive;
  }
  return colors.inputBorder;
};
const inputOverrides = theme => _ref => {
  let {
    $disabled,
    $error,
    $positive,
    $isFocused
  } = _ref;
  return {
    ...theme.borders.borderWidth100,
    borderColor: getBorderColor($disabled, $isFocused, $error, $positive, theme.colors)
  };
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/Components/baseWeb/overrides/tick.ts":
/*!**************************************************!*\
  !*** ./src/Components/baseWeb/overrides/tick.ts ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getTickBorderColor": () => (/* binding */ getTickBorderColor),
/* harmony export */   "tickOverrides": () => (/* binding */ tickOverrides)
/* harmony export */ });
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

const tickOverrides = theme => ({
  Label: {
    style: _ref => {
      let {
        $disabled,
        $error
      } = _ref;
      const {
        tickBorderDisabled,
        tickBorderError
      } = theme.colors;
      const defaultStyles = {
        fontFamily: "Public Sans",
        fontSize: "14px"
      };
      if ($disabled) {
        return {
          ...defaultStyles,
          color: tickBorderDisabled
        };
      }
      if ($error) {
        return {
          ...defaultStyles,
          color: tickBorderError
        };
      }
      return defaultStyles;
    }
  }
});
const getTickBorderColor = (_ref2, theme) => {
  let {
    $checked,
    $disabled,
    $error
  } = _ref2;
  const {
    tickBorder,
    tickBorderDisabled,
    tickBorderError,
    tickBorderSelected
  } = theme.colors;
  if ($disabled) {
    return tickBorderDisabled;
  }
  if ($error) {
    return tickBorderError;
  }
  if ($checked) {
    return tickBorderSelected;
  }
  return tickBorder;
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/Components/baseWeb/theme/buttons.ts":
/*!*************************************************!*\
  !*** ./src/Components/baseWeb/theme/buttons.ts ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buttons": () => (/* binding */ buttons)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/primitives'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");


const {
  alertGreen300,
  alertGreen400,
  alertGreen500,
  alertGreen600,
  alertGreen700,
  alertGreen800,
  alertRed200,
  alertRed300,
  alertRed400,
  alertRed600,
  alertRed700,
  alertRed800,
  alertYellow300,
  alertYellow400,
  alertYellow500,
  alertYellow600,
  alertYellow700,
  alertYellow800,
  brandBlack,
  brandBlue,
  brandBlue200,
  brandBlue300,
  brandBlue400,
  brandBlue800,
  brandBlue1000,
  brandWhite,
  brandYellow,
  brandYellow300,
  brandYellow500,
  brandYellow600,
  brandYellow700,
  brandYellow800,
  neutral300,
  neutral400,
  neutral500,
  neutral700,
  neutral800,
  transparent
} = Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/primitives'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
const buttons = {
  colors: {
    button: {
      disabledBackground: brandWhite,
      disabledBackgroundContained: neutral500,
      disabledTextContained: neutral800,
      disabledText: neutral700,
      disabledBorder: {
        contained: neutral500,
        outlined: neutral800,
        text: brandWhite
      },
      brand: {
        activeBackground: brandBlue1000,
        loadingLeft: brandBlue200,
        loadingMiddle: brandBlue400,
        loadingRight: brandBlue1000,
        background: brandBlue,
        hoverBackground: brandBlue800,
        hoverText: brandWhite,
        focus: brandBlue300,
        contained: {
          border: brandBlue,
          text: brandWhite
        },
        outlined: {
          border: brandBlue,
          text: brandBlue
        },
        text: {
          border: transparent,
          text: brandBlue
        }
      },
      positive: {
        activeBackground: alertGreen800,
        loadingLeft: alertGreen400,
        loadingMiddle: alertGreen600,
        loadingRight: alertGreen800,
        background: alertGreen500,
        focus: alertGreen300,
        hoverBackground: alertGreen700,
        hoverText: brandWhite,
        contained: {
          border: alertGreen500,
          text: brandWhite
        },
        outlined: {
          border: alertGreen600,
          text: alertGreen600
        },
        text: {
          border: transparent,
          text: alertGreen600
        }
      },
      negative: {
        activeBackground: alertRed800,
        loadingLeft: alertRed200,
        loadingMiddle: alertRed400,
        loadingRight: alertRed800,
        background: alertRed600,
        focus: alertRed300,
        hoverBackground: alertRed700,
        hoverText: brandWhite,
        contained: {
          border: alertRed600,
          text: brandWhite
        },
        outlined: {
          border: alertRed600,
          text: alertRed600
        },
        text: {
          border: transparent,
          text: alertRed600
        }
      },
      warning: {
        activeBackground: alertYellow800,
        loadingLeft: alertYellow400,
        loadingMiddle: alertYellow600,
        loadingRight: alertYellow800,
        background: alertYellow500,
        focus: alertYellow300,
        hoverBackground: alertYellow700,
        hoverText: brandWhite,
        contained: {
          border: alertYellow500,
          text: brandBlack
        },
        outlined: {
          border: alertYellow700,
          text: alertYellow700
        },
        text: {
          border: transparent,
          text: alertYellow700
        }
      },
      neutral: {
        activeBackground: neutral800,
        loadingLeft: neutral300,
        loadingMiddle: neutral500,
        loadingRight: neutral800,
        background: brandBlack,
        focus: neutral700,
        hoverBackground: neutral400,
        hoverText: brandWhite,
        contained: {
          border: brandBlack,
          text: brandWhite
        },
        outlined: {
          border: brandBlack,
          text: brandBlack
        },
        text: {
          border: transparent,
          text: brandBlack
        }
      },
      decorative: {
        activeBackground: brandYellow800,
        loadingLeft: brandYellow300,
        loadingMiddle: brandYellow500,
        loadingRight: brandYellow800,
        background: brandYellow,
        focus: brandYellow300,
        hoverBackground: brandYellow700,
        hoverText: brandWhite,
        contained: {
          border: brandYellow,
          text: brandBlack
        },
        outlined: {
          border: brandYellow600,
          text: brandYellow600
        },
        text: {
          border: transparent,
          text: brandYellow600
        }
      }
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/Components/baseWeb/theme/index.ts":
/*!***********************************************!*\
  !*** ./src/Components/baseWeb/theme/index.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "availableThemes": () => (/* binding */ availableThemes),
/* harmony export */   "lightTheme": () => (/* binding */ lightTheme),
/* harmony export */   "useStyletron": () => (/* binding */ useStyletron)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module 'baseui'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/primitives'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var _buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buttons */ "./src/Components/baseWeb/theme/buttons.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");




const {
  colors: vegaColors
} = Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/primitives'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
// Using only radius properties from BaseLightTheme to avoid defining twice
// These values can also be safely used on darkTheme as they are, inside baseui, using a shared config object
const {
  radius200,
  radius300
} = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'baseui'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
const sharedBorders = {
  ...Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/primitives'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
  // Shared borders uses the rounded corners configuration from baseweb:
  // https://baseweb.design/blog/base-web-v7#rounded-corners
  useRoundedCorners: true,
  buttonBorderRadius: radius200,
  inputBorderRadius: radius200,
  popoverBorderRadius: radius200,
  surfaceBorderRadius: radius300,
  tagBorderRadius: radius200
};
const availableThemes = {
  light: "blockfi-light-theme"
};
const lightTheme = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'baseui'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())({}, {
  name: availableThemes.light,
  borders: sharedBorders,
  breakpoints: {
    xsmall: 0,
    small: 577,
    medium: 768,
    large: 1024,
    xlarge: 1360
  },
  mediaQuery: {
    xsmall: "@media screen and (min-width: 0)",
    small: "@media screen and (min-width: 577px)",
    medium: "@media screen and (min-width: 768px)",
    large: "@media screen and (min-width: 1024px)",
    xlarge: "@media screen and (min-width: 1360px)"
  },
  colors: {
    ...Object(function webpackMissingModule() { var e = new Error("Cannot find module '@/src/primitives'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
    // Accordion
    accordionBackgroundAccent: vegaColors.brandWhite,
    accordionBackgroundDefault: vegaColors.brandWhite,
    accordionBackgroundDefaultActive: vegaColors.brandBlue,
    accordionBackgroundDisabled: vegaColors.brandWhite,
    accordionBackgroundNegative: "#FEF6F4",
    accordionBackgroundPositive: vegaColors.brandWhite,
    accordionBorderAccent: vegaColors.neutral500,
    accordionBorderAccentActive: "#8099F5",
    accordionBorderDefault: vegaColors.neutral500,
    accordionBorderDefaultActive: "#8099F5",
    accordionBorderDisabled: vegaColors.neutral300,
    accordionBorderNegative: "#F7A0A0",
    accordionBorderPositive: vegaColors.neutral500,
    accordionContentBackground: vegaColors.brandWhite,
    accordionContentBorderAccent: "#8099F5",
    accordionContentBorderDefault: "#8099F5",
    accordionContentBorderNegative: "#F7A0A0",
    accordionContentBorderPositive: vegaColors.neutral500,
    accordionIconAccent: vegaColors.brandBlue,
    accordionIconDisabled: vegaColors.neutral300,
    accordionIconNegative: vegaColors.legacyRed,
    accordionIconPositive: vegaColors.legacyGreen,
    accordionTextAccent: vegaColors.brandBlack,
    accordionTextDefault: vegaColors.brandBlack,
    accordionTextDefaultActive: vegaColors.brandWhite,
    accordionTextDisabled: vegaColors.neutral300,
    accordionTextNegative: vegaColors.legacyRed,
    accordionTextPositive: vegaColors.brandBlack,
    // Avatar
    avatarBackground: vegaColors.brandBlack,
    avatarText: vegaColors.brandWhite,
    // Button
    ..._buttons__WEBPACK_IMPORTED_MODULE_1__.buttons.colors,
    // Card
    cardBackgroundDefault: vegaColors.brandWhite,
    cardBackgroundNeutral: vegaColors.brandWhite,
    cardBorder: vegaColors.neutral300,
    // CryptoIconList
    cryptoIconListBackground: vegaColors.brandBlack,
    cryptoIconListText: "#E2E2E2",
    // Link
    linkText: "#0032EB",
    linkVisited: "#4d63f7",
    linkHover: "#8099F5",
    linkActive: "#8099F5",
    // Breadcrumbs
    breadcrumbsSeparatorFill: vegaColors.neutral600,
    breadcrumbsText: vegaColors.brandBlue,
    breadcrumbsTextActive: vegaColors.brandBlue1000,
    // FileUploader
    fileUploaderBorder: "#AFAFAF",
    fileUploaderError: "#D44333",
    fileUploaderItemBorder: "#F2F2F2",
    fileUploaderText: "#545454",
    // Inputs
    borderSelected: "#8099F5",
    borderStateDisabled: "#E5E5E5",
    inputBorder: "#B2B2B2",
    inputBorderError: "#F7A0A0",
    inputBorderPositive: "#80F9C7",
    inputFill: "#FFF",
    inputFillActive: "#FFF",
    inputFillDisabled: "#FFF",
    inputFillError: "#FEF5F5",
    inputFillPositive: "#F2FEF9",
    inputPlaceholder: "#808080",
    inputPlaceholderDisabled: "#E5E5E5",
    menuFillHover: "#F2F5FE",
    menuFontHighlighted: "#333",
    menuFontSelected: "#333",
    // Navbar
    navbarBackground: vegaColors.brandWhite,
    navbarBackgroundOnboarding: "#E9EDF2",
    navbarButton: vegaColors.brandBlue,
    navbarDropdownArrow: vegaColors.brandBlue,
    navbarDropdownBackground: vegaColors.brandWhite,
    navbarDropdownBackgroundActive: vegaColors.neutral100,
    navbarDropdownText: "#1A1A1A",
    navbarDropdownTextActive: vegaColors.brandBlue,
    navbarMenuButton: "#1A1A1A",
    navbarMenuButtonActive: vegaColors.brandBlue,
    // Notification
    notificationBackgroundInfo: "#F2F5FE",
    notificationBackgroundNeutral: vegaColors.neutral100,
    notificationBorderInfo: "#B2C1F9",
    notificationBorderNeutral: vegaColors.neutral300,
    notificationColorInfo: vegaColors.brandBlue,
    notificationColorNeutral: vegaColors.neutral900,
    notificationIconInfo: "#617EE8",
    notificationIconNeutral: vegaColors.neutral900,
    // Banner
    bannerNeutralText: vegaColors.brandBlack,
    bannerNeutralBackground: vegaColors.neutral100,
    bannerNeutralBorder: vegaColors.neutral300,
    bannerPositiveText: vegaColors.alertGreen700,
    bannerPositiveBackground: vegaColors.alertGreen100,
    bannerPositiveBorder: vegaColors.alertGreen300,
    bannerWarningText: vegaColors.alertYellow800,
    bannerWarningBackground: vegaColors.alertYellow100,
    bannerWarningBorder: vegaColors.alertYellow,
    bannerNegativeText: vegaColors.alertRed700,
    bannerNegativeBackground: vegaColors.alertRed100,
    bannerNegativeBorder: vegaColors.alertRed300,
    // PopoverButton
    popoverButtonBackground: vegaColors.brandWhite,
    popoverButtonBorder: vegaColors.neutral300,
    popoverButtonCheckBorder: "#E6E6E6",
    popoverButtonIcon: vegaColors.neutral600,
    popoverButtonText: vegaColors.brandBlack,
    // ProgressBar
    progressBarBackground: "#EEE",
    progressBarLabel: vegaColors.brandBlack,
    progressBarPrimary: vegaColors.brandBlue,
    progressBarPositive: "#3AA76D",
    progressBarNegative: "#D44333",
    // ProgressIndicator
    progressIndicatorBackground: vegaColors.brandBlue,
    progressIndicatorBackgroundDisabled: vegaColors.neutral500,
    progressIndicatorIcon: vegaColors.brandWhite,
    // ProgressSteps
    progressStepIconBorderDisabled: vegaColors.neutral1000,
    progressStepIconTextDisabled: "#171717",
    progressStepIconBackgroundDisabled: vegaColors.neutral800,
    progressStepIconBackgroundDark: vegaColors.brandWhite,
    progressStepIconBorderDark: vegaColors.neutral700,
    progressStepIconTextDark: vegaColors.brandBlue,
    progressStepIconBackgroundDefault: vegaColors.neutral800,
    progressStepIconBorderDefault: vegaColors.neutral1000,
    progressStepIconTextDefault: "#171717",
    progressStepIconBackgroundPrimary: "#8099F5",
    progressStepIconBorderPrimary: "#1A47ED",
    progressStepIconTextPrimary: vegaColors.brandBlue,
    progressStepIconBackgroundPositive: "#80F9C6",
    progressStepIconBorderPositive: "#007A48",
    progressStepIconTextPositive: vegaColors.brandBlack,
    progressStepText: vegaColors.brandBlack,
    progressStepTextDisabled: "#AFAFAF",
    progressStepTextDark: vegaColors.brandWhite,
    progressStepTextDarkDisabled: vegaColors.neutral800,
    // Snackbar
    snackbarBackground: vegaColors.neutral100,
    snackbarText: vegaColors.brandBlack,
    snackbarBorder: vegaColors.neutral300,
    // Side Navigation
    sideNavigationText: "#545454",
    sideNavigationTextActive: "#276EF1",
    sideNavigationTextFocus: "#001976",
    sideNavigationTextHover: "#335BEF",
    sideNavigationTextHoverActive: "#276EF1",
    // Table
    tableBorder: vegaColors.neutral300,
    tableBorderHeader: vegaColors.neutral900,
    tableFill: vegaColors.brandWhite,
    tableFillHover: vegaColors.brandWhite,
    tableFillFocus: "#F6F6F6",
    tableFooterFill: vegaColors.neutral200,
    // Tooltip
    tooltipBackground: "#333333",
    tooltipText: "#FFF",
    // Tag
    tagNeutralOutlinedFont: "#4C4C4C",
    tagWarningOutlinedFont: "#684D1C",
    tagWarningSolidFont: "#684D1C",
    tagNeutralBackground: "#808080",
    tagWarningBackground: "#FFCF70",
    tagPrimaryBackground: "#0032EB",
    tagNegativeBackground: "#D83A3A",
    tagPositiveBackground: "#007A48",
    // datepicker
    calendarChevronIconColor: vegaColors.brandBlack,
    calendarBackground: vegaColors.brandWhite,
    calendarBorder: vegaColors.neutral300,
    calendarDayActiveBackground: vegaColors.brandBlue500,
    calendarDayActiveBorder: vegaColors.brandBlue700,
    calendarDayPseudoRangeBackground: vegaColors.brandBlue100,
    calendarDayHoverBackground: vegaColors.brandWhite,
    calendarDayHoverBorder: vegaColors.brandBlue700,
    calendarDaySelectedText: vegaColors.brandWhite,
    calendarDayDisabledText: vegaColors.neutral400,
    calendarText: vegaColors.brandBlack,
    calendarIcon: vegaColors.brandBlack,
    calendarInputClearIcon: vegaColors.neutral700,
    calendarDropdownBackground: vegaColors.backgroundWhite100,
    calendarDropdownHighlightedBackground: vegaColors.backgroundWhite300,
    calendarControlBackgroundColor: vegaColors.backgroundWhite100,
    calendarControlBorderColor: vegaColors.backgroundWhite300,
    // checkbox
    tickBorder: "#808080",
    tickBorderDisabled: "#E5E5E5",
    tickBorderError: "#F04141",
    tickBorderSelected: "#0032EB",
    tickFill: "#FFF",
    tickFillDisabled: "#FFF",
    tickFillError: "#F7A0A0",
    tickFillErrorHover: "#FED7D2",
    tickFillErrorHoverActive: "#F1998E",
    tickFillErrorSelected: "#F7A0A0",
    tickFillErrorSelectedHover: "#FED7D2",
    tickFillErrorSelectedHoverActive: "#F1998E",
    tickFillSelected: "#335BEF",
    tickFillSelectedHover: "#0032EB",
    tickFillSelectedHoverActive: "#0032EB",
    tickMarkFillDisabled: "#E5E5E5",
    tickMarkFillError: "#F04141",
    // TreeView
    treeViewItemBackground: vegaColors.brandWhite,
    treeViewItemText: vegaColors.brandBlack,
    treeViewNestedItemBackground: vegaColors.neutral200,
    treeViewNestedItemText: vegaColors.neutral900,
    treeViewNestedItemExpandedText: vegaColors.brandBlue
  },
  lighting: {
    cryptoListLighting: "0px 0px 4px rgba(0, 0, 0, 0.1)",
    datePickerLighting: "0 10px 10px rgba(0, 0, 0, 0.05)",
    drawerLighting: "rgb(0 0 0 / 10%) 0px 1px 1px inset",
    modalLighting: "0 8px 36px rgba(0, 0, 0, 0.17)",
    popoverLighting: "0 10px 10px rgba(0, 0, 0, 0.05)",
    navbarLighting: "0px 1px 1px rgba(0, 0, 0, 0.1)",
    navbarDropdownLighting: "0px 9px 28px 8px rgba(0, 0, 0, 0.1), 0px 6px 16px rgba(0, 0, 0, 0.1)",
    tooltipLighting: "0px 5px 5px rgba(0, 0, 0, 0.05)",
    buttonLighting: "0 0 0 2px",
    snackbarLighting: "0px 4px 16px rgba(0, 0, 0, 0.15)"
  }
});
const useStyletron = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'baseui'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.396798b4b4cc59cd7990.hot-update.js.map