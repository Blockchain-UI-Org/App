{"version":3,"file":"main.3f329c5e0261a3a5a81f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AACA;AAEA;AACA;AACA;AAAA;AAifA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/tableV2/index.tsx"],"sourcesContent":["import Table from \"@mui/material/Table\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport styled from \"styled-components\";\nimport { FC } from \"react\";\nimport { sentenceCase } from \"change-case\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  CardProps,\n  colors,\n  Divider,\n  TableHead,\n} from \"@mui/material\";\nimport TableHeadCustom from \"./tableHeadCustom\";\nimport { Icon as Iconify } from \"@iconify/react\";\nimport Scrollbar from \"../../scroll\";\nimport { fCurrency } from \"../../utils/number\";\nimport Label from \"../label\";\nimport palette from \"../theme/palette\";\n\nexport type RowProps = {\n  id: string;\n  category: string;\n  price: number;\n  status: string;\n  date?: string;\n};\n\ninterface Props extends CardProps {\n  title?: string;\n  subheader?: string;\n  tableData: RowProps[];\n  tableLabels: any;\n}\n\nexport default function TableComponent({\n  title,\n  subheader,\n  tableData,\n  tableLabels,\n  ...other\n}: Props) {\n  return (\n    <Card {...other} style={{ backgroundColor: \"#212B36\", color: \"#fff\" }}>\n      <CardHeader title={title} subheader={subheader} sx={{ mb: 3 }} />\n\n      <TableContainer sx={{ minWidth: 720 }}>\n        <StyledTable\n          style={{ backgroundColor: \"#212B36\", color: \"#fff\" }}\n          sx={{\n            MuiTableRow: {\n              styleOverrides: {\n                root: {\n                  borderBottom: \"none\",\n                  \"&.Mui-selected\": {\n                    backgroundColor: palette.dark.action.selected,\n                    \"&:hover\": {\n                      backgroundColor: palette.dark.action.hover,\n                    },\n                  },\n                },\n              },\n            },\n            MuiTableCell: {\n              styleOverrides: {\n                root: {\n                  borderBottom: \"none\",\n                },\n                head: {\n                  color: palette.dark.text.secondary,\n                  backgroundColor: palette.dark.background.neutral,\n                  \"&:first-of-type\": {\n                    paddingLeft: 3,\n                    borderTopLeftRadius: 8,\n                    borderBottomLeftRadius: 8,\n                    boxShadow: `inset 8px 0 0 ${palette.dark.background.paper}`,\n                  },\n                  \"&:last-of-type\": {\n                    paddingRight: 3,\n                    borderTopRightRadius: 8,\n                    borderBottomRightRadius: 8,\n                    boxShadow: `inset -8px 0 0 ${palette.dark.background.paper}`,\n                  },\n                },\n                stickyHeader: {\n                  backgroundColor: palette.dark.background.paper,\n                  backgroundImage: `linear-gradient(to bottom, ${palette.dark.background.neutral} 0%, ${palette.dark.background.neutral} 100%)`,\n                },\n                body: {\n                  \"&:first-of-type\": {\n                    paddingLeft: 3,\n                  },\n                  \"&:last-of-type\": {\n                    paddingRight: 3,\n                  },\n                },\n              },\n            },\n          }}\n        >\n          <TableHeadCustom headLabel={tableLabels} />\n\n          <TableBody>\n            {tableData.map((row) => (\n              <Row key={row.id} row={row} />\n            ))}\n          </TableBody>\n        </StyledTable>\n      </TableContainer>\n\n      <Divider />\n\n      <Box sx={{ p: 2, textAlign: \"right\" }}>\n        <Button\n          size=\"small\"\n          color=\"inherit\"\n          endIcon={<Iconify icon={\"eva:arrow-ios-forward-fill\"} />}\n        >\n          View All\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\ntype TableRowProps = {\n  row: RowProps;\n};\n\nconst Row: FC<TableRowProps> = ({ row }) => {\n  return (\n    <TableRow style={{ color: \"#FFF\" }}>\n      <TableCell style={{ color: \"#FFF\" }}>{`${row.date}`}</TableCell>\n\n      <TableCell style={{ color: \"#FFF\" }}>{row.category}</TableCell>\n\n      <TableCell style={{ color: \"#FFF\" }}>{fCurrency(row.price)}</TableCell>\n\n      <TableCell style={{ color: \"#FFF\" }}>\n        <Label\n          variant=\"ghost\"\n          color={\n            (row.status === \"in_progress\" && \"info\") ||\n            (row.status === \"failed\" && \"error\") ||\n            (row.status === \"complete\" && \"success\") ||\n            \"info\"\n          }\n        >\n          {sentenceCase(row.status)}\n        </Label>\n      </TableCell>\n\n      <TableCell align=\"right\"></TableCell>\n    </TableRow>\n  );\n};\n\nconst Container = styled.div`\n  color: white;\n`;\n\nconst StyledTable = styled(Table)`\n  .MuiTableHead-root {\n    &:first-of-type: {\n      padding-left: 5,\n      borderTopLeftRadius: 8,\n      borderBottomLeftRadius: 8,\n \n    },\n    &:last-of-type: {\n      paddingRight: 5),\n      borderTopRightRadius: 8,\n      borderBottomRightRadius: 8,\n\n    },\n  }\n`;\n"],"names":[],"sourceRoot":""}