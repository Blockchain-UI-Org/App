{"version":3,"file":"main.760e0ecc5f6810595012.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/progressBar/line/index.tsx"],"sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatNumber } from \"../../../utils/format\";\nimport { theme } from \"../../theme\";\nimport { colors, ThemeColor } from \"../../theme/colors\";\n\nexport interface ProgressBarProps {\n  minValue: number;\n  maxValue: number;\n  value?: number;\n  showValue?: boolean;\n  errorMessage?: string | ReactElement;\n  title: string;\n  themeColor?: ThemeColor;\n  $percent?: number;\n}\nconst {\n  error100,\n  error500,\n  yellow500,\n  pink500,\n  success500,\n  white,\n  black,\n  blue500,\n} = theme.colors;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\ninterface SliderProps {\n  $colorMode: Record<string, string>;\n}\n\nconst Wrapper = styled.div<SliderProps>`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  align-content: center;\n\n  .slider {\n    -webkit-appearance: none;\n    width: 100%;\n    height: 6px;\n    border-radius: 24px;\n    background: linear-gradient(\n      90deg,\n      ${pink500} 0%,\n      ${yellow500} 50%,\n      ${success500} 100%\n    );\n    background: ${({ $colorMode }) => $colorMode?.midtone};\n    outline: none;\n    opacity: 0.7;\n    -webkit-transition: 0.2s;\n    transition: opacity 0.2s;\n  }\n\n  .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background: ${white};\n    cursor: pointer;\n    border: 2px solid ${success500};\n  }\n\n  .slider::-moz-range-thumb {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: ${success500};\n    cursor: pointer;\n  }\n`;\nconst StyledValue = styled.div`\n  padding-right: 10px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 30px;\n  color: ${black};\n`;\n\nconst ErrorMessage = styled.div`\n  width: 416px;\n  height: 80px;\n  color: ${error500};\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 16px;\n  margin-top: 28px;\n  /* Error/Error 100 */\n\n  background: ${error100};\n  border-radius: 8px;\n\n  a {\n    color: ${blue500};\n  }\n`;\n\nconst ProgressBar: FC<ProgressBarProps> = ({\n  minValue,\n  maxValue,\n  value,\n  showValue = false,\n  errorMessage,\n  title,\n}) => (\n  <Container>\n    <Wrapper $colorMode={colors[themeColor]}>\n      {showValue && value && (\n        <StyledValue data-testid=\"gradient-progress-bar-value\">\n          {value > maxValue ? `${maxValue}+` : formatNumber(value, 2)}\n        </StyledValue>\n      )}\n\n      <input\n        step=\"1\"\n        type=\"range\"\n        min={minValue}\n        max={maxValue}\n        value={value && value}\n        className=\"slider\"\n        id=\"myRange\"\n        title={title}\n        data-testid=\"gradient-progress-bar\"\n      />\n    </Wrapper>\n    {errorMessage && (\n      <ErrorMessage data-testid=\"gradient-progress-bar-error-msg\">\n        {errorMessage}\n      </ErrorMessage>\n    )}\n  </Container>\n);\n\nexport default ProgressBar;\n"],"names":[],"sourceRoot":""}