{"version":3,"file":"main.14cdca356ce85aa67e30.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAXA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://app/./src/component/table/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useState } from \\\"react\\\";\\nimport { Meta, Story } from \\\"@storybook/react\\\";\\nimport Table, { TableProps } from \\\"./index\\\";\\nimport styled from \\\"@emotion/styled\\\";\\n\\nexport default {\\n  title: \\\"Table/Table\\\",\\n  component: Table,\\n} as Meta;\\n\\nconst Template: Story<TableProps> = (args) => {\\n  const [pageNumber, setPageNumber] = useState(0);\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value);\\n      }}\\n    ></Table>\\n  );\\n};\\n\\nexport const WidthsInPercentage = Template.bind({});\\n\\nconst defaultArgs = {\\n  columnTitles: [\\\"Column1 Title- 50%\\\", \\\"Column2 - 30%\\\", \\\"Column3 - 20%\\\"],\\n  columnWidths: [\\\"50%\\\", \\\"30%\\\", \\\"20%\\\"],\\n  rows: [...new Array(20)].map((_, i) => [`Column1`, `Column2`, `Column3`]),\\n};\\n\\nWidthsInPercentage.args = defaultArgs;\\n\\nWidthsInPercentage.argTypes = {\\n  alternateRowColor: { control: { type: \\\"boolean\\\" } },\\n};\\n\\nexport const FixedWidths = Template.bind({});\\n\\nFixedWidths.args = {\\n  ...defaultArgs,\\n  columnWidths: [\\\"500px\\\", \\\"300px\\\", \\\"200px\\\"],\\n  columnTitles: [\\\"Column1 Title- 500px\\\", \\\"Column2 - 300px\\\", \\\"Column3 - 200px\\\"],\\n};\\n\\nconst FixedContainer = styled.div`\\n  width: 1000px;\\n\\n  .title {\\n    margin: 10px 0;\\n  }\\n`;\\n\\nconst FixedContainerTemplate: Story<TableProps> = (args) => (\\n  <FixedContainer style={{ width: \\\"1000px\\\" }}>\\n    <div className=\\\"title\\\">Width of container is 1000px</div>\\n    <Table {...args}></Table>\\n  </FixedContainer>\\n);\\n\\nexport const FixedAndPercentageWidths = FixedContainerTemplate.bind({});\\n\\nFixedAndPercentageWidths.args = {\\n  ...defaultArgs,\\n  columnWidths: [\\\"50%\\\", \\\"250px\\\", \\\"250px\\\"],\\n  columnTitles: [\\\"Column1 Title- 50%\\\", \\\"Column2 - 250px\\\", \\\"Column3 - 250px\\\"],\\n};\\n\\nexport const Numbered = Template.bind({});\\n\\nNumbered.args = {\\n  ...defaultArgs,\\n  pagination: true,\\n  addRowNumbers: true,\\n  pageNumber: 0,\\n  rowsPerPage: 10,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WidthsInPercentage\":{\"startLoc\":{\"col\":36,\"line\":11},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":36,\"line\":11},\"endBody\":{\"col\":1,\"line\":22}},\"FixedWidths\":{\"startLoc\":{\"col\":36,\"line\":11},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":36,\"line\":11},\"endBody\":{\"col\":1,\"line\":22}},\"FixedAndPercentageWidths\":{\"startLoc\":{\"col\":50,\"line\":54},\"endLoc\":{\"col\":1,\"line\":59},\"startBody\":{\"col\":50,\"line\":54},\"endBody\":{\"col\":1,\"line\":59}},\"Numbered\":{\"startLoc\":{\"col\":36,\"line\":11},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":36,\"line\":11},\"endBody\":{\"col\":1,\"line\":22}}};\n    \nimport React, { useState } from \"react\";\nimport { Meta, Story } from \"@storybook/react\";\nimport Table, { TableProps } from \"./index\";\nimport styled from \"@emotion/styled\";\n\nexport default {\n  title: \"Table/Table\",\n  component: Table,\n} as Meta;\n\nconst Template: Story<TableProps> = (args) => {\n  const [pageNumber, setPageNumber] = useState(0);\n  return (\n    <Table\n      {...args}\n      pageNumber={pageNumber}\n      setPageNumber={(value) => {\n        setPageNumber(value);\n      }}\n    ></Table>\n  );\n};\n\nexport const WidthsInPercentage = Template.bind({});;\n\nconst defaultArgs = {\n  columnTitles: [\"Column1 Title- 50%\", \"Column2 - 30%\", \"Column3 - 20%\"],\n  columnWidths: [\"50%\", \"30%\", \"20%\"],\n  rows: [...new Array(20)].map((_, i) => [`Column1`, `Column2`, `Column3`]),\n};\n\nWidthsInPercentage.args = defaultArgs;\n\nWidthsInPercentage.argTypes = {\n  alternateRowColor: { control: { type: \"boolean\" } },\n};\n\nexport const FixedWidths = Template.bind({});;\n\nFixedWidths.args = {\n  ...defaultArgs,\n  columnWidths: [\"500px\", \"300px\", \"200px\"],\n  columnTitles: [\"Column1 Title- 500px\", \"Column2 - 300px\", \"Column3 - 200px\"],\n};\n\nconst FixedContainer = styled.div`\n  width: 1000px;\n\n  .title {\n    margin: 10px 0;\n  }\n`;\n\nconst FixedContainerTemplate: Story<TableProps> = (args) => (\n  <FixedContainer style={{ width: \"1000px\" }}>\n    <div className=\"title\">Width of container is 1000px</div>\n    <Table {...args}></Table>\n  </FixedContainer>\n);\n\nexport const FixedAndPercentageWidths = FixedContainerTemplate.bind({});;\n\nFixedAndPercentageWidths.args = {\n  ...defaultArgs,\n  columnWidths: [\"50%\", \"250px\", \"250px\"],\n  columnTitles: [\"Column1 Title- 50%\", \"Column2 - 250px\", \"Column3 - 250px\"],\n};\n\nexport const Numbered = Template.bind({});\n\nNumbered.args = {\n  ...defaultArgs,\n  pagination: true,\n  addRowNumbers: true,\n  pageNumber: 0,\n  rowsPerPage: 10,\n};\n\n\n\nWidthsInPercentage.parameters = { storySource: { source: \"(args) => {\\n  const [pageNumber, setPageNumber] = useState(0);\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value);\\n      }}\\n    ></Table>\\n  );\\n}\" }, ...WidthsInPercentage.parameters };\nFixedWidths.parameters = { storySource: { source: \"(args) => {\\n  const [pageNumber, setPageNumber] = useState(0);\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value);\\n      }}\\n    ></Table>\\n  );\\n}\" }, ...FixedWidths.parameters };\nFixedAndPercentageWidths.parameters = { storySource: { source: \"(args) => (\\n  <FixedContainer style={{ width: \\\"1000px\\\" }}>\\n    <div className=\\\"title\\\">Width of container is 1000px</div>\\n    <Table {...args}></Table>\\n  </FixedContainer>\\n)\" }, ...FixedAndPercentageWidths.parameters };\nNumbered.parameters = { storySource: { source: \"(args) => {\\n  const [pageNumber, setPageNumber] = useState(0);\\n  return (\\n    <Table\\n      {...args}\\n      pageNumber={pageNumber}\\n      setPageNumber={(value) => {\\n        setPageNumber(value);\\n      }}\\n    ></Table>\\n  );\\n}\" }, ...Numbered.parameters };"],"names":[],"sourceRoot":""}