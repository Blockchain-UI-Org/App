{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/Avatar/stories/Avatar.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, { ReactElement } from \\\"react\\\";\\nimport { Avatar } from \\\"..\\\";\\n\\nconst story = {\\n  title: \\\"Baseweb / Content / Avatar\\\",\\n  parameters: {\\n    docs: {\\n      source: {\\n        type: \\\"code\\\",\\n      },\\n    },\\n  },\\n  args: {\\n    name: \\\"Agustin Moles\\\",\\n    size: \\\"40px\\\",\\n  },\\n  argTypes: {\\n    name: {\\n      description: \\\"Name to be displayed as acronym inside the component.\\\",\\n      control: { type: \\\"text\\\" },\\n      table: {\\n        type: { summary: \\\"string\\\" },\\n      },\\n    },\\n    size: {\\n      description:\\n        \\\"Size of the Avatar component passed in the form of a CSS Property.\\\",\\n      control: { type: \\\"text\\\" },\\n      table: {\\n        defaultValue: { summary: \\\"40px\\\" },\\n        type: { summary: \\\"string\\\" },\\n      },\\n    },\\n  },\\n};\\n\\nexport const defaultStory = ({\\n  name,\\n  size,\\n}: typeof story.args): ReactElement => <Avatar name={name} size={size} />;\\n\\ndefaultStory.storyName = \\\"Avatar\\\";\\n\\nexport default story;\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"defaultStory\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 37\n    },\n    \"endLoc\": {\n      \"col\": 73,\n      \"line\": 40\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 37\n    },\n    \"endBody\": {\n      \"col\": 73,\n      \"line\": 40\n    }\n  }\n};\nimport React from \"react\";\nimport { Avatar } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst story = {\n  title: \"Baseweb / Content / Avatar\",\n  parameters: {\n    docs: {\n      source: {\n        type: \"code\"\n      }\n    }\n  },\n  args: {\n    name: \"Agustin Moles\",\n    size: \"40px\"\n  },\n  argTypes: {\n    name: {\n      description: \"Name to be displayed as acronym inside the component.\",\n      control: {\n        type: \"text\"\n      },\n      table: {\n        type: {\n          summary: \"string\"\n        }\n      }\n    },\n    size: {\n      description: \"Size of the Avatar component passed in the form of a CSS Property.\",\n      control: {\n        type: \"text\"\n      },\n      table: {\n        defaultValue: {\n          summary: \"40px\"\n        },\n        type: {\n          summary: \"string\"\n        }\n      }\n    }\n  }\n};\nexport const defaultStory = _ref => {\n  let {\n    name,\n    size\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Avatar, {\n    name: name,\n    size: size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 40\n  }, this);\n};\ndefaultStory.storyName = \"Avatar\";\nexport default story;\ndefaultStory.parameters = {\n  storySource: {\n    source: \"({\\n  name,\\n  size,\\n}: typeof story.args): ReactElement => <Avatar name={name} size={size} />\"\n  },\n  ...defaultStory.parameters\n};\nexport const __namedExportsOrder = [\"defaultStory\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","Avatar","story","title","parameters","docs","source","type","args","name","size","argTypes","description","control","table","summary","defaultValue","defaultStory","storyName","storySource"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/Avatar/stories/Avatar.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { ReactElement } from \\\"react\\\";\\nimport { Avatar } from \\\"..\\\";\\n\\nconst story = {\\n  title: \\\"Baseweb / Content / Avatar\\\",\\n  parameters: {\\n    docs: {\\n      source: {\\n        type: \\\"code\\\",\\n      },\\n    },\\n  },\\n  args: {\\n    name: \\\"Agustin Moles\\\",\\n    size: \\\"40px\\\",\\n  },\\n  argTypes: {\\n    name: {\\n      description: \\\"Name to be displayed as acronym inside the component.\\\",\\n      control: { type: \\\"text\\\" },\\n      table: {\\n        type: { summary: \\\"string\\\" },\\n      },\\n    },\\n    size: {\\n      description:\\n        \\\"Size of the Avatar component passed in the form of a CSS Property.\\\",\\n      control: { type: \\\"text\\\" },\\n      table: {\\n        defaultValue: { summary: \\\"40px\\\" },\\n        type: { summary: \\\"string\\\" },\\n      },\\n    },\\n  },\\n};\\n\\nexport const defaultStory = ({\\n  name,\\n  size,\\n}: typeof story.args): ReactElement => <Avatar name={name} size={size} />;\\n\\ndefaultStory.storyName = \\\"Avatar\\\";\\n\\nexport default story;\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"defaultStory\":{\"startLoc\":{\"col\":28,\"line\":37},\"endLoc\":{\"col\":73,\"line\":40},\"startBody\":{\"col\":28,\"line\":37},\"endBody\":{\"col\":73,\"line\":40}}};\n    \nimport React, { ReactElement } from \"react\";\nimport { Avatar } from \"..\";\n\nconst story = {\n  title: \"Baseweb / Content / Avatar\",\n  parameters: {\n    docs: {\n      source: {\n        type: \"code\",\n      },\n    },\n  },\n  args: {\n    name: \"Agustin Moles\",\n    size: \"40px\",\n  },\n  argTypes: {\n    name: {\n      description: \"Name to be displayed as acronym inside the component.\",\n      control: { type: \"text\" },\n      table: {\n        type: { summary: \"string\" },\n      },\n    },\n    size: {\n      description:\n        \"Size of the Avatar component passed in the form of a CSS Property.\",\n      control: { type: \"text\" },\n      table: {\n        defaultValue: { summary: \"40px\" },\n        type: { summary: \"string\" },\n      },\n    },\n  },\n};\n\nexport const defaultStory = ({\n  name,\n  size,\n}: typeof story.args): ReactElement => <Avatar name={name} size={size} />;\n\ndefaultStory.storyName = \"Avatar\";\n\nexport default story;\n\n\n\ndefaultStory.parameters = { storySource: { source: \"({\\n  name,\\n  size,\\n}: typeof story.args): ReactElement => <Avatar name={name} size={size} />\" }, ...defaultStory.parameters };"],"mappings":";AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,q+BAAq+B;AACr/B;AACA,IAAIC,iBAAiB,GAAG;EAAC,cAAc,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAE5K,OAAOC,KAAK,MAAwB,OAAO;AAC3C,SAASC,MAAM,QAAQ,IAAI;AAAC;AAE5B,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,4BAA4B;EACnCC,UAAU,EAAE;IACVC,IAAI,EAAE;MACJC,MAAM,EAAE;QACNC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACDC,IAAI,EAAE;IACJC,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACRF,IAAI,EAAE;MACJG,WAAW,EAAE,uDAAuD;MACpEC,OAAO,EAAE;QAAEN,IAAI,EAAE;MAAO,CAAC;MACzBO,KAAK,EAAE;QACLP,IAAI,EAAE;UAAEQ,OAAO,EAAE;QAAS;MAC5B;IACF,CAAC;IACDL,IAAI,EAAE;MACJE,WAAW,EACT,oEAAoE;MACtEC,OAAO,EAAE;QAAEN,IAAI,EAAE;MAAO,CAAC;MACzBO,KAAK,EAAE;QACLE,YAAY,EAAE;UAAED,OAAO,EAAE;QAAO,CAAC;QACjCR,IAAI,EAAE;UAAEQ,OAAO,EAAE;QAAS;MAC5B;IACF;EACF;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG;EAAA,IAAC;IAC3BR,IAAI;IACJC;EACiB,CAAC;EAAA,oBAAmB,QAAC,MAAM;IAAC,IAAI,EAAED,IAAK;IAAC,IAAI,EAAEC;EAAK;IAAA;IAAA;IAAA;EAAA,QAAG;AAAA;AAEzEO,YAAY,CAACC,SAAS,GAAG,QAAQ;AAEjC,eAAehB,KAAK;AAIpBe,YAAY,CAACb,UAAU,GAAG;EAAEe,WAAW,EAAE;IAAEb,MAAM,EAAE;EAAkG,CAAC;EAAE,GAAGW,YAAY,CAACb;AAAW,CAAC;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}