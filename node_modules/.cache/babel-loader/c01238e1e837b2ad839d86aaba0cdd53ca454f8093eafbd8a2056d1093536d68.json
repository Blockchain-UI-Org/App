{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/component/notification/notification.tsx\";\nimport styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport Image from \"../image/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  success500,\n  error500,\n  white,\n  black\n} = theme.colors;\nconst TypeToColor = {\n  loading: white,\n  positive: success500,\n  negative: error500\n};\nconst TypeToIcon = {\n  // TO-DO Update with final icons\n  loading: \"spinner\",\n  positive: \"check\",\n  negative: \"alertWarning\"\n};\nexport const Notification = _ref => {\n  let {\n    type,\n    message\n  } = _ref;\n  const icon = TypeToIcon[type];\n  return /*#__PURE__*/_jsxDEV(NotificationWrapper, {\n    type: type,\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      height: \"24px\",\n      width: \"24px\",\n      name: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = Notification;\nconst NotificationWrapper = styled.div`\n  color: ${white};\n  font-size: 16px;\n  width: 280px;\n  margin: 0 auto;\n  background-color: ${_ref2 => {\n  let {\n    type\n  } = _ref2;\n  return TypeToColor[type];\n}};\n  color: ${_ref3 => {\n  let {\n    type\n  } = _ref3;\n  return type === \"loading\" ? black : white;\n}};\n  border-radius: 8px;\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  gap: 12px;\n  box-shadow: 0px 4px 16px rgba(58, 78, 88, 0.15);\n`;\n_c2 = NotificationWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"NotificationWrapper\");","map":{"version":3,"names":["styled","theme","Image","success500","error500","white","black","colors","TypeToColor","loading","positive","negative","TypeToIcon","Notification","type","message","icon","NotificationWrapper","div"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/notification/notification.tsx"],"sourcesContent":["import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport Image from \"../image/image\";\nimport { regularIcons } from \"../static/images/icons/regular/index\";\n\nconst { success500, error500, white, black } = theme.colors;\n\ntype NotificationType = \"loading\" | \"positive\" | \"negative\";\n\nconst TypeToColor: { [key in NotificationType]: string } = {\n  loading: white,\n  positive: success500,\n  negative: error500,\n};\n\ntype Icon = keyof typeof regularIcons;\n\nconst TypeToIcon: { [key in NotificationType]: Icon } = {\n  // TO-DO Update with final icons\n  loading: \"spinner\",\n  positive: \"check\",\n  negative: \"alertWarning\",\n};\n\nexport interface NotificationProps {\n  message: string;\n  type: NotificationType;\n}\n\nexport const Notification: FunctionComponent<NotificationProps> = ({\n  type,\n  message,\n}) => {\n  const icon = TypeToIcon[type];\n  return (\n    <NotificationWrapper type={type}>\n      <Image height=\"24px\" width=\"24px\" name={icon} />\n      <span>{message}</span>\n    </NotificationWrapper>\n  );\n};\n\nconst NotificationWrapper = styled.div<{ type: NotificationType }>`\n  color: ${white};\n  font-size: 16px;\n  width: 280px;\n  margin: 0 auto;\n  background-color: ${({ type }) => TypeToColor[type]};\n  color: ${({ type }) => (type === \"loading\" ? black : white)};\n  border-radius: 8px;\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  gap: 12px;\n  box-shadow: 0px 4px 16px rgba(58, 78, 88, 0.15);\n`;\n"],"mappings":";AACA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,KAAK,MAAM,gBAAgB;AAAC;AAGnC,MAAM;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAM,CAAC,GAAGL,KAAK,CAACM,MAAM;AAI3D,MAAMC,WAAkD,GAAG;EACzDC,OAAO,EAAEJ,KAAK;EACdK,QAAQ,EAAEP,UAAU;EACpBQ,QAAQ,EAAEP;AACZ,CAAC;AAID,MAAMQ,UAA+C,GAAG;EACtD;EACAH,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAOD,OAAO,MAAME,YAAkD,GAAG,QAG5D;EAAA,IAH6D;IACjEC,IAAI;IACJC;EACF,CAAC;EACC,MAAMC,IAAI,GAAGJ,UAAU,CAACE,IAAI,CAAC;EAC7B,oBACE,QAAC,mBAAmB;IAAC,IAAI,EAAEA,IAAK;IAAA,wBAC9B,QAAC,KAAK;MAAC,MAAM,EAAC,MAAM;MAAC,KAAK,EAAC,MAAM;MAAC,IAAI,EAAEE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD;MAAA,UAAOD;IAAO;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAE1B,CAAC;AAAC,KAXWF,YAAkD;AAa/D,MAAMI,mBAAmB,GAAGjB,MAAM,CAACkB,GAAgC;AACnE,WAAWb,KAAM;AACjB;AACA;AACA;AACA,sBAAsB;EAAA,IAAC;IAAES;EAAK,CAAC;EAAA,OAAKN,WAAW,CAACM,IAAI,CAAC;AAAA,CAAC;AACtD,WAAW;EAAA,IAAC;IAAEA;EAAK,CAAC;EAAA,OAAMA,IAAI,KAAK,SAAS,GAAGR,KAAK,GAAGD,KAAK;AAAA,CAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAbIY,mBAAmB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}