{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/components/Upshot/Icon/index.tsx\";\nimport React, { forwardRef } from 'react';\nimport SVG from 'react-inlinesvg';\nimport colors from '../themes/UpshotUI/colors';\nimport icons from './icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Icon component for SVG assets.\n */\nconst Icon = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  var _colors$color;\n  let {\n    size = '100%',\n    color,\n    icon,\n    style,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(SVG, {\n    src: icons[icon]\n    /* Preprocess SVGs to use color prop.\n    It changes every fill=\"*\" and stroke to fill=\"*\"\n    except when the vaule is \"none\" */,\n    preProcessor: svg => {\n      if (color) return svg.replace(/fill=\"none\"/g, 'fill_temp=\"none\"').replace(/fill=\".*?\"/g, 'fill=\"currentColor\"').replace(/fill_temp=\"none\"/g, 'fill=\"none\"').replace(/stroke=\"none\"/g, 'stroke_temp=\"none\"').replace(/stroke=\".*?\"/g, 'stroke=\"currentColor\"').replace(/stroke_temp=\"none\"/g, 'stroke=\"none\"');else return svg;\n    }\n    /* If no color is provided, inherit color from the container. */,\n    color: (_colors$color = colors[color]) !== null && _colors$color !== void 0 ? _colors$color : 'inherit'\n    /* Fixed square size */,\n    width: size,\n    height: size,\n    style: {\n      flexShrink: 0,\n      fill: color ? colors[color] : undefined,\n      ...style\n    },\n    ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Icon;\nexport default Icon;\nvar _c, _c2;\n$RefreshReg$(_c, \"Icon$forwardRef\");\n$RefreshReg$(_c2, \"Icon\");","map":{"version":3,"names":["React","forwardRef","SVG","colors","icons","Icon","ref","size","color","icon","style","props","svg","replace","flexShrink","fill","undefined"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/components/Upshot/Icon/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport SVG, { Props as SVGProps } from 'react-inlinesvg'\nimport colors from '../themes/UpshotUI/colors'\nimport icons from './icons'\n\nexport interface IconProps extends Omit<SVGProps, 'src'> {\n  /**\n   * Defines the SVG icon to render.\n   */\n  icon: keyof typeof icons\n  /**\n   * Specifies the width & height for the square svg icon.\n   */\n  size?: number | string\n  /**\n   * Named color from theme specification.\n   */\n  color?: keyof typeof colors\n}\n\n/**\n * Icon component for SVG assets.\n */\nconst Icon = forwardRef(\n  (\n    { size = '100%', color, icon, style, ...props }: IconProps,\n    ref: React.ForwardedRef<SVG>\n  ) => (\n    <SVG\n      src={icons[icon]}\n      /* Preprocess SVGs to use color prop.\n      It changes every fill=\"*\" and stroke to fill=\"*\"\n      except when the vaule is \"none\" */\n      preProcessor={(svg) => {\n        if (color)\n          return svg\n            .replace(/fill=\"none\"/g, 'fill_temp=\"none\"')\n            .replace(/fill=\".*?\"/g, 'fill=\"currentColor\"')\n            .replace(/fill_temp=\"none\"/g, 'fill=\"none\"')\n            .replace(/stroke=\"none\"/g, 'stroke_temp=\"none\"')\n            .replace(/stroke=\".*?\"/g, 'stroke=\"currentColor\"')\n            .replace(/stroke_temp=\"none\"/g, 'stroke=\"none\"')\n        else return svg\n      }}\n      /* If no color is provided, inherit color from the container. */\n      color={colors[color] ?? 'inherit'}\n      /* Fixed square size */\n      width={size}\n      height={size}\n      style={{\n        flexShrink: 0,\n        fill: color ? colors[color] : undefined,\n        ...style,\n      }}\n      {...{ ref, ...props }}\n    />\n  )\n)\n\nexport default Icon\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,GAAG,MAA6B,iBAAiB;AACxD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAAA;AAiB3B;AACA;AACA;AACA,MAAMC,IAAI,gBAAGJ,UAAU,MACrB,OAEEK,GAA4B;EAAA;EAAA,IAD5B;IAAEC,IAAI,GAAG,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,KAAK;IAAE,GAAGC;EAAiB,CAAC;EAAA,oBAG1D,QAAC,GAAG;IACF,GAAG,EAAEP,KAAK,CAACK,IAAI;IACf;AACN;AACA,sCAFM;IAGA,YAAY,EAAGG,GAAG,IAAK;MACrB,IAAIJ,KAAK,EACP,OAAOI,GAAG,CACPC,OAAO,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAC3CA,OAAO,CAAC,aAAa,EAAE,qBAAqB,CAAC,CAC7CA,OAAO,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAC3CA,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAC/CA,OAAO,CAAC,eAAe,EAAE,uBAAuB,CAAC,CACjDA,OAAO,CAAC,qBAAqB,EAAE,eAAe,CAAC,MAC/C,OAAOD,GAAG;IACjB;IACA;IACA,KAAK,mBAAET,MAAM,CAACK,KAAK,CAAC,yDAAI;IACxB;IACA,KAAK,EAAED,IAAK;IACZ,MAAM,EAAEA,IAAK;IACb,KAAK,EAAE;MACLO,UAAU,EAAE,CAAC;MACbC,IAAI,EAAEP,KAAK,GAAGL,MAAM,CAACK,KAAK,CAAC,GAAGQ,SAAS;MACvC,GAAGN;IACL,CAAE;IACIJ,GAAG;IAAE,GAAGK;EAAK;IAAA;IAAA;IAAA;EAAA,QACnB;AAAA,CACH,CACF;AAAA,MAlCKN,IAAI;AAoCV,eAAeA,IAAI;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}