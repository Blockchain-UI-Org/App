{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/component/icon/icon.tsx\";\nimport Image from '../image/image';\nimport { getIconSize } from '../theme/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Icon = _ref => {\n  let {\n    size = 'medium',\n    name,\n    src\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Image, {\n    name: name,\n    src: src,\n    width: getIconSize['regular'][size],\n    height: getIconSize['regular'][size],\n    iconType: \"regular\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Icon;\nexport const CryptoIcon = _ref2 => {\n  let {\n    size = 'medium',\n    src,\n    cryptoSymbol\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Image, {\n    name: cryptoSymbol,\n    src: src,\n    width: getIconSize['crypto'][size],\n    height: getIconSize['crypto'][size],\n    iconType: \"crypto\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CryptoIcon;\nvar _c, _c2;\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"CryptoIcon\");","map":{"version":3,"names":["Image","getIconSize","Icon","size","name","src","CryptoIcon","cryptoSymbol"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/icon/icon.tsx"],"sourcesContent":["import { FC } from 'react';\nimport Image from '../image/image';\nimport { CryptoSymbols } from '../static/types/crypto';\nimport { IconSizes } from '../static/types/icons';\nimport { getIconSize } from '../theme/icons';\n\nexport interface IconProps {\n  name: string;\n  size?: keyof IconSizes;\n  src?: string;\n}\n\nexport const Icon: FC<IconProps> = ({ size = 'medium', name, src }) => {\n  return (\n    <Image\n      name={name}\n      src={src}\n      width={getIconSize['regular'][size]}\n      height={getIconSize['regular'][size]}\n      iconType=\"regular\"\n    />\n  );\n};\n\nexport interface CryptoIconProps {\n  cryptoSymbol: CryptoSymbols;\n  size?: keyof IconSizes;\n  src?: string;\n}\n\nexport const CryptoIcon: FC<CryptoIconProps> = ({ size = 'medium', src, cryptoSymbol }) => {\n  return (\n    <Image\n      name={cryptoSymbol}\n      src={src}\n      width={getIconSize['crypto'][size]}\n      height={getIconSize['crypto'][size]}\n      iconType=\"crypto\"\n    />\n  );\n};\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,gBAAgB;AAGlC,SAASC,WAAW,QAAQ,gBAAgB;AAAC;AAQ7C,OAAO,MAAMC,IAAmB,GAAG,QAAoC;EAAA,IAAnC;IAAEC,IAAI,GAAG,QAAQ;IAAEC,IAAI;IAAEC;EAAI,CAAC;EAChE,oBACE,QAAC,KAAK;IACJ,IAAI,EAAED,IAAK;IACX,GAAG,EAAEC,GAAI;IACT,KAAK,EAAEJ,WAAW,CAAC,SAAS,CAAC,CAACE,IAAI,CAAE;IACpC,MAAM,EAAEF,WAAW,CAAC,SAAS,CAAC,CAACE,IAAI,CAAE;IACrC,QAAQ,EAAC;EAAS;IAAA;IAAA;IAAA;EAAA,QAClB;AAEN,CAAC;AAAC,KAVWD,IAAmB;AAkBhC,OAAO,MAAMI,UAA+B,GAAG,SAA4C;EAAA,IAA3C;IAAEH,IAAI,GAAG,QAAQ;IAAEE,GAAG;IAAEE;EAAa,CAAC;EACpF,oBACE,QAAC,KAAK;IACJ,IAAI,EAAEA,YAAa;IACnB,GAAG,EAAEF,GAAI;IACT,KAAK,EAAEJ,WAAW,CAAC,QAAQ,CAAC,CAACE,IAAI,CAAE;IACnC,MAAM,EAAEF,WAAW,CAAC,QAAQ,CAAC,CAACE,IAAI,CAAE;IACpC,QAAQ,EAAC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACjB;AAEN,CAAC;AAAC,MAVWG,UAA+B;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}