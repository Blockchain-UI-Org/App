{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/components/Upshot/Accordion/index.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, { useState } from 'react'\\nimport { ComponentStory, ComponentMeta } from '@storybook/react'\\n\\nimport Accordion from './'\\n\\nexport default {\\n  title: '@UI/Accordion',\\n  component: Accordion,\\n} as ComponentMeta<typeof Accordion>\\n\\nconst Template: ComponentStory<typeof Accordion> = (args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\\n\\nexport const Default = Template.bind({})\\n\\nDefault.args = {\\n  title: 'Price History',\\n}\\n\\nexport const Dropdown = Template.bind({})\\n\\nDropdown.args = {\\n  title: 'Price History',\\n  isDropdown: true,\\n}\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 51,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 32\n    },\n    \"startBody\": {\n      \"col\": 51,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 32\n    }\n  },\n  \"Dropdown\": {\n    \"startLoc\": {\n      \"col\": 51,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 32\n    },\n    \"startBody\": {\n      \"col\": 51,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 32\n    }\n  }\n};\nimport React, { useState } from 'react';\nimport Accordion from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: '@UI/Accordion',\n  component: Accordion\n};\nconst Template = args => {\n  _s();\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    onClick: () => setOpen(!open),\n    onClose: () => setOpen(false),\n    open,\n    ...args,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is same text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Template, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = Template;\nexport const Default = Template.bind({});\nDefault.args = {\n  title: 'Price History'\n};\nexport const Dropdown = Template.bind({});\nDropdown.args = {\n  title: 'Price History',\n  isDropdown: true\n};\nDefault.parameters = {\n  storySource: {\n    source: \"(args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\"\n  },\n  ...Default.parameters\n};\nDropdown.parameters = {\n  storySource: {\n    source: \"(args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\"\n  },\n  ...Dropdown.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"Default\", \"Dropdown\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useState","Accordion","title","component","Template","args","open","setOpen","Default","bind","Dropdown","isDropdown","parameters","storySource","source"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/components/Upshot/Accordion/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useState } from 'react'\\nimport { ComponentStory, ComponentMeta } from '@storybook/react'\\n\\nimport Accordion from './'\\n\\nexport default {\\n  title: '@UI/Accordion',\\n  component: Accordion,\\n} as ComponentMeta<typeof Accordion>\\n\\nconst Template: ComponentStory<typeof Accordion> = (args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\\n\\nexport const Default = Template.bind({})\\n\\nDefault.args = {\\n  title: 'Price History',\\n}\\n\\nexport const Dropdown = Template.bind({})\\n\\nDropdown.args = {\\n  title: 'Price History',\\n  isDropdown: true,\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":51,\"line\":11},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":51,\"line\":11},\"endBody\":{\"col\":1,\"line\":32}},\"Dropdown\":{\"startLoc\":{\"col\":51,\"line\":11},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":51,\"line\":11},\"endBody\":{\"col\":1,\"line\":32}}};\n    \nimport React, { useState } from 'react'\nimport { ComponentStory, ComponentMeta } from '@storybook/react'\n\nimport Accordion from './'\n\nexport default {\n  title: '@UI/Accordion',\n  component: Accordion,\n} as ComponentMeta<typeof Accordion>\n\nconst Template: ComponentStory<typeof Accordion> = (args) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Accordion\n      onClick={() => setOpen(!open)}\n      onClose={() => setOpen(false)}\n      {...{ open, ...args }}\n    >\n      <div>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n        <h1> This is same text </h1>\n      </div>\n    </Accordion>\n  )\n}\n\nexport const Default = Template.bind({});\n\nDefault.args = {\n  title: 'Price History',\n}\n\nexport const Dropdown = Template.bind({});\nDropdown.args = {\n  title: 'Price History',\n  isDropdown: true,\n}\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\" }, ...Default.parameters };\nDropdown.parameters = { storySource: { source: \"(args) => {\\n  const [open, setOpen] = useState(false)\\n\\n  return (\\n    <Accordion\\n      onClick={() => setOpen(!open)}\\n      onClose={() => setOpen(false)}\\n      {...{ open, ...args }}\\n    >\\n      <div>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n        <h1> This is same text </h1>\\n      </div>\\n    </Accordion>\\n  )\\n}\" }, ...Dropdown.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,6iCAA6iC;AAC7jC;AACA,IAAIC,iBAAiB,GAAG;EAAC,SAAS,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC,CAAC;EAAC,UAAU,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAE9S,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAOC,SAAS,MAAM,IAAI;AAAA;AAE1B,eAAe;EACbC,KAAK,EAAE,eAAe;EACtBC,SAAS,EAAEF;AACb,CAAC;AAED,MAAMG,QAA0C,GAAIC,IAAI,IAAK;EAAA;EAC3D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvC,oBACE,QAAC,SAAS;IACR,OAAO,EAAE,MAAMO,OAAO,CAAC,CAACD,IAAI,CAAE;IAC9B,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAK,CAAE;IACxBD,IAAI;IAAE,GAAGD,IAAI;IAAA,uBAEnB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB,CAAC;AAAA,GArBKD,QAA0C;AAAA,KAA1CA,QAA0C;AAuBhD,OAAO,MAAMI,OAAO,GAAGJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;AAExCD,OAAO,CAACH,IAAI,GAAG;EACbH,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAGN,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;AACzCC,QAAQ,CAACL,IAAI,GAAG;EACdH,KAAK,EAAE,eAAe;EACtBS,UAAU,EAAE;AACd,CAAC;AAIDH,OAAO,CAACI,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAA6iB,CAAC;EAAE,GAAGN,OAAO,CAACI;AAAW,CAAC;AACrnBF,QAAQ,CAACE,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAA6iB,CAAC;EAAE,GAAGJ,QAAQ,CAACE;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}