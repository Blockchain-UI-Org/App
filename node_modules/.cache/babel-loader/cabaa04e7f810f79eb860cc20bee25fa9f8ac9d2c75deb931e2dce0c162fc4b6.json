{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/component/progressBar/circleBar.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { colorMode } from \"../theme/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CircleProgressBar = _ref => {\n  let {\n    themeColor = \"default\",\n    percent = 0\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(CircleProgressBarBase\n  //@ts-ignore\n  , {\n    $colorMode: colorMode[themeColor],\n    $percent: 100 - percent,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"circleContainer\",\n      viewBox: \"2 -2 28 36\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circleContainerBackground\",\n        r: \"16\",\n        cx: \"16\",\n        cy: \"16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"circleOffset\",\n        r: \"16\",\n        cx: \"16\",\n        cy: \"16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Percent, {\n      children: [percent, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CircleProgressBar;\nconst swatches = {\n  blue: \"#0091FF\",\n  blueBright: \"#3e8ff7\",\n  pink: \"#D356B9\",\n  pinkGmi: \"#EC5B94\",\n  red: \"#FF562B\",\n  orange: \"#D87C22\",\n  yellow: \"#FFC503\",\n  green: \"#1BB441\",\n  greenPrice: \"#68CE81\",\n  bluePrice: \"#50A7E9\",\n  redPrice: \"#F55858\",\n  purple: \"#7B61FF\",\n  black: \"#000\",\n  white: \"#FFF\",\n  \"grey-200\": \"#F5F5F5\",\n  \"grey-300\": \"#E4E4E4\",\n  \"grey-400\": \"#C0C0C0\",\n  \"grey-500\": \"#A7A7A7\",\n  \"grey-600\": \"#7C7C7C\",\n  \"grey-700\": \"#545454\",\n  \"grey-800\": \"#231F20\",\n  \"grey-900\": \"#151515\",\n  transparent: \"transparent\"\n};\nconst colors = {\n  ...swatches,\n  /* Aliases */\n  primary: swatches.blue,\n  secondary: swatches.pink,\n  background: swatches.black,\n  error: swatches.red,\n  text: swatches[\"grey-300\"],\n  disabled: swatches[\"grey-700\"]\n};\nexport default colors;\nconst Percent = styled.div`\n  position: fixed;\n  top: 15%;\n  left: 5%;\n  color: white;\n  font-size: 20px;\n  z-index: 2;\n`;\n_c2 = Percent;\nexport const CircleProgressBarBase = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: green;\n\n  .circleContainer {\n    --dot-diameter: 100%;\n    --circle-border-width: 4px;\n    --default-color: #545454;\n    --completion-color: ${_ref2 => {\n  let {\n    $colorMode\n  } = _ref2;\n  return $colorMode === null || $colorMode === void 0 ? void 0 : $colorMode.midtone;\n}};\n    width: var(--dot-diameter);\n    height: var(--dot-diameter);\n    transform: rotate(-90deg);\n  }\n  .circleContainerBackground {\n    fill: none;\n    stroke: var(--default-color);\n    stroke-width: var(--circle-border-width);\n  }\n  .circleOffset {\n    fill: none;\n    stroke-linecap: round;\n    stroke: var(--completion-color);\n    stroke-dasharray: 100 100;\n    stroke-linecap: round;\n    stroke-width: var(--circle-border-width);\n    stroke-dashoffset: ${_ref3 => {\n  let {\n    $percent\n  } = _ref3;\n  return $percent;\n}};\n  }\n`;\n_c3 = CircleProgressBarBase;\nfunction transparentize(arg0, arg1) {\n  throw new Error(\"Function not implemented.\");\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CircleProgressBar\");\n$RefreshReg$(_c2, \"Percent\");\n$RefreshReg$(_c3, \"CircleProgressBarBase\");","map":{"version":3,"names":["React","styled","colorMode","CircleProgressBar","themeColor","percent","swatches","blue","blueBright","pink","pinkGmi","red","orange","yellow","green","greenPrice","bluePrice","redPrice","purple","black","white","transparent","colors","primary","secondary","background","error","text","disabled","Percent","div","CircleProgressBarBase","$colorMode","midtone","$percent","transparentize","arg0","arg1","Error"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/progressBar/circleBar.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Box } from \"theme-ui\";\nimport { colorMode, ThemeColor } from \"../theme/colors\";\n\nexport interface CircleBarProps {\n  showValue?: boolean;\n  title: string;\n  themeColor: ThemeColor;\n  percent: number;\n}\n\nexport const CircleProgressBar = ({ themeColor = \"default\", percent = 0 }) => {\n  return (\n    <CircleProgressBarBase\n      //@ts-ignore\n      $colorMode={colorMode[themeColor]}\n      $percent={100 - percent}\n    >\n      <svg\n        className=\"circleContainer\"\n        viewBox=\"2 -2 28 36\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"circleContainerBackground\"\n          r=\"16\"\n          cx=\"16\"\n          cy=\"16\"\n        ></circle>\n        <circle className=\"circleOffset\" r=\"16\" cx=\"16\" cy=\"16\"></circle>\n      </svg>\n      <Percent>{percent}%</Percent>\n    </CircleProgressBarBase>\n  );\n};\n\nconst swatches = {\n  blue: \"#0091FF\",\n  blueBright: \"#3e8ff7\",\n  pink: \"#D356B9\",\n  pinkGmi: \"#EC5B94\",\n  red: \"#FF562B\",\n  orange: \"#D87C22\",\n  yellow: \"#FFC503\",\n  green: \"#1BB441\",\n  greenPrice: \"#68CE81\",\n  bluePrice: \"#50A7E9\",\n  redPrice: \"#F55858\",\n  purple: \"#7B61FF\",\n  black: \"#000\",\n  white: \"#FFF\",\n  \"grey-200\": \"#F5F5F5\",\n  \"grey-300\": \"#E4E4E4\",\n  \"grey-400\": \"#C0C0C0\",\n  \"grey-500\": \"#A7A7A7\",\n  \"grey-600\": \"#7C7C7C\",\n  \"grey-700\": \"#545454\",\n  \"grey-800\": \"#231F20\",\n  \"grey-900\": \"#151515\",\n  transparent: \"transparent\",\n};\n\nconst colors = {\n  ...swatches,\n  /* Aliases */\n  primary: swatches.blue,\n  secondary: swatches.pink,\n  background: swatches.black,\n  error: swatches.red,\n  text: swatches[\"grey-300\"],\n  disabled: swatches[\"grey-700\"],\n};\n\nexport default colors;\n\ninterface CircleBarBaseProps {\n  showValue?: boolean;\n  $percent: number;\n  $colorMode: Record<string, string>;\n}\n\nconst Percent = styled.div`\n  position: fixed;\n  top: 15%;\n  left: 5%;\n  color: white;\n  font-size: 20px;\n  z-index: 2;\n`;\n\nexport const CircleProgressBarBase = styled.div<CircleBarBaseProps>`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: green;\n\n  .circleContainer {\n    --dot-diameter: 100%;\n    --circle-border-width: 4px;\n    --default-color: #545454;\n    --completion-color: ${({ $colorMode }) => $colorMode?.midtone};\n    width: var(--dot-diameter);\n    height: var(--dot-diameter);\n    transform: rotate(-90deg);\n  }\n  .circleContainerBackground {\n    fill: none;\n    stroke: var(--default-color);\n    stroke-width: var(--circle-border-width);\n  }\n  .circleOffset {\n    fill: none;\n    stroke-linecap: round;\n    stroke: var(--completion-color);\n    stroke-dasharray: 100 100;\n    stroke-linecap: round;\n    stroke-width: var(--circle-border-width);\n    stroke-dashoffset: ${({ $percent }) => $percent};\n  }\n`;\nfunction transparentize(\n  arg0: number,\n  arg1: string\n): import(\"styled-components\").Interpolation<\n  import(\"styled-components\").ThemedStyledProps<\n    import(\"theme-ui\").BoxProps &\n      React.RefAttributes<any> &\n      ProgressBarBaseProps,\n    any\n  >\n> {\n  throw new Error(\"Function not implemented.\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}