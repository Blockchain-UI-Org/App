{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/christopherigbojekwe/Documents/work/web3ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _objectSpread from\"/Users/christopherigbojekwe/Documents/work/web3ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;/* eslint-disable */ // @ts-nocheck\n// @ts-ignore\nvar __STORY__=\"import React from \\\"react\\\";\\nimport { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\nimport CreditCard from \\\".\\\";\\nimport styled from \\\"styled-components\\\";\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: \\\"Finance/CreditCards\\\",\\n  component: CreditCard,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    themeColor: {\\n      options: [\\\"green\\\", \\\"yellow\\\", \\\"red\\\", \\\"blue\\\"],\\n      control: { type: \\\"select\\\" }, // Automatically inferred when 'options' is defined\\n    },\\n  },\\n} as ComponentMeta<typeof CreditCard>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: ComponentStory<typeof CreditCard> = (args) => (\\n  <CreditCard {...args} />\\n);\\n\\nexport const Default = Template.bind({});\\n\\nDefault.args = {\\n  currency: \\\"BTC\\\",\\n};\\n\\nexport const Stacked = () => {\\n  return (\\n    <StackedWrapper>\\n      <GreenCard>\\n        <Template themeColor=\\\"green\\\" currency=\\\"BTC\\\" />\\n      </GreenCard>\\n      <YellowCard>\\n        <Template themeColor=\\\"yellow\\\" />\\n      </YellowCard>\\n      <RedCard>\\n        <Template themeColor=\\\"red\\\" />\\n      </RedCard>\\n      <BlueCard>\\n        <Template themeColor=\\\"blue\\\" currency=\\\"USDC\\\" />\\n      </BlueCard>\\n      <BlackCard>\\n        <Template />\\n      </BlackCard>\\n    </StackedWrapper>\\n  );\\n};\\n\\nconst StackedWrapper = styled.div`\\n  position: relative;\\n`;\\n\\nconst GreenCard = styled.div`\\n  position: fixed;\\n  top: 10px;\\n`;\\n\\nconst YellowCard = styled.div`\\n  position: fixed;\\n  top: 100px;\\n`;\\nconst RedCard = styled.div`\\n  position: fixed;\\n  top: 200px;\\n`;\\n\\nconst BlueCard = styled.div`\\n  position: fixed;\\n  top: 300px;\\n`;\\n\\nconst BlackCard = styled.div`\\n  position: fixed;\\n  top: 400px;\\n`;\\n\";// @ts-ignore\nvar __LOCATIONS_MAP__={\"Default\":{\"startLoc\":{\"col\":52,\"line\":20},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":52,\"line\":20},\"endBody\":{\"col\":1,\"line\":22}},\"Stacked\":{\"startLoc\":{\"col\":23,\"line\":30},\"endLoc\":{\"col\":1,\"line\":50},\"startBody\":{\"col\":23,\"line\":30},\"endBody\":{\"col\":1,\"line\":50}}};import React from\"react\";import CreditCard from\".\";import styled from\"styled-components\";// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default{title:\"Finance/CreditCards\",component:CreditCard,// More on argTypes: https://storybook.js.org/docs/react/api/argtypes\nargTypes:{themeColor:{options:[\"green\",\"yellow\",\"red\",\"blue\"],control:{type:\"select\"}// Automatically inferred when 'options' is defined\n}}};// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nvar Template=function Template(args){return/*#__PURE__*/_jsx(CreditCard,_objectSpread({},args));};export var Default=Template.bind({});;Default.args={currency:\"BTC\"};export var Stacked=function Stacked(){return/*#__PURE__*/_jsxs(StackedWrapper,{children:[/*#__PURE__*/_jsx(GreenCard,{children:/*#__PURE__*/_jsx(Template,{themeColor:\"green\",currency:\"BTC\"})}),/*#__PURE__*/_jsx(YellowCard,{children:/*#__PURE__*/_jsx(Template,{themeColor:\"yellow\"})}),/*#__PURE__*/_jsx(RedCard,{children:/*#__PURE__*/_jsx(Template,{themeColor:\"red\"})}),/*#__PURE__*/_jsx(BlueCard,{children:/*#__PURE__*/_jsx(Template,{themeColor:\"blue\",currency:\"USDC\"})}),/*#__PURE__*/_jsx(BlackCard,{children:/*#__PURE__*/_jsx(Template,{})})]});};var StackedWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n\"])));var GreenCard=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 10px;\\n\"])));var YellowCard=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 100px;\\n\"])));var RedCard=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 200px;\\n\"])));var BlueCard=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 300px;\\n\"])));var BlackCard=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 400px;\\n\"])));Default.parameters=_objectSpread({storySource:{source:\"(args) => (\\n  <CreditCard {...args} />\\n)\"}},Default.parameters);Stacked.parameters=_objectSpread({storySource:{source:\"() => {\\n  return (\\n    <StackedWrapper>\\n      <GreenCard>\\n        <Template themeColor=\\\"green\\\" currency=\\\"BTC\\\" />\\n      </GreenCard>\\n      <YellowCard>\\n        <Template themeColor=\\\"yellow\\\" />\\n      </YellowCard>\\n      <RedCard>\\n        <Template themeColor=\\\"red\\\" />\\n      </RedCard>\\n      <BlueCard>\\n        <Template themeColor=\\\"blue\\\" currency=\\\"USDC\\\" />\\n      </BlueCard>\\n      <BlackCard>\\n        <Template />\\n      </BlackCard>\\n    </StackedWrapper>\\n  );\\n}\"}},Stacked.parameters);export var __namedExportsOrder=[\"Default\",\"Stacked\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","CreditCard","styled","title","component","argTypes","themeColor","options","control","type","Template","args","Default","bind","currency","Stacked","StackedWrapper","div","GreenCard","YellowCard","RedCard","BlueCard","BlackCard","parameters","storySource","source"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/finance/creditcards/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { ComponentStory, ComponentMeta } from \\\"@storybook/react\\\";\\nimport CreditCard from \\\".\\\";\\nimport styled from \\\"styled-components\\\";\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: \\\"Finance/CreditCards\\\",\\n  component: CreditCard,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    themeColor: {\\n      options: [\\\"green\\\", \\\"yellow\\\", \\\"red\\\", \\\"blue\\\"],\\n      control: { type: \\\"select\\\" }, // Automatically inferred when 'options' is defined\\n    },\\n  },\\n} as ComponentMeta<typeof CreditCard>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: ComponentStory<typeof CreditCard> = (args) => (\\n  <CreditCard {...args} />\\n);\\n\\nexport const Default = Template.bind({});\\n\\nDefault.args = {\\n  currency: \\\"BTC\\\",\\n};\\n\\nexport const Stacked = () => {\\n  return (\\n    <StackedWrapper>\\n      <GreenCard>\\n        <Template themeColor=\\\"green\\\" currency=\\\"BTC\\\" />\\n      </GreenCard>\\n      <YellowCard>\\n        <Template themeColor=\\\"yellow\\\" />\\n      </YellowCard>\\n      <RedCard>\\n        <Template themeColor=\\\"red\\\" />\\n      </RedCard>\\n      <BlueCard>\\n        <Template themeColor=\\\"blue\\\" currency=\\\"USDC\\\" />\\n      </BlueCard>\\n      <BlackCard>\\n        <Template />\\n      </BlackCard>\\n    </StackedWrapper>\\n  );\\n};\\n\\nconst StackedWrapper = styled.div`\\n  position: relative;\\n`;\\n\\nconst GreenCard = styled.div`\\n  position: fixed;\\n  top: 10px;\\n`;\\n\\nconst YellowCard = styled.div`\\n  position: fixed;\\n  top: 100px;\\n`;\\nconst RedCard = styled.div`\\n  position: fixed;\\n  top: 200px;\\n`;\\n\\nconst BlueCard = styled.div`\\n  position: fixed;\\n  top: 300px;\\n`;\\n\\nconst BlackCard = styled.div`\\n  position: fixed;\\n  top: 400px;\\n`;\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":52,\"line\":20},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":52,\"line\":20},\"endBody\":{\"col\":1,\"line\":22}},\"Stacked\":{\"startLoc\":{\"col\":23,\"line\":30},\"endLoc\":{\"col\":1,\"line\":50},\"startBody\":{\"col\":23,\"line\":30},\"endBody\":{\"col\":1,\"line\":50}}};\n    \nimport React from \"react\";\nimport { ComponentStory, ComponentMeta } from \"@storybook/react\";\nimport CreditCard from \".\";\nimport styled from \"styled-components\";\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: \"Finance/CreditCards\",\n  component: CreditCard,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    themeColor: {\n      options: [\"green\", \"yellow\", \"red\", \"blue\"],\n      control: { type: \"select\" }, // Automatically inferred when 'options' is defined\n    },\n  },\n} as ComponentMeta<typeof CreditCard>;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: ComponentStory<typeof CreditCard> = (args) => (\n  <CreditCard {...args} />\n);\n\nexport const Default = Template.bind({});;\n\nDefault.args = {\n  currency: \"BTC\",\n};\n\nexport const Stacked = () => {\n  return (\n    <StackedWrapper>\n      <GreenCard>\n        <Template themeColor=\"green\" currency=\"BTC\" />\n      </GreenCard>\n      <YellowCard>\n        <Template themeColor=\"yellow\" />\n      </YellowCard>\n      <RedCard>\n        <Template themeColor=\"red\" />\n      </RedCard>\n      <BlueCard>\n        <Template themeColor=\"blue\" currency=\"USDC\" />\n      </BlueCard>\n      <BlackCard>\n        <Template />\n      </BlackCard>\n    </StackedWrapper>\n  );\n};\n\nconst StackedWrapper = styled.div`\n  position: relative;\n`;\n\nconst GreenCard = styled.div`\n  position: fixed;\n  top: 10px;\n`;\n\nconst YellowCard = styled.div`\n  position: fixed;\n  top: 100px;\n`;\nconst RedCard = styled.div`\n  position: fixed;\n  top: 200px;\n`;\n\nconst BlueCard = styled.div`\n  position: fixed;\n  top: 300px;\n`;\n\nconst BlackCard = styled.div`\n  position: fixed;\n  top: 400px;\n`;\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => (\\n  <CreditCard {...args} />\\n)\" }, ...Default.parameters };\nStacked.parameters = { storySource: { source: \"() => {\\n  return (\\n    <StackedWrapper>\\n      <GreenCard>\\n        <Template themeColor=\\\"green\\\" currency=\\\"BTC\\\" />\\n      </GreenCard>\\n      <YellowCard>\\n        <Template themeColor=\\\"yellow\\\" />\\n      </YellowCard>\\n      <RedCard>\\n        <Template themeColor=\\\"red\\\" />\\n      </RedCard>\\n      <BlueCard>\\n        <Template themeColor=\\\"blue\\\" currency=\\\"USDC\\\" />\\n      </BlueCard>\\n      <BlackCard>\\n        <Template />\\n      </BlackCard>\\n    </StackedWrapper>\\n  );\\n}\" }, ...Stacked.parameters };"],"mappings":"sYACI,qBACA;AACA;AACA,GAAIA,UAAS,CAAG,y3DAAy3D,CACz4D;AACA,GAAIC,kBAAizB,MAAOC,WAAU,KAAM,GAAG,CAC1B,MAAOC,OAAM,KAAM,mBAAmB,CAEtC;AAAA,wFACA,cAAe,CACbC,KAAK,CAAE,qBAAqB,CAC5BC,SAAS,CAAEH,UAAU,CACrB;AACAI,QAAQ,CAAE,CACRC,UAAU,CAAE,CACVC,OAAO,CAAE,CAAC,OAAO,CAAE,QAAQ,CAAE,KAAK,CAAE,MAAM,CAAC,CAC3CC,OAAO,CAAE,CAAEC,IAAI,CAAE,QAAS,CAAG;AAC/B,CACF,CACF,CAAC,CAED;AACA,GAAMC,SAA2C,CAAG,QAA9CA,SAA2C,CAAIC,IAAI,qBACvD,KAAC,UAAU,kBAAKA,IAAI,EAAI,EACzB,CAED,MAAO,IAAMC,QAAO,CAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAEzCD,OAAO,CAACD,IAAI,CAAG,CACbG,QAAQ,CAAE,KACZ,CAAC,CAED,MAAO,IAAMC,QAAO,CAAG,QAAVA,QAAO,EAAS,CAC3B,mBACE,MAAC,cAAc,yBACb,KAAC,SAAS,wBACR,KAAC,QAAQ,EAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAG,EACpC,cACZ,KAAC,UAAU,wBACT,KAAC,QAAQ,EAAC,UAAU,CAAC,QAAQ,EAAG,EACrB,cACb,KAAC,OAAO,wBACN,KAAC,QAAQ,EAAC,UAAU,CAAC,KAAK,EAAG,EACrB,cACV,KAAC,QAAQ,wBACP,KAAC,QAAQ,EAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAG,EACrC,cACX,KAAC,SAAS,wBACR,KAAC,QAAQ,IAAG,EACF,GACG,CAErB,CAAC,CAED,GAAMC,eAAc,CAAGd,MAAM,CAACe,GAAG,0FAEhC,CAED,GAAMC,UAAS,CAAGhB,MAAM,CAACe,GAAG,uGAG3B,CAED,GAAME,WAAU,CAAGjB,MAAM,CAACe,GAAG,wGAG5B,CACD,GAAMG,QAAO,CAAGlB,MAAM,CAACe,GAAG,wGAGzB,CAED,GAAMI,SAAQ,CAAGnB,MAAM,CAACe,GAAG,wGAG1B,CAED,GAAMK,UAAS,CAAGpB,MAAM,CAACe,GAAG,wGAG3B,CAIDL,OAAO,CAACW,UAAU,gBAAKC,WAAW,CAAE,CAAEC,MAAM,CAAE,4CAA6C,CAAC,EAAKb,OAAO,CAACW,UAAU,CAAE,CACrHR,OAAO,CAACQ,UAAU,gBAAKC,WAAW,CAAE,CAAEC,MAAM,CAAE,6eAA8e,CAAC,EAAKV,OAAO,CAACQ,UAAU,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}