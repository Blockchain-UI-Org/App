{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/components/theme/typography/typography.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import { Story } from '@storybook/react';\\nimport { ReactElement } from 'react';\\nimport styled from 'styled-components';\\nimport {\\n  FONT_HEADER_STYLES,\\n  FONT_DISPLAY_STYLES,\\n  FONT_BODY_STYLES,\\n  FontWeightTypes,\\n  FONT_WEIGHTS,\\n  FONT_FAMILY,\\n} from './typography';\\n\\ninterface FontProps {\\n  variant?: Record<string, Record<string, string>>;\\n  'font-weight': FontWeightTypes;\\n  'font-family'?: string;\\n  'font-size'?: string;\\n  'line-height'?: string;\\n}\\nconst StyledFont = styled.p<FontProps>`\\n  font-weight: ${props => (props['font-weight'] ? FONT_WEIGHTS[props['font-weight']] : '')};\\n  font-family: ${FONT_FAMILY};\\n  font-size: ${props => props['font-size']};\\n  line-height: ${props => props['line-height']};\\n`;\\nconst Wrapper = styled.div`\\n  display: flex;\\n  flex-direction: column;\\n`;\\n\\nexport default {\\n  component: Text,\\n  title: 'Themes/Typography',\\n};\\n\\n//@ts-ignore\\nconst generateDisplay = args => {\\n  const display: ReactElement[] = [];\\n  for (const [key, value] of Object.entries(\\n    args.variant as Record<string, Record<string, string>>\\n  )) {\\n    display.push(\\n      <StyledFont {...{ ...value, 'font-weight': args['font-weight'] }}>{key}</StyledFont>\\n    );\\n  }\\n  return display;\\n};\\n\\nconst Template: Story<FontProps> = args => <Wrapper>{generateDisplay(args)}</Wrapper>;\\n\\nexport const Header = Template.bind({});\\n\\nHeader.args = {\\n  variant: FONT_HEADER_STYLES,\\n};\\n\\nHeader.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  'font-weight': {\\n    options: ['regular', 'medium', 'bold'],\\n    control: { type: 'radio' },\\n  },\\n};\\n\\nexport const Display = Template.bind({});\\n\\nDisplay.args = {\\n  variant: FONT_DISPLAY_STYLES,\\n};\\n\\nDisplay.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  'font-weight': {\\n    options: ['regular', 'medium', 'bold'],\\n    control: { type: 'radio' },\\n  },\\n};\\n\\nexport const Body = Template.bind({});\\n\\nBody.args = {\\n  variant: FONT_BODY_STYLES,\\n};\\n\\nBody.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  'font-weight': {\\n    options: ['regular', 'medium', 'bold'],\\n    control: { type: 'radio' },\\n  },\\n};\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Header\": {\n    \"startLoc\": {\n      \"col\": 35,\n      \"line\": 49\n    },\n    \"endLoc\": {\n      \"col\": 85,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 35,\n      \"line\": 49\n    },\n    \"endBody\": {\n      \"col\": 85,\n      \"line\": 49\n    }\n  },\n  \"Display\": {\n    \"startLoc\": {\n      \"col\": 35,\n      \"line\": 49\n    },\n    \"endLoc\": {\n      \"col\": 85,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 35,\n      \"line\": 49\n    },\n    \"endBody\": {\n      \"col\": 85,\n      \"line\": 49\n    }\n  },\n  \"Body\": {\n    \"startLoc\": {\n      \"col\": 35,\n      \"line\": 49\n    },\n    \"endLoc\": {\n      \"col\": 85,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 35,\n      \"line\": 49\n    },\n    \"endBody\": {\n      \"col\": 85,\n      \"line\": 49\n    }\n  }\n};\nimport styled from 'styled-components';\nimport { FONT_HEADER_STYLES, FONT_DISPLAY_STYLES, FONT_BODY_STYLES, FONT_WEIGHTS, FONT_FAMILY } from './typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFont = styled.p`\n  font-weight: ${props => props['font-weight'] ? FONT_WEIGHTS[props['font-weight']] : ''};\n  font-family: ${FONT_FAMILY};\n  font-size: ${props => props['font-size']};\n  line-height: ${props => props['line-height']};\n`;\n_c = StyledFont;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Wrapper;\nexport default {\n  component: Text,\n  title: 'Themes/Typography'\n};\n\n//@ts-ignore\nconst generateDisplay = args => {\n  const display = [];\n  for (const [key, value] of Object.entries(args.variant)) {\n    display.push( /*#__PURE__*/_jsxDEV(StyledFont, {\n      ...value,\n      'font-weight': args['font-weight'],\n      children: key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this));\n  }\n  return display;\n};\nconst Template = args => /*#__PURE__*/_jsxDEV(Wrapper, {\n  children: generateDisplay(args)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 44\n}, this);\n_c3 = Template;\nexport const Header = Template.bind({});\n;\nHeader.args = {\n  variant: FONT_HEADER_STYLES\n};\nHeader.argTypes = {\n  variant: {\n    control: {\n      type: false\n    }\n  },\n  'font-weight': {\n    options: ['regular', 'medium', 'bold'],\n    control: {\n      type: 'radio'\n    }\n  }\n};\nexport const Display = Template.bind({});\n;\nDisplay.args = {\n  variant: FONT_DISPLAY_STYLES\n};\nDisplay.argTypes = {\n  variant: {\n    control: {\n      type: false\n    }\n  },\n  'font-weight': {\n    options: ['regular', 'medium', 'bold'],\n    control: {\n      type: 'radio'\n    }\n  }\n};\nexport const Body = Template.bind({});\nBody.args = {\n  variant: FONT_BODY_STYLES\n};\nBody.argTypes = {\n  variant: {\n    control: {\n      type: false\n    }\n  },\n  'font-weight': {\n    options: ['regular', 'medium', 'bold'],\n    control: {\n      type: 'radio'\n    }\n  }\n};\nHeader.parameters = {\n  storySource: {\n    source: \"args => <Wrapper>{generateDisplay(args)}</Wrapper>\"\n  },\n  ...Header.parameters\n};\nDisplay.parameters = {\n  storySource: {\n    source: \"args => <Wrapper>{generateDisplay(args)}</Wrapper>\"\n  },\n  ...Display.parameters\n};\nBody.parameters = {\n  storySource: {\n    source: \"args => <Wrapper>{generateDisplay(args)}</Wrapper>\"\n  },\n  ...Body.parameters\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledFont\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Template\");\nexport const __namedExportsOrder = [\"Header\", \"Display\", \"Body\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","styled","FONT_HEADER_STYLES","FONT_DISPLAY_STYLES","FONT_BODY_STYLES","FONT_WEIGHTS","FONT_FAMILY","StyledFont","p","props","Wrapper","div","component","Text","title","generateDisplay","args","display","key","value","Object","entries","variant","push","Template","Header","bind","argTypes","control","type","options","Display","Body","parameters","storySource","source"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/components/theme/typography/typography.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Story } from '@storybook/react';\\nimport { ReactElement } from 'react';\\nimport styled from 'styled-components';\\nimport {\\n  FONT_HEADER_STYLES,\\n  FONT_DISPLAY_STYLES,\\n  FONT_BODY_STYLES,\\n  FontWeightTypes,\\n  FONT_WEIGHTS,\\n  FONT_FAMILY,\\n} from './typography';\\n\\ninterface FontProps {\\n  variant?: Record<string, Record<string, string>>;\\n  'font-weight': FontWeightTypes;\\n  'font-family'?: string;\\n  'font-size'?: string;\\n  'line-height'?: string;\\n}\\nconst StyledFont = styled.p<FontProps>`\\n  font-weight: ${props => (props['font-weight'] ? FONT_WEIGHTS[props['font-weight']] : '')};\\n  font-family: ${FONT_FAMILY};\\n  font-size: ${props => props['font-size']};\\n  line-height: ${props => props['line-height']};\\n`;\\nconst Wrapper = styled.div`\\n  display: flex;\\n  flex-direction: column;\\n`;\\n\\nexport default {\\n  component: Text,\\n  title: 'Themes/Typography',\\n};\\n\\n//@ts-ignore\\nconst generateDisplay = args => {\\n  const display: ReactElement[] = [];\\n  for (const [key, value] of Object.entries(\\n    args.variant as Record<string, Record<string, string>>\\n  )) {\\n    display.push(\\n      <StyledFont {...{ ...value, 'font-weight': args['font-weight'] }}>{key}</StyledFont>\\n    );\\n  }\\n  return display;\\n};\\n\\nconst Template: Story<FontProps> = args => <Wrapper>{generateDisplay(args)}</Wrapper>;\\n\\nexport const Header = Template.bind({});\\n\\nHeader.args = {\\n  variant: FONT_HEADER_STYLES,\\n};\\n\\nHeader.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  'font-weight': {\\n    options: ['regular', 'medium', 'bold'],\\n    control: { type: 'radio' },\\n  },\\n};\\n\\nexport const Display = Template.bind({});\\n\\nDisplay.args = {\\n  variant: FONT_DISPLAY_STYLES,\\n};\\n\\nDisplay.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  'font-weight': {\\n    options: ['regular', 'medium', 'bold'],\\n    control: { type: 'radio' },\\n  },\\n};\\n\\nexport const Body = Template.bind({});\\n\\nBody.args = {\\n  variant: FONT_BODY_STYLES,\\n};\\n\\nBody.argTypes = {\\n  variant: {\\n    control: { type: false },\\n  },\\n  'font-weight': {\\n    options: ['regular', 'medium', 'bold'],\\n    control: { type: 'radio' },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Header\":{\"startLoc\":{\"col\":35,\"line\":49},\"endLoc\":{\"col\":85,\"line\":49},\"startBody\":{\"col\":35,\"line\":49},\"endBody\":{\"col\":85,\"line\":49}},\"Display\":{\"startLoc\":{\"col\":35,\"line\":49},\"endLoc\":{\"col\":85,\"line\":49},\"startBody\":{\"col\":35,\"line\":49},\"endBody\":{\"col\":85,\"line\":49}},\"Body\":{\"startLoc\":{\"col\":35,\"line\":49},\"endLoc\":{\"col\":85,\"line\":49},\"startBody\":{\"col\":35,\"line\":49},\"endBody\":{\"col\":85,\"line\":49}}};\n    \nimport { Story } from '@storybook/react';\nimport { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport {\n  FONT_HEADER_STYLES,\n  FONT_DISPLAY_STYLES,\n  FONT_BODY_STYLES,\n  FontWeightTypes,\n  FONT_WEIGHTS,\n  FONT_FAMILY,\n} from './typography';\n\ninterface FontProps {\n  variant?: Record<string, Record<string, string>>;\n  'font-weight': FontWeightTypes;\n  'font-family'?: string;\n  'font-size'?: string;\n  'line-height'?: string;\n}\nconst StyledFont = styled.p<FontProps>`\n  font-weight: ${props => (props['font-weight'] ? FONT_WEIGHTS[props['font-weight']] : '')};\n  font-family: ${FONT_FAMILY};\n  font-size: ${props => props['font-size']};\n  line-height: ${props => props['line-height']};\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default {\n  component: Text,\n  title: 'Themes/Typography',\n};\n\n//@ts-ignore\nconst generateDisplay = args => {\n  const display: ReactElement[] = [];\n  for (const [key, value] of Object.entries(\n    args.variant as Record<string, Record<string, string>>\n  )) {\n    display.push(\n      <StyledFont {...{ ...value, 'font-weight': args['font-weight'] }}>{key}</StyledFont>\n    );\n  }\n  return display;\n};\n\nconst Template: Story<FontProps> = args => <Wrapper>{generateDisplay(args)}</Wrapper>;\n\nexport const Header = Template.bind({});;\n\nHeader.args = {\n  variant: FONT_HEADER_STYLES,\n};\n\nHeader.argTypes = {\n  variant: {\n    control: { type: false },\n  },\n  'font-weight': {\n    options: ['regular', 'medium', 'bold'],\n    control: { type: 'radio' },\n  },\n};\n\nexport const Display = Template.bind({});;\n\nDisplay.args = {\n  variant: FONT_DISPLAY_STYLES,\n};\n\nDisplay.argTypes = {\n  variant: {\n    control: { type: false },\n  },\n  'font-weight': {\n    options: ['regular', 'medium', 'bold'],\n    control: { type: 'radio' },\n  },\n};\n\nexport const Body = Template.bind({});\n\nBody.args = {\n  variant: FONT_BODY_STYLES,\n};\n\nBody.argTypes = {\n  variant: {\n    control: { type: false },\n  },\n  'font-weight': {\n    options: ['regular', 'medium', 'bold'],\n    control: { type: 'radio' },\n  },\n};\n\n\n\nHeader.parameters = { storySource: { source: \"args => <Wrapper>{generateDisplay(args)}</Wrapper>\" }, ...Header.parameters };\nDisplay.parameters = { storySource: { source: \"args => <Wrapper>{generateDisplay(args)}</Wrapper>\" }, ...Display.parameters };\nBody.parameters = { storySource: { source: \"args => <Wrapper>{generateDisplay(args)}</Wrapper>\" }, ...Body.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}