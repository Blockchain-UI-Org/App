{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/baseWeb/overrides/button.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { StyledLoader } from \"./buttonLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KIND = {\n  contained: \"contained\",\n  outlined: \"outlined\",\n  text: \"text\"\n};\nconst buttonVariants = {\n  brand: \"brand\",\n  positive: \"positive\",\n  negative: \"negative\",\n  neutral: \"neutral\",\n  warning: \"warning\",\n  decorative: \"decorative\"\n};\nconst buttonSizes = $theme => {\n  const {\n    scale300,\n    scale500,\n    scale550,\n    scale600,\n    scale650,\n    scale800,\n    scale900,\n    scale1000,\n    scale1200,\n    scale1400\n  } = $theme.sizing;\n  return {\n    mini: {\n      fontSize: scale500,\n      height: scale900,\n      padding: `0 ${scale300}`\n    },\n    compact: {\n      fontSize: scale550,\n      height: scale1000,\n      padding: `0 ${scale600}`\n    },\n    default: {\n      fontSize: scale600,\n      height: scale1200,\n      padding: `0 ${scale800}`\n    },\n    large: {\n      fontSize: scale650,\n      height: scale1400,\n      padding: `0 ${scale900}`\n    }\n  };\n};\nconst buttonOverrides = function ($theme) {\n  let block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : KIND.contained;\n  let variant = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : buttonVariants.brand;\n  const isContained = kind === KIND.contained;\n  const {\n    colors,\n    animation,\n    sizing\n  } = $theme;\n  const {\n    disabledBackground,\n    disabledBackgroundContained,\n    disabledBorder,\n    disabledTextContained,\n    disabledText,\n    ...rest\n  } = colors.button;\n  const {\n    scale100,\n    scale300\n  } = sizing;\n  const {\n    activeBackground,\n    background,\n    focus,\n    hoverBackground,\n    hoverText,\n    loadingLeft,\n    loadingMiddle,\n    loadingRight,\n    ...buttonVariant\n  } = rest[variant || buttonVariants.brand];\n  const {\n    border,\n    text\n  } = buttonVariant[kind || KIND.contained];\n  return {\n    BaseButton: {\n      style: _ref => {\n        var _buttonSizes;\n        let {\n          $disabled,\n          $size\n        } = _ref;\n        return {\n          ...$theme.borders.borderWidth100,\n          color: text,\n          backgroundColor: isContained ? background : \"transparent\",\n          borderColor: kind === KIND.text ? \"transparent\" : border,\n          fontFamily: \"Public Sans\",\n          fontWeight: 600,\n          transitionDuration: `${animation.timing200}`,\n          transitionTimingFunction: \"ease, ease\",\n          width: block ? \"100%\" : \"auto\",\n          //@ts-ignore\n          ...((_buttonSizes = buttonSizes($theme)) === null || _buttonSizes === void 0 ? void 0 : _buttonSizes[$size]),\n          \":active\": {\n            ...($disabled ? {} : {\n              backgroundColor: activeBackground,\n              color: hoverText\n            })\n          },\n          ...($disabled ? {} : {\n            \":hover\": {\n              backgroundColor: hoverBackground,\n              borderColor: hoverBackground,\n              color: hoverText\n            },\n            \":focus\": {\n              boxShadow: \"none\",\n              outline: \"solid\",\n              borderColor: focus,\n              outlineColor: focus,\n              outlineWidth: scale100\n            }\n          }),\n          \":disabled\": {\n            backgroundColor: isContained ? disabledBackgroundContained : disabledBackground,\n            borderColor: disabledBorder[kind],\n            color: isContained ? disabledTextContained : disabledText\n          }\n        };\n      }\n    },\n    StartEnhancer: {\n      style: _ref2 => {\n        let {\n          $size\n        } = _ref2;\n        return {\n          marginRight: $size === \"compact\" || $size === \"mini\" ? scale100 : scale300\n        };\n      }\n    },\n    EndEnhancer: {\n      style: _ref3 => {\n        let {\n          $size\n        } = _ref3;\n        return {\n          marginLeft: $size === \"compact\" || $size === \"mini\" ? scale100 : scale300\n        };\n      }\n    },\n    LoadingSpinner: {\n      component: () => /*#__PURE__*/_jsxDEV(StyledLoader, {\n        leftColor: loadingLeft,\n        middleColor: loadingMiddle,\n        rightColor: loadingRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, _this)\n    }\n  };\n};\nexport { buttonOverrides };","map":{"version":3,"names":["React","StyledLoader","KIND","contained","outlined","text","buttonVariants","brand","positive","negative","neutral","warning","decorative","buttonSizes","$theme","scale300","scale500","scale550","scale600","scale650","scale800","scale900","scale1000","scale1200","scale1400","sizing","mini","fontSize","height","padding","compact","default","large","buttonOverrides","block","kind","variant","isContained","colors","animation","disabledBackground","disabledBackgroundContained","disabledBorder","disabledTextContained","disabledText","rest","button","scale100","activeBackground","background","focus","hoverBackground","hoverText","loadingLeft","loadingMiddle","loadingRight","buttonVariant","border","BaseButton","style","$disabled","$size","borders","borderWidth100","color","backgroundColor","borderColor","fontFamily","fontWeight","transitionDuration","timing200","transitionTimingFunction","width","boxShadow","outline","outlineColor","outlineWidth","StartEnhancer","marginRight","EndEnhancer","marginLeft","LoadingSpinner","component"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/Components/baseWeb/overrides/button.tsx"],"sourcesContent":["import React from \"react\";\nimport { ButtonOverrides, SIZE } from \"baseui/button\";\nimport { StyleObject } from \"styletron-react\";\nimport { Theme } from \"../\";\nimport { StyledLoader } from \"./buttonLoader\";\n\ntype ButtonVariants =\n  | \"brand\"\n  | \"positive\"\n  | \"negative\"\n  | \"neutral\"\n  | \"warning\"\n  | \"decorative\";\n\nconst KIND = {\n  contained: \"contained\",\n  outlined: \"outlined\",\n  text: \"text\",\n};\n\ninterface StyleProps {\n  $disabled: boolean;\n  //@ts-ignore\n  $size: SIZE[keyof SIZE];\n  variant: ButtonVariants;\n}\n\nconst buttonVariants = {\n  brand: \"brand\",\n  positive: \"positive\",\n  negative: \"negative\",\n  neutral: \"neutral\",\n  warning: \"warning\",\n  decorative: \"decorative\",\n};\n\nconst buttonSizes = ($theme: Theme) => {\n  const {\n    scale300,\n    scale500,\n    scale550,\n    scale600,\n    scale650,\n    scale800,\n    scale900,\n    scale1000,\n    scale1200,\n    scale1400,\n  } = $theme.sizing;\n  return {\n    mini: {\n      fontSize: scale500,\n      height: scale900,\n      padding: `0 ${scale300}`,\n    },\n    compact: {\n      fontSize: scale550,\n      height: scale1000,\n      padding: `0 ${scale600}`,\n    },\n    default: {\n      fontSize: scale600,\n      height: scale1200,\n      padding: `0 ${scale800}`,\n    },\n    large: {\n      fontSize: scale650,\n      height: scale1400,\n      padding: `0 ${scale900}`,\n    },\n  };\n};\n\nconst buttonOverrides = (\n  $theme: Theme,\n  block = false,\n  kind = KIND.contained,\n  variant = buttonVariants.brand\n): ButtonOverrides => {\n  const isContained = kind === KIND.contained;\n  const { colors, animation, sizing } = $theme;\n  const {\n    disabledBackground,\n    disabledBackgroundContained,\n    disabledBorder,\n    disabledTextContained,\n    disabledText,\n    ...rest\n  } = colors.button;\n  const { scale100, scale300 } = sizing;\n\n  const {\n    activeBackground,\n    background,\n    focus,\n    hoverBackground,\n    hoverText,\n    loadingLeft,\n    loadingMiddle,\n    loadingRight,\n    ...buttonVariant\n  } = rest[variant || buttonVariants.brand];\n\n  const { border, text } = buttonVariant[kind || KIND.contained];\n\n  return {\n    BaseButton: {\n      style: ({ $disabled, $size }: StyleProps): StyleObject => ({\n        ...$theme.borders.borderWidth100,\n        color: text,\n        backgroundColor: isContained ? background : \"transparent\",\n        borderColor: kind === KIND.text ? \"transparent\" : border,\n        fontFamily: \"Public Sans\",\n        fontWeight: 600,\n        transitionDuration: `${animation.timing200}`,\n        transitionTimingFunction: \"ease, ease\",\n        width: block ? \"100%\" : \"auto\",\n        //@ts-ignore\n        ...buttonSizes($theme)?.[$size],\n        \":active\": {\n          ...($disabled\n            ? {}\n            : {\n                backgroundColor: activeBackground,\n                color: hoverText,\n              }),\n        },\n        ...($disabled\n          ? {}\n          : {\n              \":hover\": {\n                backgroundColor: hoverBackground,\n                borderColor: hoverBackground,\n                color: hoverText,\n              },\n              \":focus\": {\n                boxShadow: \"none\",\n                outline: \"solid\",\n                borderColor: focus,\n                outlineColor: focus,\n                outlineWidth: scale100,\n              },\n            }),\n        \":disabled\": {\n          backgroundColor: isContained\n            ? disabledBackgroundContained\n            : disabledBackground,\n          borderColor: disabledBorder[kind],\n          color: isContained ? disabledTextContained : disabledText,\n        },\n      }),\n    },\n    StartEnhancer: {\n      style: ({ $size }: StyleProps): StyleObject => ({\n        marginRight:\n          $size === \"compact\" || $size === \"mini\" ? scale100 : scale300,\n      }),\n    },\n    EndEnhancer: {\n      style: ({ $size }: StyleProps): StyleObject => ({\n        marginLeft:\n          $size === \"compact\" || $size === \"mini\" ? scale100 : scale300,\n      }),\n    },\n    LoadingSpinner: {\n      component: () => (\n        <StyledLoader\n          leftColor={loadingLeft}\n          middleColor={loadingMiddle}\n          rightColor={loadingRight}\n        />\n      ),\n    },\n  };\n};\n\nexport { buttonOverrides };  export type { ButtonVariants };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}