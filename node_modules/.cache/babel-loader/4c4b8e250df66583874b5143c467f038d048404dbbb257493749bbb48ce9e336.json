{"ast":null,"code":"import styled from 'styled-components';\nexport const FONT_FAMILY = 'DM Sans, sans-serif';\nexport const FONT_WEIGHTS = {\n  regular: 400,\n  medium: 500,\n  bold: 700\n};\nexport const FONT_DISPLAY_STYLES = {\n  Display1: {\n    'font-size': '48px',\n    'line-height': '62px'\n  },\n  Display2: {\n    'font-size': '36px',\n    'line-height': '48px'\n  }\n};\nexport const FONT_HEADER_STYLES = {\n  H1: {\n    'font-size': '32px',\n    'line-height': '48px'\n  },\n  H2: {\n    'font-size': '24px',\n    'line-height': '36px'\n  },\n  H3: {\n    'font-size': '20px',\n    'line-height': '30px'\n  },\n  H4: {\n    'font-size': '18px',\n    lineHeight: '28px'\n  },\n  H5: {\n    'font-size': '16px',\n    'line-height': '24px'\n  },\n  H6: {\n    'font-size': '14px',\n    'line-height': '20px'\n  }\n};\nexport const FONT_BODY_STYLES = {\n  Body1: {\n    'font-size': '16px',\n    'line-height': '24px'\n  },\n  Body2: {\n    'font-size': '14px',\n    'line-height': '20px'\n  }\n};\n//@ts-ignore\nconst generateFontType = (fontType, fontWeight) => {\n  const newObj = {};\n  for (const [key] of Object.entries(fontType)) {\n    newObj[key] = {\n      ...fontType[key],\n      'font-weight': fontWeight,\n      'font-family': FONT_FAMILY\n    };\n  }\n  return newObj;\n};\n//@ts-ignore\nconst generateComponent = fontType => {\n  const newObj = {};\n  for (const [key] of Object.entries(fontType)) {\n    const StyledParagraph = styled.p`\n      margin: 0;\n      ${fontType[key]}\n    `;\n    newObj[key] = StyledParagraph;\n  }\n  return newObj;\n};\nconst tStyles = {\n  display: {\n    regular: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS['regular']),\n    medium: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS['medium']),\n    bold: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS['bold'])\n  },\n  header: {\n    regular: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS['regular']),\n    medium: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS['medium']),\n    bold: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS['bold'])\n  },\n  body: {\n    regular: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS['regular']),\n    medium: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS['medium']),\n    bold: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS['bold'])\n  },\n  FONT_FAMILY,\n  FONT_WEIGHTS\n};\nconst tComponents = {\n  display: {\n    regular: generateComponent(tStyles.display.regular),\n    medium: generateComponent(tStyles.display.medium),\n    bold: generateComponent(tStyles.display.bold)\n  },\n  header: {\n    regular: generateComponent(tStyles.header.regular),\n    medium: generateComponent(tStyles.header.medium),\n    bold: generateComponent(tStyles.header.regular)\n  },\n  body: {\n    regular: generateComponent(tStyles.body.regular),\n    medium: generateComponent(tStyles.body.medium),\n    bold: generateComponent(tStyles.body.bold)\n  }\n};\nconst typography = {\n  components: tComponents,\n  styles: tStyles,\n  FONT_FAMILY: FONT_FAMILY,\n  FONT_HEADER_STYLES: FONT_HEADER_STYLES,\n  FONT_BODY_STYLES: FONT_BODY_STYLES,\n  FONT_DISPLAY_STYLES: FONT_DISPLAY_STYLES\n};\nexport default typography;","map":{"version":3,"names":["styled","FONT_FAMILY","FONT_WEIGHTS","regular","medium","bold","FONT_DISPLAY_STYLES","Display1","Display2","FONT_HEADER_STYLES","H1","H2","H3","H4","lineHeight","H5","H6","FONT_BODY_STYLES","Body1","Body2","generateFontType","fontType","fontWeight","newObj","key","Object","entries","generateComponent","StyledParagraph","p","tStyles","display","header","body","tComponents","typography","components","styles"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/theme/typography/typography.ts"],"sourcesContent":["import styled, { AnyStyledComponent } from 'styled-components';\n\nexport const FONT_FAMILY = 'DM Sans, sans-serif';\n\nexport type FontWeightTypes = 'regular' | 'medium' | 'bold';\n\nexport type FontTypes = 'display' | 'body' | 'header';\n\nexport const FONT_WEIGHTS: Record<FontWeightTypes, number> = {\n  regular: 400,\n  medium: 500,\n  bold: 700,\n};\n\nexport const FONT_DISPLAY_STYLES: Record<string, Record<string, string>> = {\n  Display1: {\n    'font-size': '48px',\n    'line-height': '62px',\n  },\n  Display2: {\n    'font-size': '36px',\n    'line-height': '48px',\n  },\n};\n\nexport const FONT_HEADER_STYLES = {\n  H1: {\n    'font-size': '32px',\n    'line-height': '48px',\n  },\n  H2: {\n    'font-size': '24px',\n    'line-height': '36px',\n  },\n  H3: {\n    'font-size': '20px',\n    'line-height': '30px',\n  },\n  H4: {\n    'font-size': '18px',\n    lineHeight: '28px',\n  },\n  H5: {\n    'font-size': '16px',\n    'line-height': '24px',\n  },\n  H6: {\n    'font-size': '14px',\n    'line-height': '20px',\n  },\n};\n\nexport const FONT_BODY_STYLES = {\n  Body1: {\n    'font-size': '16px',\n    'line-height': '24px',\n  },\n  Body2: {\n    'font-size': '14px',\n    'line-height': '20px',\n  },\n};\n//@ts-ignore\nconst generateFontType = (fontType, fontWeight) => {\n  const newObj: Record<string, string> = {};\n  for (const [key] of Object.entries(fontType)) {\n    newObj[key] = {\n      ...fontType[key],\n      'font-weight': fontWeight,\n      'font-family': FONT_FAMILY,\n    };\n  }\n  return newObj;\n};\n//@ts-ignore\nconst generateComponent = fontType => {\n  const newObj: Record<string, AnyStyledComponent> = {};\n  for (const [key] of Object.entries(fontType)) {\n    const StyledParagraph = styled.p`\n      margin: 0;\n      ${fontType[key]}\n    `;\n    newObj[key] = StyledParagraph;\n  }\n  return newObj;\n};\n\nconst tStyles = {\n  display: {\n    regular: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS['regular']),\n    medium: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS['medium']),\n    bold: generateFontType(FONT_DISPLAY_STYLES, FONT_WEIGHTS['bold']),\n  },\n  header: {\n    regular: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS['regular']),\n    medium: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS['medium']),\n    bold: generateFontType(FONT_HEADER_STYLES, FONT_WEIGHTS['bold']),\n  },\n  body: {\n    regular: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS['regular']),\n    medium: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS['medium']),\n    bold: generateFontType(FONT_BODY_STYLES, FONT_WEIGHTS['bold']),\n  },\n\n  FONT_FAMILY,\n  FONT_WEIGHTS,\n};\n\nconst tComponents = {\n  display: {\n    regular: generateComponent(tStyles.display.regular),\n    medium: generateComponent(tStyles.display.medium),\n    bold: generateComponent(tStyles.display.bold),\n  },\n  header: {\n    regular: generateComponent(tStyles.header.regular),\n    medium: generateComponent(tStyles.header.medium),\n    bold: generateComponent(tStyles.header.regular),\n  },\n  body: {\n    regular: generateComponent(tStyles.body.regular),\n    medium: generateComponent(tStyles.body.medium),\n    bold: generateComponent(tStyles.body.bold),\n  },\n};\nconst typography = {\n  components: tComponents,\n  styles: tStyles,\n  FONT_FAMILY: FONT_FAMILY,\n  FONT_HEADER_STYLES: FONT_HEADER_STYLES,\n  FONT_BODY_STYLES: FONT_BODY_STYLES,\n  FONT_DISPLAY_STYLES: FONT_DISPLAY_STYLES,\n};\nexport default typography;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}