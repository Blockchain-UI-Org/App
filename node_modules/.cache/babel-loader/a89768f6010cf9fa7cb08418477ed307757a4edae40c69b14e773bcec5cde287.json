{"ast":null,"code":"var _jsxFileName = \"/Users/christopherigbojekwe/Documents/work/web3ui/src/components/tag/tag.tsx\";\nimport styled from 'styled-components';\nimport { theme } from '../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  blue100,\n  success100,\n  yellow100,\n  error100,\n  black,\n  success500,\n  warning500,\n  error500\n} = theme.colors;\nconst BackgroundColor = {\n  neutral: blue100,\n  positive: success100,\n  warning: yellow100,\n  error: error100\n};\nconst TextColor = {\n  neutral: black,\n  positive: success500,\n  warning: warning500,\n  error: error500\n};\nconst Padding = {\n  small: '2px 12px',\n  large: '4px 16px'\n};\nconst FontSize = {\n  small: '14px',\n  large: '16px'\n};\nconst LineHeight = {\n  small: '20px',\n  large: '24px'\n};\nexport const Tag = _ref => {\n  let {\n    type,\n    size,\n    children,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TagWrapper, {\n    type: type,\n    size: size,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Span, {\n      size: size,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = Tag;\nconst TagWrapper = styled.span`\n  background: ${_ref2 => {\n  let {\n    type\n  } = _ref2;\n  return BackgroundColor[type];\n}};\n  color: ${_ref3 => {\n  let {\n    type\n  } = _ref3;\n  return TextColor[type];\n}};\n  border-radius: 39px;\n  padding: ${_ref4 => {\n  let {\n    size\n  } = _ref4;\n  return Padding[size];\n}};\n  height: 1.5rem;\n`;\n_c2 = TagWrapper;\nconst Span = styled.span`\n  font-weight: 700;\n  font-style: normal;\n  font-size: ${_ref5 => {\n  let {\n    size\n  } = _ref5;\n  return FontSize[size];\n}};\n  line-height: ${_ref6 => {\n  let {\n    size\n  } = _ref6;\n  return LineHeight[size];\n}};\n`;\n_c3 = Span;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Tag\");\n$RefreshReg$(_c2, \"TagWrapper\");\n$RefreshReg$(_c3, \"Span\");","map":{"version":3,"names":["styled","theme","blue100","success100","yellow100","error100","black","success500","warning500","error500","colors","BackgroundColor","neutral","positive","warning","error","TextColor","Padding","small","large","FontSize","LineHeight","Tag","type","size","children","props","TagWrapper","span","Span"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/components/tag/tag.tsx"],"sourcesContent":["import { FC } from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../theme';\nconst { blue100, success100, yellow100, error100, black, success500, warning500, error500 } =\n  theme.colors;\n\ntype TagType = 'neutral' | 'positive' | 'warning' | 'error';\n\nconst BackgroundColor: { [key in TagType]: string } = {\n  neutral: blue100,\n  positive: success100,\n  warning: yellow100,\n  error: error100,\n};\n\nconst TextColor: { [key in TagType]: string } = {\n  neutral: black,\n  positive: success500,\n  warning: warning500,\n  error: error500,\n};\n\ntype TagSize = 'small' | 'large';\n\nconst Padding: { [key in TagSize]: string } = {\n  small: '2px 12px',\n  large: '4px 16px',\n};\n\nconst FontSize: { [key in TagSize]: string } = {\n  small: '14px',\n  large: '16px',\n};\n\nconst LineHeight: { [key in TagSize]: string } = {\n  small: '20px',\n  large: '24px',\n};\n\nexport interface TagProps extends React.HTMLAttributes<HTMLSpanElement> {\n  type: TagType;\n  size: TagSize;\n}\n\nexport const Tag: FC<TagProps> = ({ type, size, children, ...props }) => {\n  return (\n    <TagWrapper type={type} size={size} {...props}>\n      <Span size={size}>{children}</Span>\n    </TagWrapper>\n  );\n};\n\nconst TagWrapper = styled.span<{ type: TagType; size: TagSize }>`\n  background: ${({ type }) => BackgroundColor[type]};\n  color: ${({ type }) => TextColor[type]};\n  border-radius: 39px;\n  padding: ${({ size }) => Padding[size]};\n  height: 1.5rem;\n`;\n\nconst Span = styled.span<{ size: TagSize }>`\n  font-weight: 700;\n  font-style: normal;\n  font-size: ${({ size }) => FontSize[size]};\n  line-height: ${({ size }) => LineHeight[size]};\n`;\n"],"mappings":";AACA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,UAAU;AAAC;AACjC,MAAM;EAAEC,OAAO;EAAEC,UAAU;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAS,CAAC,GACzFR,KAAK,CAACS,MAAM;AAId,MAAMC,eAA6C,GAAG;EACpDC,OAAO,EAAEV,OAAO;EAChBW,QAAQ,EAAEV,UAAU;EACpBW,OAAO,EAAEV,SAAS;EAClBW,KAAK,EAAEV;AACT,CAAC;AAED,MAAMW,SAAuC,GAAG;EAC9CJ,OAAO,EAAEN,KAAK;EACdO,QAAQ,EAAEN,UAAU;EACpBO,OAAO,EAAEN,UAAU;EACnBO,KAAK,EAAEN;AACT,CAAC;AAID,MAAMQ,OAAqC,GAAG;EAC5CC,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,QAAsC,GAAG;EAC7CF,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAME,UAAwC,GAAG;EAC/CH,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE;AACT,CAAC;AAOD,OAAO,MAAMG,GAAiB,GAAG,QAAwC;EAAA,IAAvC;IAAEC,IAAI;IAAEC,IAAI;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAC;EAClE,oBACE,QAAC,UAAU;IAAC,IAAI,EAAEH,IAAK;IAAC,IAAI,EAAEC,IAAK;IAAA,GAAKE,KAAK;IAAA,uBAC3C,QAAC,IAAI;MAAC,IAAI,EAAEF,IAAK;MAAA,UAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAQ;IAAA;IAAA;IAAA;EAAA,QACxB;AAEjB,CAAC;AAAC,KANWH,GAAiB;AAQ9B,MAAMK,UAAU,GAAG3B,MAAM,CAAC4B,IAAuC;AACjE,gBAAgB;EAAA,IAAC;IAAEL;EAAK,CAAC;EAAA,OAAKZ,eAAe,CAACY,IAAI,CAAC;AAAA,CAAC;AACpD,WAAW;EAAA,IAAC;IAAEA;EAAK,CAAC;EAAA,OAAKP,SAAS,CAACO,IAAI,CAAC;AAAA,CAAC;AACzC;AACA,aAAa;EAAA,IAAC;IAAEC;EAAK,CAAC;EAAA,OAAKP,OAAO,CAACO,IAAI,CAAC;AAAA,CAAC;AACzC;AACA,CAAC;AAAC,MANIG,UAAU;AAQhB,MAAME,IAAI,GAAG7B,MAAM,CAAC4B,IAAwB;AAC5C;AACA;AACA,eAAe;EAAA,IAAC;IAAEJ;EAAK,CAAC;EAAA,OAAKJ,QAAQ,CAACI,IAAI,CAAC;AAAA,CAAC;AAC5C,iBAAiB;EAAA,IAAC;IAAEA;EAAK,CAAC;EAAA,OAAKH,UAAU,CAACG,IAAI,CAAC;AAAA,CAAC;AAChD,CAAC;AAAC,MALIK,IAAI;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}