{"ast":null,"code":"import colors from './colors';\nimport { css } from '@emotion/react';\nexport const fonts = {\n  body: 'proxima-nova, sans-serif',\n  heading: 'degular-display, sans-serif',\n  serif: 'glysa, serif',\n  monospace: 'Menlo, monospace'\n};\nexport const fontSizes = [0.625, 0.75, 0.875, 1, 1.125, 1.438, 2, 2.188, 3.25].map(n => n + 'rem');\nexport const fontWeights = {\n  body: 400,\n  heading: 500,\n  bold: 700\n};\nexport const lineHeights = {\n  body: '1.125rem',\n  heading: '2.625rem'\n};\nconst text = {\n  default: {\n    fontFamily: 'body',\n    fontWeight: 'body',\n    fontSize: 3,\n    lineHeight: lineHeights.body\n  },\n  h0Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 8,\n    lineHeight: '4.25rem'\n  },\n  h0Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 8,\n    lineHeight: '4.25rem'\n  },\n  h1Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 7,\n    lineHeight: '3.25rem'\n  },\n  h1PrimaryWhite: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 7,\n    lineHeight: '3.25rem',\n    color: colors.white\n  },\n  h1PrimaryWhiteCharts: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    color: colors.white,\n    lineHeight: ['initial', 'heading'],\n    fontSize: [3, 5, 7]\n  },\n  h1Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 7,\n    lineHeight: '3.25rem'\n  },\n  h2Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 6,\n    lineHeight: '2.375rem'\n  },\n  h2Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 6,\n    lineHeight: '2.375rem'\n  },\n  h2Tertiary: {\n    fontFamily: 'heading',\n    fontWeight: 'heading',\n    fontSize: 6,\n    lineHeight: '2.625rem'\n  },\n  h3Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 5,\n    lineHeight: '1.75rem'\n  },\n  h3Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 5,\n    lineHeight: '1.75rem'\n  },\n  xLarge: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 4,\n    lineHeight: '1.5rem'\n  },\n  large: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 3,\n    lineHeight: '1.375rem'\n  },\n  largeHeading: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 3,\n    lineHeight: '1.375rem'\n  },\n  largeWhite: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 3,\n    lineHeight: '1.375rem',\n    color: colors.white\n  },\n  largeWhiteCharts: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    lineHeight: '1.375rem',\n    color: colors.white,\n    display: 'block',\n    fontSize: [1, 3]\n  },\n  medium: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 2,\n    lineHeight: '1.25rem'\n  },\n  small: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 1,\n    lineHeight: '1.25rem'\n  },\n  xSmall: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 0,\n    lineHeight: '0.875rem'\n  }\n};\nexport const overflowEllipsis = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport default text;","map":{"version":3,"names":["colors","css","fonts","body","heading","serif","monospace","fontSizes","map","n","fontWeights","bold","lineHeights","text","default","fontFamily","fontWeight","fontSize","lineHeight","h0Primary","h0Secondary","h1Primary","h1PrimaryWhite","color","white","h1PrimaryWhiteCharts","h1Secondary","h2Primary","h2Secondary","h2Tertiary","h3Primary","h3Secondary","xLarge","large","largeHeading","largeWhite","largeWhiteCharts","display","medium","small","xSmall","overflowEllipsis"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/components/Upshot/themes/UpshotUI/text.ts"],"sourcesContent":["import colors from './colors'\nimport { css } from '@emotion/react'\n\nexport const fonts = {\n  body: 'proxima-nova, sans-serif',\n  heading: 'degular-display, sans-serif',\n  serif: 'glysa, serif',\n  monospace: 'Menlo, monospace',\n}\n\nexport const fontSizes = [\n  0.625, 0.75, 0.875, 1, 1.125, 1.438, 2, 2.188, 3.25,\n].map((n) => n + 'rem')\n\nexport const fontWeights = {\n  body: 400,\n  heading: 500,\n  bold: 700,\n}\n\nexport const lineHeights = {\n  body: '1.125rem',\n  heading: '2.625rem',\n}\n\nconst text = {\n  default: {\n    fontFamily: 'body',\n    fontWeight: 'body',\n    fontSize: 3,\n    lineHeight: lineHeights.body,\n  },\n  h0Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 8,\n    lineHeight: '4.25rem',\n  },\n  h0Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 8,\n    lineHeight: '4.25rem',\n  },\n  h1Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 7,\n    lineHeight: '3.25rem',\n  },\n  h1PrimaryWhite: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 7,\n    lineHeight: '3.25rem',\n    color: colors.white,\n  },\n  h1PrimaryWhiteCharts: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    color: colors.white,\n    lineHeight: ['initial', 'heading'],\n    fontSize: [3, 5, 7],\n  },\n  h1Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 7,\n    lineHeight: '3.25rem',\n  },\n  h2Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 6,\n    lineHeight: '2.375rem',\n  },\n  h2Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 6,\n    lineHeight: '2.375rem',\n  },\n  h2Tertiary: {\n    fontFamily: 'heading',\n    fontWeight: 'heading',\n    fontSize: 6,\n    lineHeight: '2.625rem',\n  },\n  h3Primary: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 5,\n    lineHeight: '1.75rem',\n  },\n  h3Secondary: {\n    fontFamily: 'heading',\n    fontWeight: 'bold',\n    fontSize: 5,\n    lineHeight: '1.75rem',\n  },\n  xLarge: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 4,\n    lineHeight: '1.5rem',\n  },\n  large: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 3,\n    lineHeight: '1.375rem',\n  },\n  largeHeading: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 3,\n    lineHeight: '1.375rem',\n  },\n  largeWhite: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    fontSize: 3,\n    lineHeight: '1.375rem',\n    color: colors.white,\n  },\n  largeWhiteCharts: {\n    fontFamily: 'body',\n    fontWeight: 'bold',\n    lineHeight: '1.375rem',\n    color: colors.white,\n    display: 'block',\n    fontSize: [1, 3],\n  },\n  medium: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 2,\n    lineHeight: '1.25rem',\n  },\n  small: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 1,\n    lineHeight: '1.25rem',\n  },\n  xSmall: {\n    fontFamily: 'body',\n    fontWeight: 'heading',\n    fontSize: 0,\n    lineHeight: '0.875rem',\n  },\n}\n\nexport const overflowEllipsis = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default text\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}