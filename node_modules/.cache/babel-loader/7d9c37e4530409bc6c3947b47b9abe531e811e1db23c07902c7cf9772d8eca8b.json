{"ast":null,"code":"import _mock from './_mock';\nimport { randomInArray } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _carouselsExample = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  description: _mock.text.description(index)\n}));\nexport const _carouselsMembers = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  role: _mock.role(index),\n  avatar: `https://minimal-assets-api-dev.vercel.app/assets/images/members/member-${index + 1}.jpg`\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _faqs = [...Array(8)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Questions ${index + 1}`,\n  detail: _mock.text.description(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _addressBooks = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  receiver: _mock.name.fullName(index),\n  fullAddress: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  addressType: index === 0 ? 'Home' : 'Office',\n  isDefault: index === 0\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _skills = [...Array(3)].map((_, index) => ({\n  label: ['Development', 'Design', 'Marketing'][index],\n  value: _mock.number.percent(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _accordions = [...Array(4)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Accordion ${index + 1}`,\n  subHeading: _mock.text.title(index),\n  detail: _mock.text.description(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _dataGrid = [...Array(36)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  email: _mock.email(index),\n  lastLogin: _mock.time(index),\n  performance: _mock.number.percent(index),\n  rating: _mock.number.rating(index),\n  status: randomInArray(['online', 'away', 'busy']),\n  isAdmin: _mock.boolean(index),\n  lastName: _mock.name.lastName(index),\n  firstName: _mock.name.firstName(index),\n  age: _mock.number.age(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _megaMenuProducts = [...Array(10)].map((_, index) => ({\n  name: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  path: '#'\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _contacts = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  username: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  address: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  email: _mock.email(index),\n  lastActivity: _mock.time(index),\n  status: randomInArray(['online', 'offline', 'away', 'busy']),\n  position: _mock.role(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _notifications = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: ['Your order is placed', 'Sylvan King', 'You have new message', 'You have new mail', 'Delivery processing'][index],\n  description: ['waiting for shipping', 'answered to your comment on the Minimal', '5 unread messages', 'sent from Guido Padberg', 'Your order is being shipped'][index],\n  avatar: [null, _mock.image.avatar(2), null, null, null][index],\n  type: ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'][index],\n  createdAt: _mock.time(index),\n  isUnRead: [true, true, false, false, false][index]\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _mapContact = [{\n  latlng: [33, 65],\n  address: _mock.address.fullAddress(1),\n  phoneNumber: _mock.phoneNumber(1)\n}, {\n  latlng: [-12.5, 18.5],\n  address: _mock.address.fullAddress(2),\n  phoneNumber: _mock.phoneNumber(2)\n}];","map":{"version":3,"names":["_mock","randomInArray","_carouselsExample","Array","map","_","index","id","title","text","image","feed","description","_carouselsMembers","name","fullName","role","avatar","_faqs","value","heading","detail","_addressBooks","receiver","fullAddress","address","phone","phoneNumber","addressType","isDefault","_skills","label","number","percent","_accordions","subHeading","_dataGrid","email","lastLogin","time","performance","rating","status","isAdmin","boolean","lastName","firstName","age","_megaMenuProducts","path","_contacts","username","lastActivity","position","_notifications","type","createdAt","isUnRead","_mapContact","latlng"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/_mock/_others.ts"],"sourcesContent":["import _mock from './_mock';\nimport { randomInArray } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _carouselsExample = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  description: _mock.text.description(index),\n}));\n\nexport const _carouselsMembers = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  role: _mock.role(index),\n  avatar: `https://minimal-assets-api-dev.vercel.app/assets/images/members/member-${index + 1}.jpg`,\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _faqs = [...Array(8)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Questions ${index + 1}`,\n  detail: _mock.text.description(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _addressBooks = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  receiver: _mock.name.fullName(index),\n  fullAddress: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  addressType: index === 0 ? 'Home' : 'Office',\n  isDefault: index === 0,\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _skills = [...Array(3)].map((_, index) => ({\n  label: ['Development', 'Design', 'Marketing'][index],\n  value: _mock.number.percent(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _accordions = [...Array(4)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Accordion ${index + 1}`,\n  subHeading: _mock.text.title(index),\n  detail: _mock.text.description(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _dataGrid = [...Array(36)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  email: _mock.email(index),\n  lastLogin: _mock.time(index),\n  performance: _mock.number.percent(index),\n  rating: _mock.number.rating(index),\n  status: randomInArray(['online', 'away', 'busy']),\n  isAdmin: _mock.boolean(index),\n  lastName: _mock.name.lastName(index),\n  firstName: _mock.name.firstName(index),\n  age: _mock.number.age(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _megaMenuProducts = [...Array(10)].map((_, index) => ({\n  name: _mock.text.title(index),\n  image: _mock.image.feed(index),\n  path: '#',\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _contacts = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  username: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  address: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  email: _mock.email(index),\n  lastActivity: _mock.time(index),\n  status: randomInArray(['online', 'offline', 'away', 'busy']),\n  position: _mock.role(index),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _notifications = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: [\n    'Your order is placed',\n    'Sylvan King',\n    'You have new message',\n    'You have new mail',\n    'Delivery processing',\n  ][index],\n  description: [\n    'waiting for shipping',\n    'answered to your comment on the Minimal',\n    '5 unread messages',\n    'sent from Guido Padberg',\n    'Your order is being shipped',\n  ][index],\n  avatar: [null, _mock.image.avatar(2), null, null, null][index],\n  type: ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'][index],\n  createdAt: _mock.time(index),\n  isUnRead: [true, true, false, false, false][index],\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _mapContact = [\n  {\n    latlng: [33, 65],\n    address: _mock.address.fullAddress(1),\n    phoneNumber: _mock.phoneNumber(1),\n  },\n  {\n    latlng: [-12.5, 18.5],\n    address: _mock.address.fullAddress(2),\n    phoneNumber: _mock.phoneNumber(2),\n  },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}