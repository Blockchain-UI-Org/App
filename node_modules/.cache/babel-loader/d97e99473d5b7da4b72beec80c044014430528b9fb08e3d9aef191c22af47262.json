{"ast":null,"code":"import { add } from 'date-fns';\nimport _mock from './_mock';\nimport { randomInArray, randomNumberRange } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _invoices = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  invoiceNumber: `${17048 + index}`,\n  taxes: 5,\n  discount: 10,\n  sent: randomNumberRange(1, 10),\n  subTotalPrice: _mock.number.price(index + 1),\n  totalPrice: _mock.number.price(index + 1),\n  createDate: add(new Date(), {\n    days: index,\n    hours: index\n  }),\n  dueDate: add(new Date(), {\n    days: index + 15,\n    hours: index\n  }),\n  status: randomInArray(['paid', 'unpaid', 'overdue', 'draft']),\n  invoiceFrom: {\n    id: _mock.id(index),\n    name: _mock.name.fullName(index),\n    address: _mock.address.fullAddress(index),\n    company: _mock.company(index),\n    email: _mock.email(index),\n    phone: _mock.phoneNumber(index)\n  },\n  invoiceTo: {\n    id: _mock.id(index + 1),\n    name: _mock.name.fullName(index + 1),\n    address: _mock.address.fullAddress(index + 1),\n    company: _mock.company(index + 1),\n    email: _mock.email(index + 1),\n    phone: _mock.phoneNumber(index + 1)\n  },\n  items: [...Array(3)].map((_, index) => ({\n    id: _mock.id(index),\n    title: _mock.text.title(index),\n    description: _mock.text.description(index),\n    quantity: 5,\n    price: _mock.number.price(index),\n    total: _mock.number.price(index),\n    service: randomInArray(['full stack development', 'backend development', 'ui design', 'ui/ux design', 'front end development'])\n  }))\n}));\nexport const _invoiceAddressFrom = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  address: _mock.address.fullAddress(index),\n  company: _mock.company(index),\n  email: _mock.email(index),\n  phone: _mock.phoneNumber(index)\n}));\nexport const _invoiceAddressTo = [...Array(16)].map((_, index) => ({\n  id: _mock.id(index + 1),\n  name: _mock.name.fullName(index + 1),\n  address: _mock.address.fullAddress(index + 1),\n  company: _mock.company(index + 1),\n  email: _mock.email(index + 1),\n  phone: _mock.phoneNumber(index + 1)\n}));","map":{"version":3,"names":["add","_mock","randomInArray","randomNumberRange","_invoices","Array","map","_","index","id","invoiceNumber","taxes","discount","sent","subTotalPrice","number","price","totalPrice","createDate","Date","days","hours","dueDate","status","invoiceFrom","name","fullName","address","fullAddress","company","email","phone","phoneNumber","invoiceTo","items","title","text","description","quantity","total","service","_invoiceAddressFrom","_invoiceAddressTo"],"sources":["/Users/christopherigbojekwe/Documents/work/web3ui/src/component/_mock/_invoice.ts"],"sourcesContent":["import { add } from 'date-fns';\nimport _mock from './_mock';\nimport { randomInArray, randomNumberRange } from './funcs';\n\n// ----------------------------------------------------------------------\n\nexport const _invoices = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  invoiceNumber: `${17048 + index}`,\n  taxes: 5,\n  discount: 10,\n  sent: randomNumberRange(1, 10),\n  subTotalPrice: _mock.number.price(index + 1),\n  totalPrice: _mock.number.price(index + 1),\n  createDate: add(new Date(), { days: index, hours: index }),\n  dueDate: add(new Date(), { days: index + 15, hours: index }),\n  status: randomInArray(['paid', 'unpaid', 'overdue', 'draft']),\n  invoiceFrom: {\n    id: _mock.id(index),\n    name: _mock.name.fullName(index),\n    address: _mock.address.fullAddress(index),\n    company: _mock.company(index),\n    email: _mock.email(index),\n    phone: _mock.phoneNumber(index),\n  },\n  invoiceTo: {\n    id: _mock.id(index + 1),\n    name: _mock.name.fullName(index + 1),\n    address: _mock.address.fullAddress(index + 1),\n    company: _mock.company(index + 1),\n    email: _mock.email(index + 1),\n    phone: _mock.phoneNumber(index + 1),\n  },\n  items: [...Array(3)].map((_, index) => ({\n    id: _mock.id(index),\n    title: _mock.text.title(index),\n    description: _mock.text.description(index),\n    quantity: 5,\n    price: _mock.number.price(index),\n    total: _mock.number.price(index),\n    service: randomInArray([\n      'full stack development',\n      'backend development',\n      'ui design',\n      'ui/ux design',\n      'front end development',\n    ]),\n  })),\n}));\n\nexport const _invoiceAddressFrom = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  address: _mock.address.fullAddress(index),\n  company: _mock.company(index),\n  email: _mock.email(index),\n  phone: _mock.phoneNumber(index),\n}));\n\nexport const _invoiceAddressTo = [...Array(16)].map((_, index) => ({\n  id: _mock.id(index + 1),\n  name: _mock.name.fullName(index + 1),\n  address: _mock.address.fullAddress(index + 1),\n  company: _mock.company(index + 1),\n  email: _mock.email(index + 1),\n  phone: _mock.phoneNumber(index + 1),\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}